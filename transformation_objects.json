{
  "lastUpdateTime": "2021-01-26 12:00:01",
  "projectName": "openpages",
  "jobName": "transformation_objects",
  "s3Bucket": "${s3Bucket}",
  "s3ProjectFolder": "${s3ProjectIntegrationFolder}",
  "projectDB": "${integrationDatabase}",
  "jobLogTableName": "job_log",
  "transformationParallelism": 6,
  "transformationMaxWaitTimeInMinutes": 60,
  "jobType":"daily",
  "sourceJoinSnapshotTablesList":"resrelationships,assettypes,resources,actors",
  "stepList": [
    {
      "stepDescription": "create sat_action",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_actionitem/",
          "viewName": "rt_actionitem",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/property_audit_trail/",
          "viewName": "property_audit_trail_full",
          "cacheFlag": "true"
        }, 
       {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "viewName": "i18n_int_enum_vals",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "true"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH action AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.actionitem_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_actionitem a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_actionitem')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
property_audit_trail AS (
SELECT a.* 
FROM property_audit_trail_full a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='property_audit_trail'
),
i18n AS (
SELECT a.* 
FROM i18n_int_enum_vals a WHERE batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals)
),
re AS 
(
SELECT * FROM resources
),
original_duedate As (
Select a.resourceid As resourceid, b.name00,
CASE
WHEN b.property_value = 'VALUE' THEN a.value
ELSE a.old_value
END As original_duedate,
a.modifydate
From property_audit_trail a
Inner Join (
Select Distinct a.resourceid, d.name00,
CASE
WHEN b.modifydate < c.modifydate THEN b.modifydate
ELSE c.modifydate
END modifydate,
CASE
WHEN b.modifydate < c.modifydate THEN 'VALUE' ELSE 'OLD_VALUE'
END As property_value
From property_audit_trail a
Left Outer Join (
Select a.resourceid, b.name00, MIN(a.modifydate) As modifydate
From property_audit_trail a
Inner Join action b On a.resourceid = b.actionitem_id
Where a.propertyname In ('Publish Status')
And value = '2'
--And b.name00 In ( 'ISS-0006051-ACT-0074807' )
Group By resourceid, b.name00
) b On a.resourceid = b.resourceid
Left Outer Join (
Select a.resourceid, b.name00, MIN(a.modifydate) As modifydate
From property_audit_trail a
Inner Join action b On a.resourceid = b.actionitem_id
Where a.propertyname In ('Publish Status')
And old_value = '2'
--And b.name00 In ( 'ISS-0006051-ACT-0074807' )
Group By resourceid, b.name00
) c On a.resourceid = c.resourceid
Inner Join action d On a.resourceid = d.actionitem_id
Where propertyname = 'Publish Status'
--And d.name00 In ( 'ISS-0006051-ACT-0074807' )
) b On a.resourceid = b.resourceid And a.modifydate = b.modifydate

Where a.propertyname = 'Due Date'
--And b.name00 In ( 'ISS-0006051-ACT-0074807' )
)
SELECT ra.actionitem_bk AS action_bk,
ra.actionitem_id AS action_id,
ra.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ra.parent_folder AS parent_folder_id,
ra.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ra.name00 AS action_name,
ra.description AS action_desc,
ra.full_path AS action_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/IssueActionItems/','/') AS resource_action_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/IssueActionItems/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/IssueActionItems/','/'), ra.name00)-2) As action_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/IssueActionItems/','/'),'/')[2] AS action_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/IssueActionItems/','/'),'/')[3] AS action_folder_division_name,
ra.creation_date AS creation_ts,
TO_DATE(ra.creation_date) AS creation_date,
ra.modification_date AS modification_ts,
TO_DATE(ra.modification_date) AS modification_date,
ra.detail_page_url AS action_op_url_text,
ra.acceptance_approved_by AS acceptance_approved_by_name,
TO_DATE(ra.acceptance_start_date) AS acceptance_start_date,
ra.accountable_manager AS accountable_manager_user_lanid_name,
lookupValueByUserList('actorinfo',ra.accountable_manager,'\\\\$;',',','n/a') AS accountable_manager_user_desc,
ra.action_closure_evidenc AS action_closure_evidence_text,
ra.action_owner AS action_owner_user_lanid_name,
lookupValueByUserList('actorinfo',ra.action_owner,'\\\\$;',',','n/a') AS action_owner_user_desc,
ra.action_priority AS action_priority_id,
lookupValueByIdList('i18n_int_enum_vals',ra.action_priority,'\\\\|',',','n/a') AS action_priority_desc,
ra.action_purpose AS action_purpose_id,
lookupValueByIdList('i18n_int_enum_vals',ra.action_purpose,'\\\\|',',','n/a') AS action_purpose_desc,
ra.action_title AS action_title_desc,
ra.action_type AS action_type_ids,
lookupValueByIdList('i18n_int_enum_vals',ra.action_type,'\\\\|',',','n/a') AS action_type_desc,
ra.actiondescription AS action_long_desc,
ra.actionnotificationdt AS action_notification_ts,
TO_DATE(ra.actionnotificationdt) AS action_notification_date,
ra.audaction_priority AS audit_action_priority_id,
lookupValueByIdList('i18n_int_enum_vals',ra.audaction_priority,'\\\\|',',','n/a') AS audit_action_priority_desc,
ra.audaction_title AS audit_action_title_desc,
ra.audagreed_action AS audit_agreed_action_desc,
TO_DATE(ra.auddue_date) AS audit_due_date,
ra.audpublishedstatus AS audit_publish_status_id,
lookupValueByIdList('i18n_int_enum_vals',ra.audpublishedstatus,'\\\\|',',','n/a')  AS audit_publish_status_desc,
ra.business_status AS business_status_id,
lookupValueByIdList('i18n_int_enum_vals',ra.business_status,'\\\\|',',','n/a') AS business_status_desc,
ra.closed_by AS closed_by_user_lanid_name,
lookupValueByUserList('actorinfo',ra.closed_by,'\\\\$;',',','n/a') AS closed_by_user_desc,
ra.das_id_reference AS das_id_reference_desc,
ra.date_closed AS closed_ts,
TO_DATE(ra.date_closed) AS closed_date,
TO_DATE(ra.due_date00) AS due_date,
ra.ext_id AS accelus_id_text,
TO_DATE(ra.follow_up_date) AS follow_up_date,
ra.follow_up_status AS follow_up_status_id,
lookupValueByIdList('i18n_int_enum_vals',ra.follow_up_status,'\\\\|',',','n/a') AS follow_up_status_desc,
ra.is_audit AS is_audit_flag_id,
lookupValueByIdList('i18n_int_enum_vals',ra.is_audit,'\\\\|',',','n/a') AS is_audit_flag,
ra.mg_comment AS mg_comment_text,
ra.mgt_intd_actn AS management_initiated_action_id,
lookupValueByIdList('i18n_int_enum_vals',ra.mgt_intd_actn,'\\\\|',',','n/a') AS management_initiated_action_flag,
ra.milestoneaction AS milestone_action_id,
lookupValueByIdList('i18n_int_enum_vals',ra.milestoneaction,'\\\\|',',','n/a')  AS milestone_action_flag,
ra.notify_action AS notify_action_id,
lookupValueByIdList('i18n_int_enum_vals',ra.notify_action,'\\\\|',',','n/a') AS notify_action_flag,
ra.publish_status AS publish_status_id,
lookupValueByIdList('i18n_int_enum_vals',ra.publish_status,'\\\\|',',','n/a') AS publish_status_desc,
TO_DATE(ra.published_date) AS published_date,
ra.reassigned_by AS reassigned_by_user_lanid_name,
lookupValueByUserList('actorinfo',ra.reassigned_by,'\\\\$;',',','n/a') AS reassigned_by_user_desc,
TO_DATE(ra.reopened_date) AS reopened_date,
ra.reopened_flag AS reopened_flag_id,
lookupValueByIdList('i18n_int_enum_vals',ra.reopened_flag,'\\\\|',',','n/a') AS reopened_flag_desc,
ra.reopened_reason AS reopened_reason_id,
lookupValueByIdList('i18n_int_enum_vals',ra.reopened_reason,'\\\\|',',','n/a')  AS reopened_reason_desc,
ra.responsible_borm AS responsible_borm_user_lanid_name,
lookupValueByUserList('actorinfo',ra.responsible_borm,'\\\\$;',',','n/a') AS responsible_borm_user_desc,
ra.risk_acceptance_type AS risk_acceptance_type_ids,
lookupValueByIdList('i18n_int_enum_vals',ra.risk_acceptance_type,'\\\\|',',','n/a') AS risk_acceptance_type_desc,
ra.ui_reassign AS ui_reassign_desc,
ori_due_date_calc.original_due_date AS original_due_date,
CASE WHEN UPPER (is_audit_i18n.lcltxt_name) = 'YES' THEN null
ELSE due_date_change_count.change_count
END As due_date_change_no,
DATEDIFF(current_date,TO_DATE(ra.creation_date)) AS action_days_since_creation_no,
DATEDIFF(current_date,TO_DATE(ra.due_date00)) AS action_days_till_due_no,
DATEDIFF(TO_DATE(ra.date_closed),TO_DATE(ra.creation_date)) AS action_days_creation_to_closed_no,
DATEDIFF(TO_DATE(ra.date_closed),TO_DATE(ra.due_date00)) AS action_days_closed_to_due_no,
DATEDIFF(current_date,TO_DATE(ra.acceptance_start_date)) AS action_days_today_to_acceptance_no,
ra.DISPOSALREASON AS disposal_reason_desc,
ra.DISPOSALFLAG AS disposal_flag_id,
lookupValueByIdList('i18n_int_enum_vals',ra.DISPOSALFLAG,'\\\\|',',','n/a') AS disposal_flag_desc,
TO_DATE(ra.DISPOSALDATE) AS disposal_date,
ra.DISPOSEDBY AS disposed_by_user_lanid_name,
lookupValueByUserList('actorinfo',ra.DISPOSEDBY,'\\\\$;',',','n/a') AS disposed_by_user_desc,
'openpages' AS source
FROM action ra
INNER JOIN
(
SELECT raa.actionitem_id,CASE WHEN ori_duedate.original_duedate is not null THEN to_date(ori_duedate.original_duedate) WHEN ori_duedate.original_duedate IS NULL AND ori_duedate1.original_duedate IS NOT NULL THEN to_date(ori_duedate1.original_duedate) WHEN ori_duedate.original_duedate IS NULL AND ori_duedate1.original_duedate IS NULL AND ori_duedate2.original_duedate IS NOT NULL THEN to_date(ori_duedate2.original_duedate) WHEN ori_duedate.original_duedate IS NULL AND ori_duedate1.original_duedate IS NULL AND ori_duedate2.original_duedate IS NULL AND ori_duedate3.original_duedate IS NOT NULL THEN to_date(ori_duedate3.original_duedate)
ELSE null END AS original_due_date
FROM 
action raa
LEFT OUTER JOIN
(Select a.actionitem_id As resourceid, a.name00,
CAST ( a.due_date00 As TIMESTAMP ) As original_duedate,
a.modification_date As modifydate
From action a
Inner Join i18n b On a.publish_status = b.enum_val_id And b.i18n_locale_id = 7 And b.lcltxt_name = 'Published'
Where a.actionitem_id Not In ( Select resourceid From property_audit_trail Where propertyname = 'Due Date' )
--And a.name00 In ( 'ISS-0006051-ACT-0074807' )

Union

Select a.actionitem_id As resourceid, a.name00,
CAST ( a.due_date00 As TIMESTAMP ) As original_duedate,
a.modification_date As modifydate
From action a
Inner Join i18n b On a.publish_status = b.enum_val_id And b.i18n_locale_id = 7 And b.lcltxt_name <> 'Published'
Where a.actionitem_id Not In ( Select resourceid From property_audit_trail Where propertyname = 'Due Date' )
And a.actionitem_id In ( Select resourceid From property_audit_trail Where propertyname = 'Publish Status' And old_value = '2' )
--And a.name00 In ( 'ISS-0006051-ACT-0074929' )
Union
Select a.resourceid, c.name00,
a.old_value As original_duedate,
a.modifydate
From property_audit_trail a
Inner Join ( Select resourceid, MIN(modifydate) modifydate From property_audit_trail
Where propertyname In ('Due Date')
--And resourceid = 837642
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate = b.modifydate
Inner Join action c On a.resourceid = c.actionitem_id
Inner Join i18n d On c.publish_status = d.enum_val_id And d.i18n_locale_id = 7 And d.lcltxt_name <> 'Published'
Where a.propertyname = 'Due Date'
And a.resourceid Not In ( Select resourceid From property_audit_trail Where propertyname = 'Publish Status' And value= '2' )
And a.resourceid In ( Select resourceid From property_audit_trail Where propertyname = 'Publish Status' And old_value = '2' )
--And c.name00 In ( 'ISS-0006051-ACT-0074954' )
Union
Select resourceid, name00, original_duedate, modifydate From (
--MIN(PUBLISHED) > MIN(DRAFT)
Select a.resourceid, c.name00, a.propertyname, a.modifydate,
a.old_value As original_duedate,
RANK () OVER (PARTITION BY a.resourceid ORDER BY a.modifydate Asc ) As rank_modifydate
From property_audit_trail a
Inner Join (
Select a.resourceid, min(a.modifydate) As modifydate, min(a.modifydate) As modifydate_a,
min(b.modifydate) As modifydate_b
From property_audit_trail a
Left Outer Join (
Select resourceid, min(modifydate) As modifydate
From property_audit_trail
Where propertyname = 'Publish Status'
And ( old_value <> '2' And value= '2' )
--And resourceid In ( 837643)
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate < b.modifydate
Where a.propertyname = 'Publish Status'
And ( a.old_value = '2' )
--And a.resourceid In ( 837643 )
Group By a.resourceid
) b On a.resourceid = b.resourceid And b.modifydate_B Is Not Null
Inner Join action c On a.resourceid = c.actionitem_id
Where a.propertyname = 'Due Date'
--And c.name00 In ( 'ISS-0006051-ACT-0074955' , 'ISS-0006051-ACT-0074954' )
) T1
Where rank_modifydate = 1) ori_duedate
ON
raa.actionitem_id=ori_duedate.resourceid
LEFT OUTER JOIN
(
Select * From (

Select a.resourceid, d.name00,
a.old_value As original_duedate,
a.modifydate
From property_audit_trail a
Inner Join ( Select resourceid, MIN(modifydate) modifydate From property_audit_trail
Where propertyname In ('Publish Status') And ( old_value = '2' )
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate = b.modifydate
Inner Join ( Select resourceid, MIN(modifydate) As MIN_modifydate,
MAX(modifydate) As MAX_modifydate
From property_audit_trail
Where propertyname In ('Due Date')
Group By resourceid ) c On a.resourceid = c.resourceid And a.modifydate = c.MIN_modifydate
Inner Join action d On a.resourceid = d.actionitem_id
Where a.propertyname = 'Due Date'
--And d.name00 In ( 'ISS-0006051-ACT-0074807' )

Union

Select a.resourceid, d.name00,
a.value As original_duedate,
a.modifydate
From property_audit_trail a
Inner Join ( Select resourceid, MIN(modifydate) modifydate From property_audit_trail
Where propertyname In ('Publish Status') And ( value = '2' )
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate = b.modifydate
Inner Join ( Select resourceid, MIN(modifydate) As MIN_modifydate
From property_audit_trail
Where propertyname In ('Due Date')
Group By resourceid) c On a.resourceid = c.resourceid And a.modifydate = c.MIN_modifydate
Inner Join action d On a.resourceid = d.actionitem_id
Where a.propertyname = 'Due Date'
--And d.name00 In ( 'ISS-0006051-ACT-0074807' )

Union

Select a.resourceid, d.name00,
a.old_value As original_duedate,
a.modifydate
From property_audit_trail a
Inner Join ( Select resourceid, MIN(modifydate) As MIN_modifydate
From property_audit_trail
Where propertyname In ('Due Date')
And resourceid Not In ( Select resourceid From property_audit_trail Where propertyname In ('Publish Status') )
Group By resourceid) c On a.resourceid = c.resourceid And a.modifydate = c.MIN_modifydate
Inner Join action d On a.resourceid = d.actionitem_id
Inner Join i18n e On d.PUBLISH_STATUS = e.ENUM_VAL_ID And e.I18N_LOCALE_ID = 7 And e.LCLTXT_NAME = 'Published'
Where a.propertyname = 'Due Date'
--And d.name00 In ( 'ISS-0006051-ACT-0074807' )
) T1
Where name00 Not In (Select name00 From original_duedate)
--And name00 In ( 'ISS-0006051-ACT-0074807' )

Union

Select * From original_duedate
--Where name00 In ( 'ISS-0006051-ACT-0074807' )
) ori_duedate1
ON 
raa.actionitem_id=ori_duedate1.resourceid
LEFT OUTER JOIN
(
Select * From (
Select a.resourceid, b.name00,
CASE
WHEN b.property_value In ( 'VALUE' , 'MAX_VALUE' ) THEN a.value
ELSE a.old_value
END As original_duedate,
a.modifydate,
b.property_value,

--RANK () OVER (PARTITION By a.resourceid Order By a.modifydate Desc) As rank_modifydate

CASE
WHEN b.property_value In ( 'VALUE' , 'MAX_VALUE' )
THEN ( RANK () OVER (PARTITION By a.resourceid Order By a.modifydate Desc) )
ELSE ( RANK () OVER (PARTITION By a.resourceid Order By a.modifydate Asc) )
END As rank_modifydate

From property_audit_trail a
Inner Join (
Select Distinct a.resourceid, d.name00, --TO_CHAR(b.modifydate, 'yyyy-mm-dd hh24:mi:ss'), TO_CHAR(c.modifydate, 'yyyy-mm-dd hh24:mi:ss'),
CASE
WHEN b.modifydate Is Null And c.modifydate Is Not Null THEN c.modifydate
WHEN b.modifydate Is Not Null And c.modifydate Is Null THEN b.modifydate
WHEN b.modifydate < c.modifydate THEN b.modifydate
ELSE c.modifydate
END modifydate,
CASE
WHEN b.modifydate Is Null And c.modifydate Is Not Null THEN 'MIN_OLD_VALUE'
WHEN b.modifydate Is Not Null And c.modifydate Is Null THEN 'MAX_VALUE'
WHEN b.modifydate < c.modifydate THEN 'VALUE'
ELSE 'OLD_VALUE'
END As property_value
From property_audit_trail a
Left Outer Join (
Select a.resourceid, b.name00, MIN(a.modifydate) As modifydate
From property_audit_trail a
Inner Join action b On a.resourceid = b.actionitem_id
Where a.propertyname In ('Publish Status')
And value = '2'
--And b.name00 In ( 'ISS-0006051-ACT-0074807' )
Group By resourceid, b.name00
) b On a.resourceid = b.resourceid
Left Outer Join (
Select a.resourceid, b.name00, MIN(a.modifydate) As modifydate
From property_audit_trail a
Inner Join action b On a.resourceid = b.actionitem_id
Where a.propertyname In ('Publish Status')
And old_value = '2'
--And b.name00 In ( 'ISS-0006051-ACT-0074807' )
Group By resourceid, b.name00
) c On a.resourceid = c.resourceid
Inner Join action d On a.resourceid = d.actionitem_id
Where propertyname = 'Publish Status'
--And d.name00 In ( 'ISS-0006051-ACT-0074807' )
) b On a.resourceid = b.resourceid And a.modifydate <= b.modifydate

Where a.propertyname = 'Due Date'
--And b.name00 In ( 'ISS-0006051-ACT-0074807' )
--Order By a.modifydate DESC
) T1

Where rank_modifydate = 1)ori_duedate2
ON 
raa.actionitem_id=ori_duedate2.resourceid
LEFT OUTER JOIN
(Select * From (
Select a.resourceid, b.name00,
a.old_value As original_duedate,
a.modifydate,
'VALUE' As property_value,
RANK () OVER (PARTITION BY a.resourceid ORDER BY a.modifydate Asc ) As rank_modifydate
From property_audit_trail a
Inner Join action b On a.resourceid = b.actionitem_id
Inner Join ( Select resourceid, MIN(modifydate) As modifydate
From property_audit_trail
Where propertyname = 'Publish Status' And value = 2
Group By resourceid
) c On a.resourceid = c.resourceid And a.modifydate > c.modifydate
Left Outer Join ( Select resourceid, MIN(modifydate) As modifydate
From property_audit_trail
Where propertyname = 'Publish Status' And value = 2
Group By resourceid
) d On a.resourceid = d.resourceid And a.modifydate < d.modifydate
Where a.propertyname = 'Due Date'
And d.resourceid Is NULL
--And b.name00 In ( 'ISS-0006051-ACT-0074933')

Union

--MIN(PUBLISHED) > MIN(DRAFT)
Select a.resourceid, c.name00,
a.old_value As original_duedate,
a.modifydate,
'OLD_VALUE' As property_value,
RANK () OVER (PARTITION BY a.resourceid ORDER BY a.modifydate Asc ) As rank_modifydate
From property_audit_trail a
Inner Join (
Select a.resourceid, min(a.modifydate) As modifydate, min(a.modifydate) As modifydate_A,
min(b.modifydate) As modifydate_B
From property_audit_trail a
Left Outer Join (
Select resourceid, min(modifydate) As modifydate
From property_audit_trail
Where propertyname = 'Publish Status'
And ( old_value <> '2' And value = '2' )
--And resourceid In ( 837643)
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate < b.modifydate
Where a.propertyname = 'Publish Status'
And ( a.old_value = '2' )
--And a.resourceid In ( 837643 )
Group By a.resourceid
) b On a.resourceid = b.resourceid And b.modifydate_B Is Not Null
Inner Join action c On a.resourceid = c.actionitem_id
Where a.propertyname = 'Due Date'
--And c.name00 = 'ISS-0006051-ACT-0074955'

) T2

Where rank_modifydate = 1 and original_duedate is not null)ori_duedate3
ON 
raa.actionitem_id=ori_duedate3.resourceid
GROUP BY raa.actionitem_id,original_due_date)ori_due_date_calc
ON ra.actionitem_id=ori_due_date_calc.actionitem_id
Left Outer Join i18n is_audit_i18n On ra.is_audit = is_audit_i18n.enum_val_id And is_audit_i18n.i18n_locale_id = 7

Left Outer Join (
Select a.actionitem_id As resourceid, c.change_count
From action a
Inner Join i18n_int_enum_vals b On a.publish_status = b.enum_val_id And b.i18n_locale_id = 7 And b.lcltxt_name = 'Published'
Inner Join (
Select resourceid, Count(*) As change_count
From property_audit_trail a
Where propertyname = 'Due Date'
Group By resourceid
) c On a.actionitem_id = c.resourceid
Where a.actionitem_id Not In ( Select resourceid From property_audit_trail Where PROPERTYDEFID = 113 )

Union

Select resourceid, Count(*) As change_count
From (
--MIN(PUBLISHED) > MIN(DRAFT)
Select a.resourceid, a.propertyname, a.modifydate
From property_audit_trail a
Inner Join (
Select a.resourceid, min(a.modifydate) As modifydate, min(a.modifydate) As modifydate_a,
min(b.modifydate) As modifydate_b
From property_audit_trail a
Left Outer Join (
Select resourceid, min(modifydate) As modifydate
From property_audit_trail
Where propertyname = 'Publish Status'
And ( old_value <> '2' And value = '2' )
--And resourceid In ( 837788 , 837789 , 837544 )
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate < b.modifydate
Where a.propertyname = 'Publish Status'
And ( a.old_value = '2' )
--And a.resourceid In ( 837788 , 837789 , 837544 )
Group By a.resourceid
) b On a.resourceid = b.resourceid And b.modifydate_b Is Not Null

Where a.propertyname = 'Due Date'
--And a.resourceid In ( 837788 , 837789 , 837544 )

Union

--MIN(DRAFT) > MIN(PUBLISHED)
Select a.resourceid, a.propertyname, a.modifydate
From property_audit_trail a
Inner Join (
Select a.resourceid, min(a.modifydate) As modifydate, min(a.modifydate) As modifydate_a,
min(b.modifydate) As modifydate_b
From property_audit_trail a
Left Outer Join (
Select resourceid, min(modifydate) As modifydate
From property_audit_trail
Where propertyname = 'Publish Status'
And ( old_value <> '2' And value = '2' )
--And resourceid In ( 837788 , 837789 , 837544 )
Group By resourceid
) b On a.resourceid = b.resourceid And a.modifydate < b.modifydate
Where a.propertyname = 'Publish Status'
And ( a.old_value = '2' Or a.value = '2' )
--And a.resourceid In ( 837788 , 837789 , 837544 )
Group By a.resourceid
) b On a.resourceid = b.resourceid And b.modifydate_b Is Null
Where a.propertyname = 'Due Date'
--And a.resourceid In ( 837788 , 837789 , 837544 )
And a.modifydate > b.modifydate

Union

-- MIN(PUBLISHED) Without PUBLISHED old_value
Select a.resourceid, a.propertyname, a.modifydate
From property_audit_trail a
Inner Join (
Select a.resourceid, min(a.modifydate) As modifydate, min(a.modifydate) As modifydate_a
From property_audit_trail a
Where a.propertyname = 'Publish Status'
And ( a.value = '2' )
And resourceid Not In ( Select resourceid From property_audit_trail Where propertyname = 'Publish Status' And ( old_value = '2' ) )
--And a.resourceid In ( 837788 , 837789 , 837544 , 837641 )
Group By a.resourceid

) b On a.resourceid = b.resourceid

Where a.propertyname = 'Due Date'
--And a.resourceid In ( 837788 , 837789 , 837544 , 837641 )
And a.modifydate > b.modifydate

Union

Select a.resourceid, a.propertyname, a.modifydate
From property_audit_trail a
Where a.propertyname = 'Due Date'
And a.resourceid Not In ( Select resourceid From property_audit_trail Where propertyname = 'Publish Status' And value = '2' )
And a.resourceid In ( Select resourceid From property_audit_trail Where propertyname = 'Publish Status' And old_value = '2' )
--And a.resourceid In ( 837790 )

) T1
Group By resourceid ) due_date_change_count ON due_date_change_count.resourceid = ra.actionitem_id
LEFT JOIN ai ai_creator
ON ra.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ra.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ra.actionitem_id=re.resourceid
WHERE re.isdeleted = 0
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_action"
    },
    {
      "stepDescription": "create sat_control",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_control/",
          "viewName": "rt_control",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "true"
        }
      ],
      "sourceJoinSQL": "
WITH control AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.control_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_control a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_control')c WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
c.control_bk,c.control_id,c.creator AS created_by_user_id,ai_creator.name AS created_by_user_lanid_name,ai_creator.description AS created_by_user_desc,c.parent_folder AS parent_folder_id,c.checked_in_by AS last_modified_by_user_id,ai_checked_in_by.name AS last_modified_by_user_lanid_name,ai_checked_in_by.description AS last_modified_by_user_desc,c.name00 AS control_name,c.description AS control_desc, c.full_path AS control_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Controls/','/') AS resource_control_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Controls/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Controls/','/'), c.name00)-2) As control_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Controls/','/'),'/')[2] AS control_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Controls/','/'),'/')[3] AS control_folder_division_name,
c.creation_date AS creation_ts, TO_DATE(c.creation_date) AS creation_date,c.modification_date AS modification_ts,TO_DATE(c.modification_date) AS modification_date,c.detail_page_url AS control_op_url_text, c.cntrl_eval_dtl AS control_evaluation_detail_desc,c.control_area AS control_area_id, lookupValueByIdList('i18n_int_enum_vals',c.control_area,'\\\\|',',','n/a') AS control_area_name,c.control_classification AS control_classification_id,lookupValueByIdList('i18n_int_enum_vals',c.control_classification ,'\\\\|',',','n/a') AS control_classification_desc,c.control_design AS control_design_id, lookupValueByIdList('i18n_int_enum_vals',c.control_design,'\\\\|',',','n/a') as control_design_desc,c.control_effectiveness AS control_effectiveness_id, lookupValueByIdList('i18n_int_enum_vals',c.control_effectiveness,'\\\\|',',','n/a') AS control_effectiveness_desc,c.control_evaluation AS control_evaluation_id, lookupValueByIdList('i18n_int_enum_vals',c.control_evaluation,'\\\\|',',','n/a') AS control_evaluation_desc,c.control_family AS control_family_desc, c.control_owner AS control_owner_lanid_name,lookupValueByUserList('actorinfo',c.control_owner,'\\\\$;',',','n/a') AS control_owner_desc, split(lookupValueByUserList('actorinfo',c.control_owner,'\\\\$;',',','n/a'),'- ')[2] AS control_owner_group_name,split(lookupValueByUserList('actorinfo',c.control_owner,'\\\\$;',',','n/a'),'- ')[3] AS control_owner_division_name, c.control_performance AS control_performance_id,
lookupValueByIdList('i18n_int_enum_vals',c.control_performance,'\\\\|',',','n/a') AS control_performance_desc,c.control_status AS control_status_id,lookupValueByIdList('i18n_int_enum_vals',c.control_status,'\\\\|',',','n/a') AS control_status_desc,c.control_type AS control_type_ids, 
lookupValueByIdList('i18n_int_enum_vals',c.control_type,'\\\\|',',','n/a') AS control_type_desc,c.control_weight AS control_weighting_id,lookupValueByIdList('i18n_int_enum_vals',c.control_weight,'\\\\|',',','n/a') AS control_weighting_desc,c.control_working AS control_working_desc,c.controldescr AS control_long_desc,c.ctl_manual_action_othe AS control_manual_action_other_desc, c.ctl_manual_actions AS control_manual_action_id,lookupValueByIdList('i18n_int_enum_vals',c.ctl_manual_actions,'\\\\|',',','n/a') AS control_manual_action_desc,c.ctl_manual_appropria00 AS control_manual_appropriate_reason_id,lookupValueByIdList('i18n_int_enum_vals',c.ctl_manual_appropria00,'\\\\|',',','n/a') AS control_manual_appropriate_reason_desc,c.ctl_manual_appropria01 AS control_manual_other_reason_desc,c.ctl_manual_appropriate AS is_control_manual_appropriate_id,lookupValueByIdList('i18n_int_enum_vals',c.ctl_manual_appropriate,'\\\\|',',','n/a') AS is_control_manual_appropriate_flag,c.ctl_mapping_status AS control_mapping_status_id,lookupValueByIdList('i18n_int_enum_vals',c.ctl_mapping_status,'\\\\|',',','n/a') AS control_mapping_status_name, c.email_rem AS monthly_email_reminder_id,lookupValueByIdList('i18n_int_enum_vals',c.email_rem,'\\\\|',',','n/a') AS monthly_email_reminder_desc,c.eval_comp AS evaluation_complete_id,lookupValueByIdList('i18n_int_enum_vals',c.eval_comp,'\\\\|',',','n/a') AS evaluation_complete_desc,c.eval_period AS evaluation_period_id, lookupValueByIdList('i18n_int_enum_vals',c.eval_period ,'\\\\|',',','n/a') AS evaluation_period_desc,c.external_reference AS external_reference_name, c.frequency AS frequency_id,lookupValueByIdList('i18n_int_enum_vals',c.frequency,'\\\\|',',','n/a') AS frequency_desc,c.it_system AS it_system_name,c.level_ctl_automation AS level_control_automation_id,lookupValueByIdList('i18n_int_enum_vals',c.level_ctl_automation,'\\\\|',',','n/a') AS level_control_automation_desc,c.lib_ctl_classification AS library_control_classification_id,lookupValueByIdList('i18n_int_enum_vals',c.lib_ctl_classification,'\\\\|',',','n/a') AS library_control_classification_desc,c.lib_ctl_description AS library_control_desc,c.lib_ctl_design_criteri AS library_control_design_criteria_desc,c.lib_ctl_name AS library_control_name,c.lib_ctl_objective AS library_control_objective,c.library_id ,TO_DATE(c.next_eval_due_dt) AS next_evaluation_due_date,c.reasonconeffect AS control_effectiveness_reason_desc,c.source00 AS source_id,lookupValueByIdList('i18n_int_enum_vals',c.source00 ,'\\\\|',',','n/a') AS source_name,c.rootcausecat AS root_cause_category_id,lookupValueByIdList('i18n_int_enum_vals',c.rootcausecat ,'\\\\|',',','n/a') AS root_cause_category_desc,c.ctrlalignlink AS control_library_helper_text,c.libstatus AS control_library_mapping_status_id,lookupValueByIdList('i18n_int_enum_vals',c.libstatus,'\\\\|',',','n/a') AS control_library_mapping_status_desc,c.eventtax AS risk_event_hierarchy_ids,lookupValueByIdList('i18n_int_enum_vals',c.eventtax,'\\\\|',',','n/a') AS risk_event_hierarchy_desc,
c.lib_ctl_area as library_control_area_id,
lookupValueByIdList('i18n_int_enum_vals',c.lib_ctl_area,'\\\\|',',','n/a') AS library_control_area_desc,
TO_DATE(c.ctrlassessdate) as last_tested_date,
c.library_owner as library_owner_user_lanid_name,
lookupValueByUserList('actorinfo',c.library_owner,'\\\\$;',',','n/a') as library_owner_user_desc,
'Openpages' AS source
FROM control c
LEFT JOIN ai ai_creator
ON c.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON c.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON c.control_id=re.resourceid
WHERE re.isdeleted = 0
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_control"
    },
{
      "stepDescription": "create sat_issue",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_issue/",
          "viewName": "rt_issue",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_system_workflow_fields/",
          "viewName": "rt_system_workflow_fields",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actors/",
          "viewName": "actors",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH issue AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.issue_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_issue a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_issue')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
actors AS
(
SELECT * FROM actors
),
ai_actors AS
(
SELECT ai.name, ai.description,actors.namespaceid ,actors.type
FROM ai
LEFT OUTER JOIN
actors
ON ai.actorid=actors.actorid
),
system_workflow_fields AS 
(
SELECT CASE WHEN ai_assignee.type=2 or ai_assignee.namespaceid=2 THEN i.wf_assignee_name ELSE ai_assignee.description END AS assignee_names_user_desc_raw,CASE WHEN ai_subscriber.type=2 or ai_subscriber.namespaceid=2 THEN i.wf_copied_user_name ELSE ai_subscriber.description END AS subscriber_names_user_desc_raw,CASE WHEN ai_last_action_user.type=2 or ai_last_action_user.namespaceid=2 THEN i.wf_last_action_user_name ELSE ai_last_action_user.description END AS last_action_user_desc,wf_resource_id,wf_assignee_name,wf_copied_user_name,wf_last_action_user_name,wf_process_definition_name,wf_process_start_date,wf_action_comment
FROM
(
SELECT *,dense_rank() OVER (PARTITION BY wf_resource_id ORDER BY wf_process_instance_id desc,wf_activity_instance_id desc) AS row_nbr FROM rt_system_workflow_fields WHERE batch_id IN (SELECT max(distinct batch_id) FROM rt_system_workflow_fields) and  wf_process_state=1
)i 
left outer join ai_actors ai_assignee
on i.wf_assignee_name=ai_assignee.name
left outer join ai_actors ai_subscriber
on i.wf_copied_user_name=ai_subscriber.name
left outer join ai_actors ai_last_action_user
on i.wf_last_action_user_name=ai_last_action_user.name
WHERE row_nbr=1
),
sys_wf AS (
SELECT
wf_resource_id, concat_ws(',', collect_list(distinct wf_assignee_name)) as assignee_names,concat_ws(',', collect_list(distinct wf_copied_user_name)) as subscriber_names,concat_ws(',', collect_list(distinct assignee_names_user_desc_raw)) as assignee_names_user_desc,concat_ws(',', collect_list(distinct subscriber_names_user_desc_raw)) as subscriber_names_user_desc,concat_ws(',', collect_list(distinct wf_process_definition_name)) as system_workflow_name,concat_ws(',', collect_list(distinct wf_process_start_date)) as system_workflow_start_ts,concat_ws(',', collect_list(distinct TO_DATE(wf_process_start_date))) as system_workflow_start_date,concat_ws(',', collect_list(distinct wf_last_action_user_name)) as system_workflow_last_action_user_lanid_name,concat_ws(',', collect_list(distinct last_action_user_desc)) as  system_workflow_last_action_user_desc,concat_ws(',', collect_list(distinct wf_action_comment)) as system_workflow_action_comment
from system_workflow_fields
group by  wf_resource_id
)
SELECT
i.issue_bk AS issue_bk,
i.issue_id AS issue_id,
i.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
i.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
i.full_path AS issue_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/Issue/','/') AS resource_issue_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/Issue/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/Issue/','/'), i.name00)-2) As issue_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/Issue/','/'),'/')[2] AS issue_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/Issue/','/'),'/')[3] AS issue_folder_division_name,
i.control_area AS control_area_id,
lookupValueByIdList('i18n_int_enum_vals',i.control_area ,'\\\\|',',','n/a') AS control_area_desc,
i.impactexthses AS external_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactexthses,'\\\\|',',','n/a') AS external_hses_impact_level_desc,
i.impactfin AS Internal_financial_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactfin,'\\\\|',',','n/a')  AS internal_financial_impact_level_desc,
i.impactmkt AS external_markets_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactmkt,'\\\\|',',','n/a')  AS external_markets_impact_level_desc,
i.is_audit AS is_audit_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.is_audit,'\\\\|',',','n/a')  AS is_audit_flag,
i.parent_folder AS parent_folder_id,
i.risktaxl2 AS risk_event_category_l2_id,
lookupValueByIdList('i18n_int_enum_vals',i.risktaxl2,'\\\\|',',','n/a')  AS risk_event_category_l2_desc,
i.risktaxl3 AS risk_event_category_l3_id,
lookupValueByIdList('i18n_int_enum_vals',i.risktaxl3,'\\\\|',',','n/a')  AS risk_event_category_l3_desc,
i.source00 AS source_id,
lookupValueByIdList('i18n_int_enum_vals',i.source00,'\\\\|',',','n/a')  AS source_name,
TO_DATE(i.follow_up_date) AS follow_up_date,
i.modification_date AS modification_ts,
TO_DATE(i.modification_date) AS modification_date,
i.risktaxl1 AS risk_event_category_l1_id,
lookupValueByIdList('i18n_int_enum_vals',i.risktaxl1,'\\\\|',',','n/a')   AS risk_event_category_l1_desc,
i.audparent_risk_cat AS audit_parent_risk_category_id,
lookupValueByIdList('i18n_int_enum_vals',i.audparent_risk_cat,'\\\\|',',','n/a')  AS audit_parent_risk_category_name,
i.ext_id AS ext_id,
i.external_reference AS external_reference_desc,
i.issue_closed_by AS issue_closed_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.issue_closed_by,'\\\\$;',',','n/a') AS issue_closed_by_user_desc,
TO_DATE(i.issue_due_date) AS issue_due_date,
i.issue_owner AS issue_owner_lanid_name,
lookupValueByUserList('actorinfo',i.issue_owner,'\\\\$;',',','n/a') AS issue_owner_desc,
i.milestoneactinc AS milestoneactinc_id,
lookupValueByIdList('i18n_int_enum_vals',i.milestoneactinc,'\\\\|',',','n/a')  AS milestoneactinc_desc,
i.parent_risk_cat AS parent_risk_cat_id,
lookupValueByIdList('i18n_int_enum_vals',i.parent_risk_cat,'\\\\|',',','n/a')  AS parent_risk_category_desc,
i.follow_up_status AS follow_up_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.follow_up_status,'\\\\|',',','n/a')  AS follow_up_status_desc,
i.impactint AS internal_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactint,'\\\\|',',','n/a')  AS internal_impact_desc,
i.impactinthses AS internal_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactinthses,'\\\\|',',','n/a')  AS internal_hses_impact_desc,
i.issue_owner_comments AS issue_owner_comments_text,
i.parent_risk AS parent_risk_id,
lookupValueByIdList('i18n_int_enum_vals',i.parent_risk,'\\\\|',',','n/a')  AS parent_risk_desc,
i.detail_page_url AS issue_op_url_text,
i.issue_root_cause_cat AS issue_root_cause_category_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_root_cause_cat,'\\\\|',',','n/a')  AS issue_root_cause_category_name,
i.issue_status AS issue_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_status,'\\\\|',',','n/a')   AS issue_status_desc,
i.publish_status AS publish_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.publish_status,'\\\\|',',','n/a')  AS publish_status_desc,
i.repeated_issue AS repeated_issue_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.repeated_issue,'\\\\|',',','n/a') AS repeated_issue_flag,
i.creation_date AS creation_ts,
TO_DATE(i.creation_date) AS creation_date,
i.audparent_risk AS audit_parent_risk_id,
lookupValueByIdList('i18n_int_enum_vals',i.audparent_risk,'\\\\|',',','n/a')  AS audit_parrent_risk_desc,
i.impactreg AS impact_regulatory_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactreg,'\\\\|',',','n/a')  AS impact_regulatory_desc,
i.impactrep AS impact_reputation_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactrep,'\\\\|',',','n/a')   AS impact_reputation_desc,
i.issue_type AS issue_type_ids,
lookupValueByIdList('i18n_int_enum_vals',i.issue_type,'\\\\|',',','n/a')  AS issue_type_desc,
i.library_id AS library_id,
i.reopened_flag AS closure_rejected_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.reopened_flag,'\\\\|',',','n/a')  AS closure_rejected_flag,
i.description AS issue_desc,
i.audcontrol_area AS audit_control_area_id,
lookupValueByIdList('i18n_int_enum_vals',i.audcontrol_area,'\\\\|',',','n/a')  AS audit_control_area_desc,
i.audissuepublishstatus AS audit_issue_publish_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.audissuepublishstatus,'\\\\|',',','n/a')  AS audit_issue_publish_status_desc,
i.impactcat AS impact_category_ids,
lookupValueByIdList('i18n_int_enum_vals',i.impactcat,'\\\\|',',','n/a')  AS impact_category_desc,
i.impactclient AS impact_client_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactclient,'\\\\|',',','n/a')  AS impact_client_desc,
i.issue_closed_date AS issue_closed_ts,
TO_DATE(i.issue_closed_date) AS issue_closed_date,
i.issue_identification AS issue_identification_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_identification,'\\\\|',',','n/a')   AS issue_identification_desc,
i.issue_theme AS issue_theme_desc,
TO_DATE(i.reopened_date) AS rejected_date,
i.name00 AS issue_name,
TO_DATE(i.original_due_date) AS original_due_date,
CAST(nbrduedatechg AS INT) AS due_date_change_no,
i.eff_managed AS effectively_managed_id,
lookupValueByIdList('i18n_int_enum_vals',i.eff_managed,'\\\\|',',','n/a')   AS effectively_managed_flag,
i.escalateflag AS escalate_hr_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.escalateflag,'\\\\|',',','n/a')   AS escalate_hr_flag,
i.ext_rating AS ext_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.ext_rating,'\\\\|',',','n/a')  AS ext_rating_desc,
i.external_reference_typ AS external_reference_type_id,
lookupValueByIdList('i18n_int_enum_vals',i.external_reference_typ,'\\\\|',',','n/a') AS external_reference_type_desc,
i.isolated AS isolated_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.isolated,'\\\\|',',','n/a') AS isolated_flag,
i.issue_control_breakdow AS issue_control_breakdown_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_control_breakdow,'\\\\|',',','n/a') AS issue_control_breakdown_desc,
i.reopened_reason AS rejected_reason_id,
lookupValueByIdList('i18n_int_enum_vals',i.reopened_reason,'\\\\|',',','n/a') AS rejected_reason_desc,
i.issue_title AS issue_title_desc,
i.audissue_priority AS audit_issue_priority_id,
lookupValueByIdList('i18n_int_enum_vals',i.audissue_priority,'\\\\|',',','n/a') AS audit_issue_priority_desc,
i.issue_description AS issue_long_desc,
i.audissue_finding AS audit_issue_finding_desc,
i.audissue_title AS audit_issue_title_name,
i.issue_priority AS issue_priority_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_priority,'\\\\|',',','n/a')  AS issue_priority_desc,
i.issue_root_cause_sub_c AS issue_root_cause_sub_category_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_root_cause_sub_c,'\\\\|',',','n/a')  AS issue_root_cause_sub_category_desc,
i.respindiv AS responsible_individual_desc,
i.addtl_issue_type AS additional_issue_type_ids,
lookupValueByIdList('i18n_int_enum_vals',i.addtl_issue_type,'\\\\|',',','n/a') AS additional_issue_type_desc,
TO_DATE(i.approval_11_date) AS risk_manager_approved_date,
TO_DATE(i.approval_12_date) AS rmg_or_iad_validated_date,
i.approver11 AS risk_manager_approver_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver11,'\\\\$;',',','n/a') AS risk_manager_approver_user_desc,
i.approver11flag AS risk_manager_approval_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver11flag,'\\\\|',',','n/a')  AS risk_manager_approval_flag,
i.approver11rep AS nominated_risk_manager_approver_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver11rep,'\\\\$;',',','n/a')  AS nominated_risk_manager_approver_user_desc,
i.approver12 AS rmg_or_iad_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver12,'\\\\$;',',','n/a') AS rmg_or_iad_validated_by_user_desc,
i.approver12flag AS rmg_or_iad_validation_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver12flag,'\\\\|',',','n/a') AS rmg_or_iad_validation_flag,
i.approver12rep AS nominated_rmg_or_iad_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver12rep,'\\\\$;',',','n/a') AS nominated_rmg_or_iad_representative_user_desc,
i.audit_owner AS audit_owner_lanid_name,
lookupValueByUserList('actorinfo',i.audit_owner,'\\\\$;',',','n/a')  AS audit_owner_desc,
i.borm_app_sub_by AS submitted_for_rm_approval_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.borm_app_sub_by,'\\\\$;',',','n/a') AS submitted_for_rm_approval_by_user_desc,
TO_DATE(i.borm_app_sub_date) AS submitted_for_rm_approval_date,
i.borm_comments AS risk_manager_comments_text,
i.closure_test_sub_by AS submitted_for_issue_closure_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.closure_test_sub_by,'\\\\$;',',','n/a') AS submitted_for_issue_closure_by_user_desc,
TO_DATE(i.closure_test_sub_date) AS submitted_for_issue_closure_date,
i.closure_testing_reqd AS closure_testing_required_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.closure_testing_reqd,'\\\\|',',','n/a') AS closure_testing_required_flag,
i.comment00 AS validation_commentary_text,
i.comment_history AS comment_history_text,
i.conduct_issue_rating AS conduct_issue_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.conduct_issue_rating,'\\\\|',',','n/a') AS conduct_issue_rating_desc,
i.duedate_app_sub_by AS submitted_for_due_date_approval_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.duedate_app_sub_by,'\\\\$;',',','n/a') AS submitted_for_due_date_approval_by_user_desc,
TO_DATE(i.duedate_app_sub_date) AS submitted_for_due_date_approval_date,
i.duedateextapproval AS confirm_due_date_extension_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.duedateextapproval,'\\\\|',',','n/a') AS confirm_due_date_extension_flag,
i.duedateextapprover AS due_date_extension_approver_user_lanid_name,
lookupValueByUserList('actorinfo',i.duedateextapprover,'\\\\$;',',','n/a') AS due_date_extension_approver_user_desc,
i.duedateextrationale AS due_date_extension_rationale_text,
i.evidenceissueclosure AS supporting_closure_evidence_text,
TO_DATE(i.expected_closure_date) AS expected_closure_date,
TO_DATE(i.expected_io_app_date) AS expected_issue_owner_approval_date,
i.hr_commentary AS hr_commentary_text,
i.hr_eng_sub_by AS submitted_for_hr_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.hr_eng_sub_by,'\\\\$;',',','n/a') AS submitted_for_hr_by_user_desc,
TO_DATE(i.hr_eng_sub_date) AS submitted_for_hr_date,
i.hr_review AS hr_review_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.hr_review,'\\\\|',',','n/a')  AS hr_review_flag,
i.iss_delete_by AS issue_deleted_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.iss_delete_by,'\\\\$;',',','n/a')  AS issue_deleted_by_user_desc,
To_DATE(i.iss_delete_date) AS issue_delete_date,
i.iss_delete_reason AS issue_delete_reason_text,
i.iss_owner_attest AS issue_owner_attestation_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.iss_owner_attest,'\\\\|',',','n/a') AS issue_owner_attestation_flag,
i.issue_closure_status AS issue_closure_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.issue_closure_status,'\\\\|',',','n/a') AS issue_closure_status_desc,
TO_DATE(i.issue_detect_date) AS issue_detect_date,
i.issue_manager AS issue_manager_lanid_name,
lookupValueByUserList('actorinfo',i.issue_manager,'\\\\$;',',','n/a') AS issue_manager_desc,
TO_DATE(i.issue_open_date) AS issue_open_date,
i.issue_opened_by AS issue_opened_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.issue_opened_by,'\\\\$;',',','n/a') AS issue_opened_by_user_desc,
i.issue_summary AS issue_summary_text,
i.issuelikelihood AS issue_likelyhood_id,
lookupValueByIdList('i18n_int_enum_vals',i.issuelikelihood,'\\\\|',',','n/a') AS issue_likelyhood_desc,
i.material_issue AS material_issue_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.material_issue,'\\\\|',',','n/a') AS material_issue_flag,
TO_DATE(i.old_due_date) AS old_due_date,
i.orig_issue_rating AS highest_issue_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.orig_issue_rating,'\\\\|',',','n/a') AS highest_issue_rating_no,
i.prev_closure_stat AS previous_closure_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.prev_closure_stat,'\\\\|',',','n/a') AS previous_closure_status_desc,
TO_DATE(i.proposed_due_date) AS proposed_due_date,
i.repeat_issue_ref AS repeat_issue_reference_desc,
i.rmg_val_by AS submitted_for_rmg_validation_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.rmg_val_by,'\\\\$;',',','n/a')  AS submitted_for_rmg_validation_by_user_desc,
TO_DATE(i.rmg_val_date) AS submitted_for_rmg_validation_date,
DATEDIFF(current_date,TO_DATE(i.creation_date)) AS issue_days_since_creation_no,
DATEDIFF(current_date,TO_DATE(i.issue_due_date)) AS issue_days_till_due_no,
DATEDIFF(TO_DATE(i.issue_closed_date),TO_DATE(i.creation_date)) AS issue_days_creation_to_closed_no,
DATEDIFF(TO_DATE(i.issue_closed_date),TO_DATE(i.issue_due_date)) AS issue_days_closed_to_due_no,
sys_wf.assignee_names as system_workflow_assignees,
sys_wf.subscriber_names as system_workflow_subscribers,
sys_wf.system_workflow_name as system_workflow_name,
sys_wf.system_workflow_last_action_user_lanid_name as system_workflow_last_action_user_lanid_name,
sys_wf.system_workflow_last_action_user_desc as system_workflow_last_action_user_desc,
sys_wf.system_workflow_action_comment as system_workflow_action_comment,
sys_wf.assignee_names_user_desc as system_workflow_assignee_names_user_desc,
sys_wf.subscriber_names_user_desc as system_workflow_subscriber_names_user_desc,
i.initialissuerating as original_issue_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.initialissuerating,'\\\\|',',','n/a') AS original_issue_rating_desc,
i.issueresponse as issue_response_id,
lookupValueByIdList('i18n_int_enum_vals',i.issueresponse,'\\\\|',',','n/a') AS issue_response_desc,
i.impactintwhs as internal_whs_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactintwhs,'\\\\|',',','n/a') AS internal_whs_desc,
i.impactextwhs as external_whs_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactextwhs,'\\\\|',',','n/a') AS external_whs_desc,
TO_DATE(i.IM_REVIEW_SUB_DATE) AS issue_manager_review_submitted_date,
i.DISPOSEDBY AS disposed_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.DISPOSEDBY,'\\\\$;',',','n/a') AS disposed_by_user_desc,
i.DISPOSALREASON AS disposal_reason_desc,
i.ISSUEWORKFLOWFLAG AS issue_workflow_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.ISSUEWORKFLOWFLAG,'\\\\|',',','n/a') AS issue_workflow_flag_desc,
i.CHNGSUBCATFLAG AS change_in_sub_category_id,
lookupValueByIdList('i18n_int_enum_vals',i.CHNGSUBCATFLAG,'\\\\|',',','n/a') AS change_in_sub_category_desc,
TO_DATE(i.DISPOSALDATE) AS disposal_date,
i.ORIGISSUESUBCAT AS original_issue_sub_category_desc,
i.IM_REVIEW_SUB_BY AS im_review_submitted_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.IM_REVIEW_SUB_BY,'\\\\$;',',','n/a') AS im_review_submitted_by_user_desc,
i.DISPOSALFLAG AS disposal_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.DISPOSALFLAG,'\\\\|',',','n/a') AS disposal_flag_desc,
i.CHNGRATINGFLAG AS change_in_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.CHNGRATINGFLAG,'\\\\|',',','n/a') AS change_in_rating_desc,
'Openpages' AS source
FROM issue i
LEFT JOIN ai ai_creator
ON i.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON i.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON i.issue_id=re.resourceid
LEFT JOIN sys_wf 
ON i.issue_id=sys_wf.wf_resource_id
WHERE re.isdeleted = 0",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_issue"
    },
{
      "stepDescription": "create sat_incident",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_lossevent/",
          "viewName": "rt_lossevent",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH incident AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.lossevent_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_lossevent a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_lossevent' )i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
incident_trans AS (
SELECT
i.incident_bk AS incident_bk,
i.lossevent_id AS incident_id,
i.full_path AS incident_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Loss Events','') AS resource_incident_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Loss Events',''),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Loss Events',''), i.name00)-2) As incident_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Loss Events',''),'/')[2] AS incident_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Loss Events',''),'/')[3] AS incident_folder_division_name,
i.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
i.ins_rec_amt AS insurance_recovery_amt,
i.lic_breach_class AS licence_breach_class_desc,
TO_DATE(i.oprsk_bd_rpt_dt) AS op_risk_board_report_date,
i.overall_inc_sig AS overall_incident_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.overall_inc_sig ,'\\\\|',',','n/a') AS overall_incident_rating_desc,
i.prim_legal_ent AS primary_legal_entity_id,
lookupValueByIdList('i18n_int_enum_vals',i.prim_legal_ent,'\\\\|',',','n/a') AS primary_legal_entity_name,
i.rep_gross_amount_lc AS gross_amount_local_currency_id,
lookupValueByIdList('i18n_int_enum_vals',i.rep_gross_amount_lc,'\\\\|',',','n/a')  AS gross_amount_local_currency_code,
i.rep_ins_rec_amt_la AS insurance_recovery_local_currency_amt,
i.rep_recovery_amo_la AS rep_recovery_amount_local_currency_amt,
i.resolution AS incident_resolution_desc,
i.name00 AS incident_name,
i.actual_breach AS incident_breach_id,
lookupValueByIdList('i18n_int_enum_vals',i.actual_breach,'\\\\|',',','n/a')  AS incident_breach_flag,
i.business_details AS business_details_desc,
i.compliance_confirmed AS compliance_confirmed_id,
lookupValueByIdList('i18n_int_enum_vals',i.compliance_confirmed,'\\\\|',',','n/a')  AS compliance_confirmed_flag,
TO_DATE(i.date_signif_det ) AS significant_breach_confirmed_date,
i.external_reference AS external_reference_desc,
i.fine_amount_la AS fine_amount_local_currency_amt,
i.impact_finalised AS financial_impact_finalised_id,
lookupValueByIdList('i18n_int_enum_vals',i.impact_finalised,'\\\\|',',','n/a')  AS financial_impact_finalised_flag,
i.risktaxl3 AS risk_event_category_l3_id,
lookupValueByIdList('i18n_int_enum_vals',i.risktaxl3 ,'\\\\|',',','n/a')  AS risk_event_category_l3_desc,
i.ui_prim_legal AS change_primary_legal_entity_desc,
i.ui_reopen AS reopen_incident_desc,
i.location_name AS location_ids,
lookupValueByIdList('i18n_int_enum_vals',i.location_name ,'\\\\|',',','n/a') AS location_name,
i.mti AS has_medical_treatment_injury_id,
lookupValueByIdList('i18n_int_enum_vals',i.mti ,'\\\\|',',','n/a') AS has_medical_treatment_injury_flag,
i.rep_recovery_amo_ba AS rep_recovery_amount_aud_amt,
i.description AS incident_desc,
i.modification_date AS modification_ts,
TO_DATE(i.modification_date) AS modification_date,
i.apra_product_code AS apra_product_id,
lookupValueByIdList('i18n_int_enum_vals',i.apra_product_code ,'\\\\|',',','n/a')  AS apra_product_desc,
i.ci_type_cat AS client_impact_category_ids,
lookupValueByIdList('i18n_int_enum_vals',i.ci_type_cat ,'\\\\|',',','n/a')   AS client_impact_category_desc,
TO_DATE(i.cmplnce_stats_dt) AS report_to_regulator_date,
i.disclosable_brch AS incident_disclose_id,
lookupValueByIdList('i18n_int_enum_vals',i.disclosable_brch,'\\\\|',',','n/a')   AS incident_disclose_flag,
i.finance_ctrl_std AS finance_control_standard_id,
lookupValueByIdList('i18n_int_enum_vals',i.finance_ctrl_std,'\\\\|',',','n/a') AS finance_control_standard_desc,
i.fine_amount_ba AS fine_amount_aud_amt,
i.fx_net_amount AS foreign_currency_net_amt,
i.inc_internal_reference AS internal_reference_desc,
i.incident_identificatio AS incident_identification_id,
lookupValueByIdList('i18n_int_enum_vals',i.incident_identificatio,'\\\\|',',','n/a') AS incident_identification_desc,
i.legal_entity AS legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',i.legal_entity,'\\\\|',',','n/a') AS legal_entity_name,
i.net_lossgain AS net_loss_gain_id,
lookupValueByIdList('i18n_int_enum_vals',i.net_lossgain,'\\\\|',',','n/a') AS net_loss_gain_desc,
i.oprsk_bd_rpt_det AS op_risk_board_report_desc,
i.rapidrecpayment AS rapid_recovery_payment_id,
lookupValueByIdList('i18n_int_enum_vals',i.rapidrecpayment,'\\\\|',',','n/a') AS rapid_recovery_payment_desc,
i.recovery_amt AS recovery_amt,
i.regultn_breached AS regulation_breached_desc,
i.remediation_size AS remediation_size_id,
lookupValueByIdList('i18n_int_enum_vals',i.remediation_size,'\\\\|',',','n/a') AS remediation_size_desc,
i.rep_gross_amount_la AS gross_amount_local_currency_amt,
i.risktaxl1 AS risk_event_category_l1_id,
lookupValueByIdList('i18n_int_enum_vals',i.risktaxl1,'\\\\|',',','n/a') AS risk_event_category_l1_desc,
i.board_wording AS board_wording_text,
TO_DATE(i.date_client_contact) AS client_first_contact_date,
TO_DATE(i.date_detected) AS incident_detected_date,
i.external_parties AS external_parties_desc,
i.impact_category AS impact_category_ids,
lookupValueByIdList('i18n_int_enum_vals',i.impact_category,'\\\\|',',','n/a')  AS impact_category_desc,
i.impactexthses AS external_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactexthses,'\\\\|',',','n/a') AS external_hses_impact_desc,
i.submitted_date AS incident_submitted_ts,
TO_DATE(i.submitted_date) AS incident_submitted_date,
i.impactinthses AS internal_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactinthses,'\\\\|',',','n/a') AS internal_hses_impact_desc,
i.impactmkt AS external_markets_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactmkt,'\\\\|',',','n/a') AS external_markets_impact_desc,
i.is_approved AS incident_approved_id,
lookupValueByIdList('i18n_int_enum_vals',i.is_approved,'\\\\|',',','n/a') AS incident_approved_flag,
i.net_amount_aud AS net_aud_amt,
CAST(i.numclientimpacted AS int) AS impacted_client_no,
i.other_ci_cat AS other_client_impact_catetory_desc,
i.parent_risk_cat AS parent_risk_category_id,
lookupValueByIdList('i18n_int_enum_vals',i.parent_risk_cat,'\\\\|',',','n/a') AS parent_risk_category_desc,
i.reapproved_date AS incident_reapproved_ts,
TO_DATE(i.reapproved_date) AS incident_reapproved_date,
i.rep_gross_amount AS rep_gross_amt,
i.rep_recovery_amo_lc AS rep_recovery_amount_local_currency_id,
lookupValueByIdList('i18n_int_enum_vals',i.rep_recovery_amo_lc,'\\\\|',',','n/a') AS rep_recovery_amount_local_currency_code,
i.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
i.creation_date AS incident_creation_ts,
TO_DATE(i.creation_date) AS incident_creation_date,
i.approved_by AS incident_approved_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approved_by,'\\\\$;',',','n/a') AS incident_approved_by_user_desc,
i.breach_desc AS breach_desc,
i.ci_type AS client_impact_type_id,
lookupValueByIdList('i18n_int_enum_vals',i.ci_type,'\\\\|',',','n/a') AS client_impact_type_desc,
i.country AS country_ids,
lookupValueByIdList('i18n_int_enum_vals',i.country,'\\\\|',',','n/a') AS country_name,
TO_DATE(i.date_first_rem_outcome) AS first_remediation_date,
TO_DATE(i.fine_issued_date) AS fine_issued_date,
i.submitted_by AS incident_submitted_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.submitted_by,'\\\\$;',',','n/a') AS incident_submitted_by_user_desc,
i.impactint AS internal_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactint,'\\\\|',',','n/a') AS internal_impact_flag,
i.impactreg AS internal_regulatory_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactreg,'\\\\|',',','n/a') AS internal_regulatory_impact_desc,
i.penalty_type AS penalty_type_ids,
lookupValueByIdList('i18n_int_enum_vals',i.penalty_type,'\\\\|',',','n/a') AS penalty_type_desc,
i.pot_breach_typ AS potential_breach_type_ids,
lookupValueByIdList('i18n_int_enum_vals',i.pot_breach_typ,'\\\\|',',','n/a') AS potential_breach_type_desc,
i.reopened_by AS reopened_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.reopened_by,'\\\\$;',',','n/a') AS reopened_by_user_desc,
i.reopened_date AS reopened_ts,
TO_DATE(i.reopened_date) AS reopened_date,
i.rep_net_amount_aud AS rep_net_aud_amt,
i.reported_to_board AS reported_to_board_id,
lookupValueByIdList('i18n_int_enum_vals',i.reported_to_board,'\\\\|',',','n/a') AS reported_to_board_flag,
i.approved_date AS incident_approved_ts,
TO_DATE(i.approved_date) AS incident_approved_date,
i.basel_risk_cat AS basel_risk_category_id,
lookupValueByIdList('i18n_int_enum_vals',i.basel_risk_cat,'\\\\|',',','n/a') AS basel_risk_category_desc,
i.bus_spec_fields AS business_specific_field_ids,
lookupValueByIdList('i18n_int_enum_vals',i.bus_spec_fields,'\\\\|',',','n/a') AS business_specific_field_desc,
TO_DATE(i.date_occurred) AS incident_first_occurred_date,
i.deleted_reason AS incident_deleted_reason_desc,
i.fine_amount AS fine_amt,
i.fine_amount_lc AS fine_amount_local_currency_id,
lookupValueByIdList('i18n_int_enum_vals',i.fine_amount_lc,'\\\\|',',','n/a') AS fine_amount_local_currency_code,
i.impact_type AS financial_impact_type_id,
lookupValueByIdList('i18n_int_enum_vals',i.impact_type,'\\\\|',',','n/a') AS financial_impact_type_desc,
i.rmg_op_risk_comments AS rmg_operational_risk_comments_text,
i.opl_risk_sc AS operational_risk_scenario_id,
lookupValueByIdList('i18n_int_enum_vals',i.opl_risk_sc,'\\\\|',',','n/a') AS operational_risk_scenario_desc,
i.region AS region_ids,
lookupValueByIdList('i18n_int_enum_vals',i.region,'\\\\|',',','n/a') AS region_name,
i.remediation_required AS remediation_required_id,
lookupValueByIdList('i18n_int_enum_vals',i.remediation_required,'\\\\|',',','n/a') AS remediation_required_flag,
i.reopened_reason AS incident_reopened_reason_desc,
i.rep_ins_rec_amt_lc AS insurance_recovery_local_currency_id,
lookupValueByIdList('i18n_int_enum_vals',i.rep_ins_rec_amt_lc,'\\\\|',',','n/a') AS insurance_recovery_local_currency_code,
i.risktaxl2 AS risk_event_category_l2_id,
lookupValueByIdList('i18n_int_enum_vals',i.risktaxl2,'\\\\|',',','n/a') AS risk_event_category_l2_desc,
i.client_cat AS client_category_ids,
lookupValueByIdList('i18n_int_enum_vals',i.client_cat,'\\\\|',',','n/a') AS client_category_desc,
i.conductflag AS conduct_related_id,
lookupValueByIdList('i18n_int_enum_vals',i.conductflag,'\\\\|',',','n/a') AS conduct_related_flag,
i.finance_primary_functi AS finance_primary_function_group_id,
lookupValueByIdList('i18n_int_enum_vals',i.finance_primary_functi,'\\\\|',',','n/a') AS finance_primary_function_group_desc,
i.gross_lossgain AS gross_loss_gain_id,
lookupValueByIdList('i18n_int_enum_vals',i.gross_lossgain,'\\\\|',',','n/a') AS gross_loss_gain_desc,
i.impactclient AS external_client_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactclient,'\\\\|',',','n/a') AS external_client_impact_flag,
i.timing_economic AS timing_economic_loss_id,
lookupValueByIdList('i18n_int_enum_vals',i.timing_economic,'\\\\|',',','n/a') AS timing_economic_loss_desc,
i.ui_approve AS ui_approve_desc,
i.impactfin AS internal_financial_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactfin,'\\\\|',',','n/a') AS internal_financial_impact_desc,
i.impactrep AS internal_reputational_impact_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactrep,'\\\\|',',','n/a') AS internal_reputational_impact_flag,
i.incident_cat AS incident_category_ids,
lookupValueByIdList('i18n_int_enum_vals',i.incident_cat,'\\\\|',',','n/a') AS incident_category_desc,
i.incident_status AS incident_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.incident_status,'\\\\|',',','n/a') AS incident_status_desc,
i.incident_type AS incident_type_ids,
lookupValueByIdList('i18n_int_enum_vals',i.incident_type,'\\\\|',',','n/a') AS incident_type_desc,
i.lti AS lost_time_injury_id,
lookupValueByIdList('i18n_int_enum_vals',i.lti,'\\\\|',',','n/a') AS lost_time_injury_flag,
i.parent_risk AS parent_risk_id,
lookupValueByIdList('i18n_int_enum_vals',i.parent_risk,'\\\\|',',','n/a') AS parent_risk_desc,
i.reapproved_by AS incident_reapproved_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.reapproved_by,'\\\\$;',',','n/a') AS incident_reapproved_by_user_desc,
i.rep_fx_net_amount AS report_foreign_exchange_net_amt,
i.rep_ins_rec_amt_ba AS insurance_recovery_aud_amt,
i.detail_page_url AS incident_op_url_text,
i.ci_flag AS client_impacted_id,
lookupValueByIdList('i18n_int_enum_vals',i.ci_flag,'\\\\|',',','n/a')  AS client_impacted_flag,
i.gross_amount AS gross_amt,
i.incident_description AS incident_long_desc,
i.regulator_action AS regulator_action_id,
lookupValueByIdList('i18n_int_enum_vals',i.regulator_action,'\\\\|',',','n/a') AS regulator_action_desc,
i.rep_gross_amount_ba AS gross_amount_aud_amt,
i.rep_ins_rec_amt AS report_ins_rec_amt,
i.rep_recovery_amount AS rep_recovery_amt,
i.reported_to_reg AS reported_to_regulator_id,
lookupValueByIdList('i18n_int_enum_vals',i.reported_to_reg,'\\\\|',',','n/a') AS reported_to_regulator_flag,
i.parent_folder AS parent_folder_id,
i.breach_internal_policy AS internal_policy_breach_id,
lookupValueByIdList('i18n_int_enum_vals',i.breach_internal_policy,'\\\\|',',','n/a') AS internal_policy_breach_flag,
i.cmpliance_status AS regulatory_compliance_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.cmpliance_status,'\\\\|',',','n/a') AS regulatory_compliance_status_desc,
i.filenote AS compliance_file_note_text,
i.guidance AS guildance_desc,
i.accmechanism AS accident_mechanism_id,
lookupValueByIdList('i18n_int_enum_vals',i.accmechanism,'\\\\|',',','n/a') AS accident_mechanism_desc,
i.addl_inc_type AS additional_incident_type_ids,
lookupValueByIdList('i18n_int_enum_vals',i.addl_inc_type,'\\\\|',',','n/a')  AS additional_incident_type_desc,
i.ala_by AS awaiting_legal_analysis_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.ala_by,'\\\\$;',',','n/a') AS awaiting_legal_analysis_by_user_desc,
TO_DATE(i.ala_date) AS awaiting_legal_analysis_date,
TO_DATE(i.approval_10_date) AS market_risk_validation_date,
TO_DATE(i.approval_13_date) AS business_approved_date,
TO_DATE(i.approval_14_date) AS compliance_approved_date,
TO_DATE(i.approval_1_date) AS oprisk_and_governance_validation_date,
TO_DATE(i.approval_2_date) AS compliance_validation_date,
TO_DATE(i.approval_4_date) AS financial_crime_risk_validation_date,
TO_DATE(i.approval_5_date) AS raar_validation_date,
TO_DATE(i.approval_7_date ) AS esr_validation_date,
TO_DATE(i.approval_8_date) AS whs_validation_date,
TO_DATE(i.approval_9_date ) AS credit_risk_validation_date,
i.approver1 AS oprisk_and_governance_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver1,'\\\\$;',',','n/a') AS oprisk_and_governance_validated_by_user_desc,
i.approver10 AS market_risk_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver10,'\\\\$;',',','n/a') AS market_risk_validated_by_user_desc,
i.approver10flag AS market_risk_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver10flag,'\\\\|',',','n/a')   AS market_risk_validated_flag,
i.approver10rep AS market_risk_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver10rep,'\\\\$;',',','n/a') AS market_risk_nominated_representative_user_desc,
i.approver13 AS business_approval_provided_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver13,'\\\\$;',',','n/a') AS business_approval_provided_by_user_desc,
i.approver13flag AS business_approval_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver13flag,'\\\\|',',','n/a') AS business_approval_flag,
i.approver13rep AS business_approver_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver13rep,'\\\\$;',',','n/a') AS business_approver_user_desc,
i.approver14 AS compliance_approval_provided_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver14,'\\\\$;',',','n/a') AS compliance_approval_provided_by_user_desc,
i.approver14flag AS compliance_approval_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver14flag,'\\\\|',',','n/a')  AS compliance_approval_flag,
i.approver14rep AS compliance_approver_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver14rep,'\\\\$;',',','n/a') AS compliance_approver_user_desc,
i.approver1flag AS oprisk_governance_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver1flag,'\\\\|',',','n/a')  AS oprisk_governance_validated_flag,
i.approver1rep AS oprisk_governance_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver1rep,'\\\\$;',',','n/a') AS oprisk_governance_nominated_representative_user_desc,
i.approver2 AS compliance_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver2,'\\\\$;',',','n/a') AS compliance_validated_by_user_desc,
i.approver2flag AS compliance_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver2flag,'\\\\|',',','n/a')  AS compliance_validated_flag,
i.approver2rep AS compliance_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver2rep,'\\\\$;',',','n/a') AS compliance_nominated_representative_user_desc,
i.approver4 AS financial_crime_risk_validated_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver4,'\\\\$;',',','n/a') AS financial_crime_risk_validated_user_desc,
i.approver4flag AS financial_crime_risk_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver4flag,'\\\\|',',','n/a')  AS financial_crime_risk_validated_flag,
i.approver4rep AS financial_crime_risk_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver4rep,'\\\\$;',',','n/a') AS financial_crime_risk_nominated_representative_user_desc,
i.approver5 AS raar_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver5,'\\\\$;',',','n/a') AS raar_validated_by_user_desc,
i.approver5flag AS raar_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver5flag,'\\\\|',',','n/a') AS raar_validated_flag,
i.approver5rep AS raar_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver5rep,'\\\\$;',',','n/a') AS raar_nominated_representative_user_desc,
i.approver7 AS esr_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver7,'\\\\$;',',','n/a') AS esr_validated_by_user_desc,
i.approver7flag AS esr_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver7flag,'\\\\|',',','n/a') AS esr_validated_flag,
i.approver7rep AS esr_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver7rep,'\\\\$;',',','n/a') AS esr_nominated_representative_user_desc,
i.approver8 AS whs_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver8,'\\\\$;',',','n/a') AS whs_validated_by_user_desc,
i.approver8flag AS whs_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver8flag,'\\\\|',',','n/a') AS whs_validated_flag,
i.approver8rep AS whs_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver8rep,'\\\\$;',',','n/a') AS whs_nominated_representative_user_desc,
i.approver9 AS credit_risk_validated_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver9,'\\\\$;',',','n/a') AS credit_risk_validated_by_user_desc,
i.approver9flag AS credit_risk_validated_id,
lookupValueByIdList('i18n_int_enum_vals',i.approver9flag,'\\\\|',',','n/a')  AS credit_risk_validated_flag,
i.approver9rep AS credit_risk_nominated_representative_user_lanid_name,
lookupValueByUserList('actorinfo',i.approver9rep,'\\\\$;',',','n/a') AS credit_risk_nominated_representative_user_desc,
i.asicbreach AS asic_relevant_breach_id,
lookupValueByIdList('i18n_int_enum_vals',i.asicbreach,'\\\\|',',','n/a')  AS asic_relevant_breach_flag,
TO_DATE(i.asicdate) AS asic_reported_date,
i.busname AS business_asset_name,
TO_DATE(i.clientinvestdt) AS client_first_notified_date,
i.comment00 AS validation_commentary_text,
TO_DATE(i.compinveststartdt) AS investigation_started_date,
i.creditloss AS credit_loss_id,
lookupValueByIdList('i18n_int_enum_vals',i.creditloss,'\\\\|',',','n/a')   AS credit_loss_desc,
i.ctllevel AS control_level_id,
lookupValueByIdList('i18n_int_enum_vals',i.ctllevel,'\\\\|',',','n/a')  AS control_level_desc,
i.deleted_by AS deleted_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.deleted_by,'\\\\$;',',','n/a') AS deleted_by_user_desc,
TO_DATE(i.deleted_date) AS deleted_date,
i.directorsonbrd AS director_on_board_id,
lookupValueByIdList('i18n_int_enum_vals',i.directorsonbrd,'\\\\|',',','n/a') AS director_on_board_flag,
i.incident_lead AS incident_lead_user_lanid_name,
lookupValueByUserList('actorinfo',i.incident_lead,'\\\\$;',',','n/a') AS incident_lead_user_desc,
i.incident_owner AS incident_owner_user_lanid_name,
lookupValueByUserList('actorinfo',i.incident_owner,'\\\\$;',',','n/a') AS incident_owner_user_desc,
i.injurytype AS injury_type_id,
lookupValueByIdList('i18n_int_enum_vals',i.injurytype,'\\\\|',',','n/a')  AS injury_type_desc,
TO_DATE(i.investdetdt) AS investigation_outcome_determined_date,
i.marketloss AS market_loss_id,
lookupValueByIdList('i18n_int_enum_vals',i.marketloss,'\\\\|',',','n/a')  AS market_loss_desc,
i.natureinvestigation AS investgation_nature_desc,
i.numinjured AS injured_no,
i.opened_by AS incident_opened_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.opened_by,'\\\\$;',',','n/a') AS incident_opened_by_user_desc,
TO_DATE(i.opened_date) AS incident_inprogress_date,
i.partyinvolved AS party_involved_id,
lookupValueByIdList('i18n_int_enum_vals',i.partyinvolved,'\\\\|',',','n/a')  AS party_involved_name,
i.reportablesitn AS reportable_situation_arisen_id,
lookupValueByIdList('i18n_int_enum_vals',i.reportablesitn,'\\\\|',',','n/a')  AS reportable_situation_arisen_flag,
i.reportablesitnyes AS reportable_situation_ids,
lookupValueByIdList('i18n_int_enum_vals',i.reportablesitnyes,'\\\\|',',','n/a')   AS reportable_situation_desc,
i.rmg_val_by AS rmg_validated_submitted_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.rmg_val_by,'\\\\$;',',','n/a') AS rmg_validated_submitted_by_user_desc,
TO_DATE(i.rmg_val_date) AS rmg_validation_submitted_date,
i.rootcausecat AS root_cause_category_ids,
lookupValueByIdList('i18n_int_enum_vals',i.rootcausecat,'\\\\|',',','n/a')   AS root_cause_category_name,
i.sigbreach AS outcome_after_30day_investigation_id,
lookupValueByIdList('i18n_int_enum_vals',i.sigbreach,'\\\\|',',','n/a') AS outcome_after_30day_investigation_desc,
DATEDIFF(TO_DATE(i.date_detected),TO_DATE(i.date_occurred)) AS incident_days_occurrence_to_detection_no,
DATEDIFF(TO_DATE(i.creation_date),TO_DATE(i.date_detected)) AS incident_days_detection_to_creation_no,
DATEDIFF(TO_DATE(i.approved_date),TO_DATE(i.creation_date)) AS incident_days_creation_to_approval_no,
DATEDIFF(TO_DATE(i.approved_date),TO_DATE(i.date_detected)) AS incident_days_detection_to_approval_no,
DATEDIFF(TO_DATE(i.cmplnce_stats_dt),TO_DATE(i.date_detected)) AS incident_days_detection_to_reported_no,
DATEDIFF(TO_DATE(i.creation_date),TO_DATE(i.date_occurred)) AS incident_days_occurrence_to_creation_no,
DATEDIFF(TO_DATE(i.approved_date),TO_DATE(i.date_occurred)) AS incident_days_occurrence_to_approval_no,
DATEDIFF(TO_DATE(i.cmplnce_stats_dt),TO_DATE(i.date_occurred)) AS incident_days_occurrence_to_reported_no,
DATEDIFF(TO_DATE(i.cmplnce_stats_dt),TO_DATE(i.creation_date)) AS incident_days_creation_to_reported_no,
DATEDIFF(current_date,TO_DATE(i.date_detected)) AS incident_days_since_detection_no,
DATEDIFF(current_date,TO_DATE(i.date_occurred)) AS incident_days_since_occurrence_no,
DATEDIFF(current_date,TO_DATE(i.creation_date)) AS incident_days_since_creation_no,
DATEDIFF(current_date,TO_DATE(i.approved_date)) AS incident_days_since_approval_no,
year(i.date_detected) AS incident_detected_year,
quarter(i.date_detected) AS incident_detected_quarter,
month(i.date_detected) AS incident_detected_month,
day(i.date_detected) AS incident_detected_day,
year(i.date_occurred) AS incident_occurred_year,
quarter(i.date_occurred) AS incident_occurred_quarter,
month(i.date_occurred) AS incident_occurred_month,
day(i.date_occurred) AS incident_occurred_day,
year(i.approved_date) AS incident_approval_year,
quarter(i.approved_date) AS incident_approval_quarter,
month(i.approved_date) AS incident_approval_month,
day(i.approved_date) AS incident_approval_day,
year(i.creation_date) AS incident_creation_year,
quarter(i.creation_date) AS incident_creation_quarter,
month(i.creation_date) AS incident_creation_month,
day(i.creation_date) AS incident_creation_day,
year(i.cmplnce_stats_dt) AS incident_report_to_regulator_date_year,
quarter(i.cmplnce_stats_dt) AS incident_report_to_regulator_date_quarter,
month(i.cmplnce_stats_dt) AS incident_report_to_regulator_date_month,
day(i.cmplnce_stats_dt) AS incident_report_to_regulator_date_day,
i.taxsettlement as tax_settlement_id,
lookupValueByIdList('i18n_int_enum_vals',i.taxsettlement,'\\\\|',',','n/a') AS tax_settlement_desc,
i.impactintwhs as internal_whs_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactintwhs,'\\\\|',',','n/a') AS internal_whs_desc,
cast(i.numreportresubmit as int) as report_resubmission_no,
TO_DATE(i.dateresubmitmade) as resubmission_made_date,
i.impactextwhs as external_whs_id,
lookupValueByIdList('i18n_int_enum_vals',i.impactextwhs,'\\\\|',',','n/a') AS external_whs_desc,
i.regreportinctype as regulatory_reporting_incident_type_id,
lookupValueByIdList('i18n_int_enum_vals',i.regreportinctype,'\\\\|',',','n/a') AS regulatory_reporting_incident_type_desc,
i.DISPOSALFLAG as disposal_flag_id,
lookupValueByIdList('i18n_int_enum_vals',i.DISPOSALFLAG,'\\\\|',',','n/a') AS disposal_flag_desc,
TO_DATE(i.DISPOSALDATE) AS disposal_date,
i.DISPOSALREASON AS disposal_reason_desc,
i.DISPOSEDBY AS disposed_by_user_lanid_name,
lookupValueByUserList('actorinfo',i.DISPOSEDBY,'\\\\$;',',','n/a') AS disposed_by_user_desc,
CASE WHEN i.incident_status=6239 THEN NULL 
WHEN i.overall_inc_sig IN (44066, 44065, 6100 , 6101 , 6102) THEN (CASE WHEN i.approved_date IS NOT NULL THEN DATEDIFF(i.approved_date,i.date_detected) ELSE DATEDIFF(current_date,i.date_detected) END
)
ELSE NULL
END AS days_since_detection_no,
i.DATE1STINSTANCEBREACH as first_instance_of_breach_date,
i.COREOBLIGATION as core_obligation_ids,
lookupValueByIdList('i18n_int_enum_vals',i.COREOBLIGATION,'\\\\|',',','n/a') AS core_obligation_desc,
i.CATREPORTABLESITUATION as category_of_the_reportable_situation_ids,
lookupValueByIdList('i18n_int_enum_vals',i.CATREPORTABLESITUATION,'\\\\|',',','n/a') AS category_of_the_reportable_situation_desc,
i.CIRCINDMATTERSIGNIFICA as circumstances_indicating_matter_ids,
lookupValueByIdList('i18n_int_enum_vals',i.CIRCINDMATTERSIGNIFICA,'\\\\|',',','n/a') as circumstances_indicating_matter_desc,
i.ENTERINCIDENTID as enter_incident_ids_desc,
i.DATEINVMATTERCOMPL as investigation_of_the_matter_completed_date,
i.INVESTIGATIONNATURE as nature_of_investigation_ids,
lookupValueByIdList('i18n_int_enum_vals',i.INVESTIGATIONNATURE,'\\\\|',',','n/a') AS nature_of_investigation_desc,
i.SIMILARREPORTABLESITUA as similar_reportable_situations_id,
lookupValueByIdList('i18n_int_enum_vals',i.SIMILARREPORTABLESITUA,'\\\\|',',','n/a') as similar_reportable_situations_desc,
i.DATECOMPENSATIONFINAL as compensation_finalised_date,
i.DATELASTINSTANCEBREACH as last_instance_of_breach_date,
i.DATEBREACHRECTIFIED as breach_rectified_date
FROM incident i
LEFT JOIN ai ai_creator
ON i.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON i.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON i.lossevent_id=re.resourceid
WHERE re.isdeleted = 0)
SELECT *, CASE WHEN awaiting_legal_analysis_date IS NOT NULL OR UPPER(incident_category_desc) LIKE '%SUBJECT TO LITIGATION%' OR UPPER(incident_category_desc) LIKE '%ESCALATED TO LEGAL%' THEN 'NA'
WHEN incident_approved_date IS NOT NULL THEN (
CASE WHEN overall_incident_rating_id in (6101,6102,44065) AND days_since_detection_no > 35 THEN 'Approved outside 35 days'
WHEN overall_incident_rating_id in (6101,6102,44065) AND days_since_detection_no BETWEEN 0 AND 35 THEN 'Approved within 35 days'
WHEN overall_incident_rating_id in (44066,6100) AND days_since_detection_no > 40 THEN 'Approved outside 40 days'
WHEN overall_incident_rating_id in (44066,6100) AND days_since_detection_no BETWEEN 0 AND 40 THEN 'Approved within 40 days'
ELSE NULL
END)
ELSE (
CASE WHEN overall_incident_rating_id in (6101,6102,44065) AND days_since_detection_no > 35 THEN CAST(ABS(DATEDIFF(DATE_ADD(incident_detected_date,35),current_date)) AS STRING) || ' day(s) overdue'
WHEN overall_incident_rating_id  in (6101,6102,44065) AND days_since_detection_no BETWEEN 0 AND 35 THEN CAST(ABS(DATEDIFF(DATE_ADD(incident_detected_date,35),current_date)) AS STRING) || ' day(s) until due'
WHEN overall_incident_rating_id  in (44066,6100) AND days_since_detection_no > 40 THEN CAST(ABS(DATEDIFF(DATE_ADD(incident_detected_date,40),current_date)) AS STRING) || ' day(s) overdue'
WHEN overall_incident_rating_id  in (44066,6100) AND days_since_detection_no BETWEEN 0 AND 40 THEN CAST(ABS(DATEDIFF(DATE_ADD(incident_detected_date,40),current_date)) AS STRING) || ' day(s) until due'
ELSE NULL
END
)
END AS approval_timeliness_desc,
'Openpages' AS source
FROM incident_trans",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_incident"
    },
{
      "stepDescription": "create sat_business_service",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_riskassessment/",
          "viewName": "rt_riskassessment",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH business_service AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.riskassessment_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_riskassessment a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_riskassessment')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
bs.riskassessment_bk AS business_service_bk,
bs.riskassessment_id AS business_service_id,
bs.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
bs.parent_folder AS parent_folder_id,
bs.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
bs.name00 AS business_service_name,
bs.description AS business_service_desc,
bs.full_path AS business_service_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risk Assessments/','/') AS resource_business_service_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risk Assessments/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risk Assessments/','/'), bs.name00)-2) As business_service_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risk Assessments/','/'),'/')[2] AS business_service_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risk Assessments/','/'),'/')[3] AS business_service_folder_division_name,
bs.creation_date AS creation_ts,
TO_DATE(bs.creation_date) AS creation_date,
bs.modification_date AS modification_ts,
TO_DATE(bs.modification_date)  AS modification_date,
bs.detail_page_url AS business_service_op_url_text,
bs.country AS country_ids,
lookupValueByIdList('i18n_int_enum_vals',bs.country,'\\\\|',',','n/a')  AS country_name,
bs.external_reference AS external_reference_desc,
bs.legal_entity AS legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',bs.legal_entity,'\\\\|',',','n/a')  AS legal_entity_names,
bs.library_id AS library_id,
bs.location_name AS location_ids,
lookupValueByIdList('i18n_int_enum_vals',bs.location_name,'\\\\|',',','n/a')   AS location_name,
bs.orsa_description AS business_service_long_desc,
bs.orsa_lst_sub_by AS last_submitted_by_user_lanid_name,
lookupValueByUserList('actorinfo',bs.orsa_lst_sub_by,'\\\\$;',',','n/a') AS last_submitted_by_user_desc,
bs.orsa_lst_sub_dte AS last_submitted_ts,
TO_DATE(bs.orsa_lst_sub_dte) AS last_submitted_date,
bs.orsa_status AS business_service_status_id,
lookupValueByIdList('i18n_int_enum_vals',bs.orsa_status,'\\\\|',',','n/a')  AS business_service_status_desc,
bs.rcsa_owner AS business_service_user_lanid_name,
lookupValueByUserList('actorinfo',bs.rcsa_owner,'\\\\$;',',','n/a') AS business_service_user_desc,
bs.rcsa_type AS business_service_type_ids,
lookupValueByIdList('i18n_int_enum_vals',bs.rcsa_type,'\\\\|',',','n/a')  AS business_service_type_desc,
bs.region AS region_ids,
lookupValueByIdList('i18n_int_enum_vals',bs.region,'\\\\|',',','n/a')  AS region_name,
bs.source00 AS source_id,
lookupValueByIdList('i18n_int_enum_vals',bs.source00,'\\\\|',',','n/a')  AS source_name,
bs.submitted AS submitted_id,
lookupValueByIdList('i18n_int_enum_vals',bs.submitted,'\\\\|',',','n/a') AS submitted_desc,
bs.ui_status AS ui_status_desc,
CAST(bs.audit_rcsa_check AS bigint) AS audit_rcsa_check_id,
lookupValueByIdList('i18n_int_enum_vals',bs.audit_rcsa_check ,'\\\\|',',','n/a') AS audit_rcsa_check_desc,
bs.TAGSOURCEID as cube_reg_tag_desc,
'Openpages' AS source
FROM business_service bs
LEFT JOIN ai ai_creator
ON bs.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON bs.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON bs.riskassessment_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_business_service"
    },
{
      "stepDescription": "create sat_l1_capability",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_process/",
          "viewName": "rt_process",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH l1_capability AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.process_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_process a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_process')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
l1.l1_capability_bk AS l1_capability_bk,
l1.process_id AS l1_capability_id,
l1.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
l1.parent_folder AS parent_folder_id,
l1.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
l1.name00 AS l1_capability_name,
l1.description AS l1_capability_desc,
l1.full_path AS l1_capability_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Processes/','/') AS resource_l1_capability_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Processes/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Processes/','/'), l1.name00)-2) As l1_capability_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Processes/','/'),'/')[2] AS l1_capability_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Processes/','/'),'/')[3] AS l1_capability_folder_division_name,
l1.creation_date AS creation_ts,
TO_DATE(l1.creation_date) AS creation_date,
l1.modification_date AS modification_ts,
TO_DATE(l1.modification_date) AS modification_date,
l1.detail_page_url AS l1_capability_op_url_text,
l1.external_reference AS external_reference_desc,
l1.l1cap_grouping AS l1_capability_grouping_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l1cap_grouping,'\\\\|',',','n/a') AS l1_capability_grouping_desc,
CAST(l1.l1cap_stage AS int) AS l1_capability_stage_no,
l1.l1cap_taxonomy AS l1_capability_taxonomy_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l1cap_taxonomy,'\\\\|',',','n/a') AS l1_capability_taxonomy_desc,
l1.lib_l1cap_description AS library_l1_capability_desc,
l1.lib_l1cap_id AS library_l1_capability_id,
l1.lib_l1cap_sequence AS library_l1_capability_id_sequence_no,
l1.process_description AS l1_capability_long_desc,
l1.process_owner AS l1_capability_owner_lanid_name,
lookupValueByUserList('actorinfo',l1.process_owner,'\\\\$;',',','n/a') AS l1_capability_owner_desc,
l1.process_status AS l1_capability_status_id,
lookupValueByIdList('i18n_int_enum_vals',l1.process_status,'\\\\|',',','n/a') AS l1_capability_status_desc,
l1.source00 AS source_id,
lookupValueByIdList('i18n_int_enum_vals',l1.source00,'\\\\|',',','n/a') AS source_name,
l1.libstatus AS mapping_status_id,
lookupValueByIdList('i18n_int_enum_vals',l1.libstatus,'\\\\|',',','n/a') AS mapping_status_desc,
'Openpages' AS source
FROM l1_capability l1
LEFT JOIN ai ai_creator
ON l1.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON l1.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON l1.process_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_l1_capability"
    },
{
      "stepDescription": "create sat_l2_capability",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_zzz_mgl_l2cpblty/",
          "viewName": "rt_zzz_mgl_l2cpblty",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH l2_capability AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.zzz_mgl_l2cpblty_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_zzz_mgl_l2cpblty a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_zzz_mgl_l2cpblty')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
l2.l2_capability_bk AS l2_capability_bk,
l2.zzz_mgl_l2cpblty_id AS l2_capability_id,
l2.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
l2.parent_folder AS parent_folder_id,
l2.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
l2.name00 AS l2_capability_name,
l2.description AS l2_capability_desc,
l2.full_path AS l2_capability_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2 Capabilities/','/') AS resource_l2_capability_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2 Capabilities/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2 Capabilities/','/'), l2.name00)-2) As l2_capability_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2 Capabilities/','/'),'/')[2] AS l2_capability_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2 Capabilities/','/'),'/')[3] AS l2_capability_folder_division_name,
l2.creation_date AS creation_ts,
TO_DATE(l2.creation_date) AS creation_date,
l2.modification_date AS modification_ts,
TO_DATE(l2.modification_date) AS modification_date,
l2.detail_page_url AS l2_capability_op_url_text,
l2.l2cap_description AS l2_capability_long_desc,
l2.l2cap_grouping AS l2_capability_grouping_id,
lookupValueByIdList('i18n_int_enum_vals',l2.l2cap_grouping,'\\\\|',',','n/a') AS l2_capability_grouping_desc,
l2.l2cap_owner AS l2_capability_owner_lanid_name,
lookupValueByUserList('actorinfo',l2.l2cap_owner,'\\\\$;',',','n/a') AS l2_capability_owner_desc,
CAST(l2.l2cap_stage AS int) AS l2_capability_stage_no,
l2.l2cap_status AS l2_capability_status_id,
lookupValueByIdList('i18n_int_enum_vals',l2.l2cap_status,'\\\\|',',','n/a') AS l2_capability_status_desc,
l2.l2cap_taxonomy AS l2_capability_taxonomy_id,
lookupValueByIdList('i18n_int_enum_vals',l2.l2cap_taxonomy,'\\\\|',',','n/a') AS l2_capability_taxonomy_desc,
l2.lib_l2cap_description AS library_l2_capability_desc,
l2.lib_l2cap_id AS library_l2_capability_id,
l2.lib_l2cap_sequence AS library_l2_capability_seq_no,
l2.libstatus AS mapping_status_id,
lookupValueByIdList('i18n_int_enum_vals',l2.libstatus,'\\\\|',',','n/a') AS mapping_status_desc,
l2.l2_comment AS l2_comment_text,
l2.source00 AS source_id,
lookupValueByIdList('i18n_int_enum_vals',l2.source00,'\\\\|',',','n/a') AS source_name,
l2.L2CAPEVALCOMPBY as  last_assessment_completed_by_user_lanid_name,
lookupValueByUserList('actorinfo',l2.L2CAPEVALCOMPBY,'\\\\$;',',','n/a') AS last_assessment_completed_by_user_desc,
cast(l2.L2CAPEVALSTATUS as bigint) as capability_assessment_status_id,
lookupValueByIdList('i18n_int_enum_vals',l2.L2CAPEVALSTATUS,'\\\\|',',','n/a') as  capability_assessment_status_desc,
TO_DATE(l2.L2CAPNEXTASMTDATE) AS next_assessment_due_date,
cast(l2.L2CAPEVALEFFRATING as bigint) as capability_rating_id,
lookupValueByIdList('i18n_int_enum_vals',l2.L2CAPEVALEFFRATING,'\\\\|',',','n/a') as  capability_rating_desc,
TO_DATE(l2.L2CAPEVALCOMPDATE) AS last_assessment_completed_date,
'Openpages' AS source
FROM l2_capability l2
LEFT JOIN ai ai_creator
ON l2.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON l2.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON l2.zzz_mgl_l2cpblty_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_l2_capability"
    },
    {
      "stepDescription": "create sat_test_plan",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_test/",
          "viewName": "rt_test",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_system_workflow_fields/",
          "viewName": "rt_system_workflow_fields",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH test_plan AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.test_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_test a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_test')c WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
system_workflow_fields AS 
(
SELECT wf_resource_id,wf_process_status_label as system_workflow_stage_status
FROM
(
SELECT *,dense_rank() OVER (PARTITION BY wf_resource_id ORDER BY wf_process_instance_id desc,wf_activity_instance_id desc) AS row_nbr FROM rt_system_workflow_fields WHERE batch_id IN (SELECT max(distinct batch_id) FROM rt_system_workflow_fields) and  wf_process_state=1
)i 
WHERE row_nbr=1
)
SELECT
tp.test_bk AS test_plan_bk,
tp.name00 AS test_plan_name,
tp.test_id AS test_plan_id,
tp.description AS test_plan_desc,
tp.creation_date AS creation_ts,
TO_DATE(tp.creation_date) AS creation_date,
tp.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
tp.parent_folder AS parent_folder_id,
tp.full_path AS test_plan_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Tests/','/') AS resource_test_plan_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Tests/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Tests/','/'), tp.name00)-2) As test_plan_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Tests/','/'),'/')[2] AS test_plan_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Tests/','/'),'/')[3] AS test_plan_folder_division_name,
tp.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
tp.modification_date AS modification_ts,
TO_DATE(tp.modification_date) AS modification_date,
tp.detail_page_url AS test_plan_op_url_text,
tp.attestation_oblig_type AS auto_generation_process_id,
lookupValueByIdList('i18n_int_enum_vals',tp.attestation_oblig_type,'\\\\|',',','n/a') AS auto_generation_process_desc,
tp.auto_gen_tst AS auto_generate_test_result_id,
lookupValueByIdList('i18n_int_enum_vals',tp.auto_gen_tst,'\\\\|',',','n/a')  AS auto_generate_test_result_desc,
tp.delegate AS delegate_user_lanid_name,
lookupValueByUserList('actorinfo',tp.delegate,'\\\\$;',',','n/a') AS delegate_user_desc,
tp.email_rem AS monthly_email_reminder_id,
lookupValueByIdList('i18n_int_enum_vals',tp.email_rem,'\\\\|',',','n/a')  AS monthly_email_reminder_flag,
tp.frequency AS frequency_id,
lookupValueByIdList('i18n_int_enum_vals',tp.frequency,'\\\\|',',','n/a') AS frequency_desc,
tp.library_id AS library_id,
TO_DATE(tp.nxt_cntrl_tst_dt) AS next_test_date,
tp.performed_by AS test_performed_by_user_lanid_name,
lookupValueByUserList('actorinfo',tp.performed_by,'\\\\$;',',','n/a') AS test_performed_by_user_desc,
tp.source00 AS source_id,
lookupValueByIdList('i18n_int_enum_vals',tp.source00,'\\\\|',',','n/a') AS source_name,
tp.test_cat AS test_plan_category_id,
lookupValueByIdList('i18n_int_enum_vals',tp.test_cat,'\\\\|',',','n/a')  AS test_plan_category_desc,
tp.test_plan_description AS test_plan_long_desc,
tp.test_plan_status AS test_plan_status_id,
lookupValueByIdList('i18n_int_enum_vals',tp.test_plan_status,'\\\\|',',','n/a') AS test_plan_status_desc,
tp.test_procedure AS test_plan_procedure_desc,
tp.testing_period AS testing_period_id,
lookupValueByIdList('i18n_int_enum_vals',tp.testing_period,'\\\\|',',','n/a')  AS testing_period_desc,
tp.tst_plan_prc_typ AS test_plan_type_id,
lookupValueByIdList('i18n_int_enum_vals',tp.tst_plan_prc_typ,'\\\\|',',','n/a') AS test_plan_type_desc,
tp.test_result as test_result_id,
lookupValueByIdList('i18n_int_enum_vals',tp.test_result,'\\\\|',',','n/a') AS test_result_desc,
tp.extappflag as extension_approval_flag_id,
lookupValueByIdList('i18n_int_enum_vals',tp.extappflag,'\\\\|',',','n/a') AS extension_approval_flag_desc,
tp.overallassrating as overall_assessment_rating_id,
lookupValueByIdList('i18n_int_enum_vals',tp.overallassrating,'\\\\|',',','n/a') AS overall_assessment_rating_desc,
TO_DATE(tp.due_date) as due_date,
tp.deletedreason as deleted_reason_desc,
TO_DATE(tp.expteststartdate) as expected_test_start_date,
tp.test_result_comm as test_results_comments_desc,
TO_DATE(tp.date_performed) as performed_date,
wf.system_workflow_stage_status as system_workflow_stage_status,
tp.TP_RESID as test_plan_copied_id,
'Openpages' AS source
FROM test_plan tp
LEFT JOIN ai ai_creator
ON tp.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON tp.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON tp.test_id=re.resourceid
LEFT JOIN system_workflow_fields wf
ON tp.test_id=wf.wf_resource_id
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_test_plan"
    },
    {
      "stepDescription": "create sat_test_result",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_testresult/",
          "viewName": "rt_testresult",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH test_result AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.testresult_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_testresult a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_testresult')c WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
tr.testresult_bk AS test_result_bk,
tr.testresult_id AS test_result_id,
tr.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
tr.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
tr.parent_folder AS parent_folder_id,
tr.name00 AS test_result_name,
tr.description AS test_result_desc,
tr.full_path AS test_result_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Test Results/','/') AS resource_test_result_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Test Results/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Test Results/','/'), tr.name00)-2) As test_result_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Test Results/','/'),'/')[2] AS test_result_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Test Results/','/'),'/')[3] AS test_result_folder_division_name,
tr.creation_date AS creation_ts,
TO_DATE(tr.creation_date) AS creation_date,
tr.modification_date AS modification_ts,
TO_DATE(tr.modification_date) AS modification_date,
tr.detail_page_url AS test_result_op_url_text,
tr.activity_type AS activity_type_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.activity_type,'\\\\|',',','n/a') AS activity_type_desc,
tr.attestation_oblig_type AS auto_generation_process_id,
lookupValueByIdList('i18n_int_enum_vals',tr.attestation_oblig_type,'\\\\|',',','n/a') AS auto_generation_process_flag,
tr.auto_gen_tst AS auto_generate_test_result_id,
lookupValueByIdList('i18n_int_enum_vals',tr.auto_gen_tst,'\\\\|',',','n/a') AS auto_generate_test_result_flag,
tr.cntrl_objective_tested AS control_objective_tested_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.cntrl_objective_tested,'\\\\|',',','n/a')  AS control_objective_tested_desc,
tr.country AS country_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.country,'\\\\|',',','n/a')  AS country_name,
tr.ctrl_tst_apprch AS control_test_approach_desc,
TO_DATE(tr.date_performed) AS performed_date,
tr.date_performed AS performed_ts,
tr.delegate AS delegate_user_lanid_name,
lookupValueByUserList('actorinfo',tr.delegate,'\\\\$;',',','n/a') AS delegate_user_desc,
TO_DATE(tr.due_date) AS due_date,
tr.exception_desc AS exception_desc,
tr.exception_type AS exception_type_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.exception_type,'\\\\|',',','n/a')  AS exception_type_desc,
tr.exceptions00 AS exception_noted_id,
lookupValueByIdList('i18n_int_enum_vals',tr.exceptions00,'\\\\|',',','n/a') AS exception_noted_flag,
tr.location_name AS location_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.location_name,'\\\\|',',','n/a') AS location_name,
tr.performed_by AS performed_by_user_lanid_name,
lookupValueByUserList('actorinfo',tr.performed_by,'\\\\$;',',','n/a') AS performed_by_user_desc,
tr.region AS region_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.region,'\\\\|',',','n/a')  AS region_name,
tr.sample_size AS sample_size_desc,
tr.test_category AS test_category_id,
lookupValueByIdList('i18n_int_enum_vals',tr.test_category,'\\\\|',',','n/a') AS test_category_desc,
tr.test_procedure AS test_procedure_desc,
tr.test_result AS test_result_conclusion_id,
lookupValueByIdList('i18n_int_enum_vals',tr.test_result,'\\\\|',',','n/a')  AS test_result_conclusion_desc,
tr.test_result_comm AS test_result_comment_text,
tr.testing_phase AS testing_phase_id,
lookupValueByIdList('i18n_int_enum_vals',tr.testing_phase,'\\\\|',',','n/a')  AS testing_phase_desc,
tr.testing_status AS testing_status_id,
lookupValueByIdList('i18n_int_enum_vals',tr.testing_status,'\\\\|',',','n/a') AS testing_status_desc,
tr.tr_group AS test_result_group_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.tr_group,'\\\\|',',','n/a') AS test_result_group_name,
tr.tr_risk AS test_result_risk_ids,
lookupValueByIdList('i18n_int_enum_vals',tr.tr_risk,'\\\\|',',','n/a')  AS test_result_risk_name,
tr.tst_classificatn AS test_result_classification_id,
lookupValueByIdList('i18n_int_enum_vals',tr.tst_classificatn,'\\\\|',',','n/a')  AS test_result_classification_desc,
tr.tst_dsgn_efctvness AS test_result_design_effectiveness_id,
lookupValueByIdList('i18n_int_enum_vals',tr.tst_dsgn_efctvness,'\\\\|',',','n/a') AS test_result_design_effectiveness_desc,
tr.tst_perf_efctvness AS test_result_performance_effectiveness_id,
lookupValueByIdList('i18n_int_enum_vals',tr.tst_perf_efctvness,'\\\\|',',','n/a')  AS test_result_performance_effectiveness_desc,
tr.tst_plan_prc_typ AS test_plan_type_id,
lookupValueByIdList('i18n_int_enum_vals',tr.tst_plan_prc_typ,'\\\\|',',','n/a')  AS test_plan_type_desc,
tr.type00 AS test_result_type_id,
lookupValueByIdList('i18n_int_enum_vals',tr.type00,'\\\\|',',','n/a') AS test_result_type_desc,
tr.deletedreason as deleted_reason_desc,
tr.overallassrating as overall_assessment_rating_id,
lookupValueByIdList('i18n_int_enum_vals',tr.overallassrating,'\\\\|',',','n/a') AS overall_assessment_rating_desc,
'Openpages' AS source
FROM test_result tr
LEFT JOIN ai ai_creator
ON tr.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON tr.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON tr.testresult_id=re.resourceid
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_test_result"
    },
    {
      "stepDescription": "create sat_business_entity",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_entity/",
          "viewName": "rt_entity",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH business_entity AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.entity_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_entity a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_entity')c WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
e.entity_bk AS business_entity_bk,
e.entity_id AS business_entity_id,
e.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
e.parent_folder AS parent_folder_id,
e.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
e.name00 AS business_entity_name,
e.description AS business_entity_desc,
e.full_path AS  business_entity_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/BusinessEntity/','/') AS resource_business_entity_full_path_desc,
substring(REPLACE(re.fullpath,'/_op_sox/Project/Default/BusinessEntity/','/'), 1, ((instr(REPLACE(re.fullpath,'/_op_sox/Project/Default/BusinessEntity/','/'), substring_index(REPLACE(re.fullpath,'/_op_sox/Project/Default/BusinessEntity/','/'), e.name00, -1)) - length(e.name00)) - 2))  As business_entity_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/BusinessEntity/','/'),'/')[2] AS business_entity_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/BusinessEntity/','/'),'/')[3] AS business_entity_folder_division_name,
e.creation_date AS creation_ts,
TO_DATE(e.creation_date) AS creation_date,
e.modification_date AS modification_ts,
TO_DATE(e.modification_date) AS modification_date,
e.detail_page_url AS business_entity_op_url_text,
e.basel_bus_line AS basel_bus_line_id,
lookupValueByIdList('i18n_int_enum_vals',e.basel_bus_line,'\\\\|',',','n/a') AS basel_bus_line_desc,
e.entity_type AS business_entity_type_id,
lookupValueByIdList('i18n_int_enum_vals',e.entity_type,'\\\\|',',','n/a') AS business_entity_type_desc,
e.scorecards_mapping AS scorecards_mapping_id,
lookupValueByIdList('i18n_int_enum_vals',e.scorecards_mapping,'\\\\|',',','n/a') AS scorecards_mapping_desc,
e.status AS status_id,
lookupValueByIdList('i18n_int_enum_vals',e.status,'\\\\|',',','n/a') AS status_desc,
e.ui_create_inci AS ui_create_inci_desc,
e.TAGSOURCEID as cube_reg_tag_desc,
'Openpages' AS source
FROM business_entity e
LEFT JOIN ai ai_creator
ON e.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON e.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON e.entity_id=re.resourceid
WHERE re.isdeleted = 0
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_business_entity"
    },
    {
      "stepDescription": "create sat_risk",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_risk/",
          "viewName": "rt_risk",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH risk AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.risk_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_risk a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_risk')c WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
r.risk_bk AS risk_bk,
r.risk_id AS risk_id,
r.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
r.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
r.parent_folder AS parent_folder_id,
r.name00 AS risk_name,
r.description AS risk_description,
r.full_path AS risk_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risks/','/') AS resource_risk_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risks/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risks/','/'), r.name00)-2) As risk_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risks/','/'),'/')[2] AS risk_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Risks/','/'),'/')[3] AS risk_folder_division_name,
r.creation_date AS creation_ts,
TO_DATE(r.creation_date) AS creation_date,
r.modification_date AS modification_ts,
TO_DATE(r.modification_date) AS modification_date,
r.detail_page_url AS risk_op_url_text,
r.country AS country_id,
lookupValueByIdList('i18n_int_enum_vals',r.country,'\\\\|',',','n/a') AS country_name,
r.external_reference AS external_reference_desc,
r.impactcat AS impacted_category_id,
lookupValueByIdList('i18n_int_enum_vals',r.impactcat ,'\\\\|',',','n/a') AS impacted_category_name,
r.inh_impact AS hightest_inherent_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inh_impact,'\\\\|',',','n/a') AS hightest_inherent_impact_desc,
r.inh_likelihood AS inherent_likelihood_id,
lookupValueByIdList('i18n_int_enum_vals',r.inh_likelihood,'\\\\|',',','n/a') AS inherent_likelihood_desc,
r.inh_rating AS overall_inherent_id,
lookupValueByIdList('i18n_int_enum_vals',r.inh_rating ,'\\\\|',',','n/a')  AS overall_inherent_desc,
r.inhclient AS inherent_external_clients_and_customers_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhclient,'\\\\|',',','n/a') AS inherent_external_clients_and_customers_impact_desc,
r.inhexthses AS inherent_external_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhexthses,'\\\\|',',','n/a')  AS inherent_external_hses_impact_desc,
r.inhfin AS inherent_internal_financial_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhfin,'\\\\|',',','n/a')  AS inherent_internal_financial_impact_desc,
r.inhint AS inherent_internal_internal_to_macquarie_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhint,'\\\\|',',','n/a')  AS inherent_internal_internal_to_macquarie_impact_desc,
r.inhinthses AS inherent_internal_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhinthses,'\\\\|',',','n/a')  AS inherent_internal_hses_impact_desc,
r.inhmkt AS inherent_external_markets_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhmkt,'\\\\|',',','n/a')  AS inherent_external_markets_impact_desc,
r.inhreg AS inherent_internal_regulatory_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhreg,'\\\\|',',','n/a')  AS inherent_internal_regulatory_impact_desc,
r.inhrep AS inherent_internal_reputational_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhrep,'\\\\|',',','n/a')  AS inherent_internal_reputational_impact_desc,
r.legal_entity AS legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',r.legal_entity,'\\\\|',',','n/a') AS legal_entity_names,
r.library_id AS library_id,
r.location_name AS location_ids,
lookupValueByIdList('i18n_int_enum_vals',r.location_name,'\\\\|',',','n/a') AS location_name,
r.parent_risk AS parent_risk_id,
lookupValueByIdList('i18n_int_enum_vals',r.parent_risk,'\\\\|',',','n/a')  AS parent_risk_desc,
r.parent_risk_cat AS parent_risk_category_id,
lookupValueByIdList('i18n_int_enum_vals',r.parent_risk_cat,'\\\\|',',','n/a') AS parent_risk_category_desc,
r.primary_impact AS primary_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.primary_impact,'\\\\|',',','n/a')  AS primary_impact_desc,
r.reason_inh_rsk_rtg AS reason_inherent_risk_rating_desc,
r.reason_residual_rsk_rt AS reason_residual_risk_rating_desc,
r.region AS region_ids,
lookupValueByIdList('i18n_int_enum_vals',r.region,'\\\\|',',','n/a') AS region_name,
r.res_impact AS highest_residual_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.res_impact ,'\\\\|',',','n/a') AS highest_residual_impact_desc,
r.res_likelihood AS residual_likelihood_id,
lookupValueByIdList('i18n_int_enum_vals',r.res_likelihood,'\\\\|',',','n/a')  AS residual_likelihood_desc,
r.res_rating AS overall_residual_id,
lookupValueByIdList('i18n_int_enum_vals',r.res_rating,'\\\\|',',','n/a') AS overall_residual_desc,
r.risk_owner AS risk_owner_lanid_name,
lookupValueByUserList('actorinfo',r.risk_owner,'\\\\$;',',','n/a') AS risk_owner_desc,
r.risk_status AS risk_status_id,
lookupValueByIdList('i18n_int_enum_vals',r.risk_status,'\\\\|',',','n/a')  AS risk_status_desc,
r.risk_type AS risk_type_id,
lookupValueByIdList('i18n_int_enum_vals',r.risk_type,'\\\\|',',','n/a')  AS risk_type_desc,
r.riskdescr AS risk_long_description,
r.risktaxl1 AS risk_event_category_1_id,
lookupValueByIdList('i18n_int_enum_vals',r.risktaxl1,'\\\\|',',','n/a')  AS risk_event_category_1_name,
r.risktaxl2 AS risk_event_category_2_id,
lookupValueByIdList('i18n_int_enum_vals',r.risktaxl2,'\\\\|',',','n/a') AS risk_event_category_2_name,
r.risktaxl3 AS risk_event_category_3_id,
lookupValueByIdList('i18n_int_enum_vals',r.risktaxl3,'\\\\|',',','n/a') AS risk_event_category_3_name,
r.rsdualclient AS residual_external_clients_and_customers_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualclient,'\\\\|',',','n/a') AS residual_external_clients_and_customers_impact_desc,
r.rsdualexthses AS residual_external_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualexthses,'\\\\|',',','n/a')  AS residual_external_hses_impact_desc,
r.rsdualfin AS residual_internal_financial_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualfin,'\\\\|',',','n/a') AS residual_internal_financial_impact_desc,
r.rsdualint AS residual_internal_internal_to_macquarie_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualint,'\\\\|',',','n/a')  AS residual_internal_internal_to_macquarie_impact_desc,
r.rsdualinthses AS residual_internal_hses_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualinthses,'\\\\|',',','n/a') AS residual_internal_hses_impact_desc,
r.rsdualmkt AS residual_external_markets_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualmkt,'\\\\|',',','n/a') AS residual_external_markets_impact_desc,
r.rsdualreg AS residual_internal_regulatory_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualreg,'\\\\|',',','n/a') AS residual_internal_regulatory_impact_desc,
r.rsdualrep AS residual_internal_reputational_impact_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualrep,'\\\\|',',','n/a') AS residual_internal_reputational_impact_desc,
source00 AS risk_source_id,
lookupValueByIdList('i18n_int_enum_vals',r.source00,'\\\\|',',','n/a') AS risk_source_name,
r.inh_score AS inh_score_no,
r.res_score AS res_score_no,
r.rsdualextwhs as residual_external_whs_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualextwhs,'\\\\|',',','n/a') AS residual_external_whs_desc,
r.inhintwhs as inherent_internal_whs_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhintwhs,'\\\\|',',','n/a') AS inherent_internal_whs_desc,
r.rsdualintwhs as residual_internal_whs_id,
lookupValueByIdList('i18n_int_enum_vals',r.rsdualintwhs,'\\\\|',',','n/a') AS residual_internal_whs_desc,
r.inhextwhs as inherent_external_whs_id,
lookupValueByIdList('i18n_int_enum_vals',r.inhextwhs,'\\\\|',',','n/a') AS inherent_external_whs_desc,
'Openpages' AS source
FROM risk r
LEFT JOIN ai ai_creator
ON r.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON r.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON r.risk_id=re.resourceid
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_risk"
    },
{
      "stepDescription": "create sat_auditable_entity",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_auditableentity/",
          "viewName": "rt_auditableentity",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_system_workflow_fields/",
          "viewName": "rt_system_workflow_fields",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actors/",
          "viewName": "actors",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH auditable_entity AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.auditableentity_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_auditableentity a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_auditableentity')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
actors AS
(
SELECT * FROM actors
),
ai_actors AS
(
SELECT ai.name, ai.description,actors.namespaceid ,actors.type
FROM ai
LEFT OUTER JOIN
actors
ON ai.actorid=actors.actorid
),
system_workflow_fields AS 
(
SELECT CASE WHEN ai_assignee.type=2 or ai_assignee.namespaceid=2 THEN i.wf_assignee_name ELSE ai_assignee.description END AS assignee_names_user_desc_raw,CASE WHEN ai_subscriber.type=2 or ai_subscriber.namespaceid=2 THEN i.wf_copied_user_name ELSE ai_subscriber.description END AS subscriber_names_user_desc_raw,wf_resource_id,wf_assignee_name,wf_copied_user_name
FROM
(
SELECT *,dense_rank() OVER (PARTITION BY wf_resource_id ORDER BY wf_process_instance_id desc,wf_activity_instance_id desc) AS row_nbr FROM rt_system_workflow_fields WHERE batch_id IN (SELECT max(distinct batch_id) FROM rt_system_workflow_fields) and  wf_process_state=1
)i 
left outer join ai_actors ai_assignee
on i.wf_assignee_name=ai_assignee.name
left outer join ai_actors ai_subscriber
on i.wf_copied_user_name=ai_subscriber.name
WHERE row_nbr=1
),
sys_wf AS (
SELECT
wf_resource_id, concat_ws(',', collect_list(distinct wf_assignee_name)) as assignee_names,concat_ws(',', collect_list(distinct wf_copied_user_name)) as subscriber_names,concat_ws(',', collect_list(distinct assignee_names_user_desc_raw)) as assignee_names_user_desc,concat_ws(',', collect_list(distinct subscriber_names_user_desc_raw)) as subscriber_names_user_desc
from system_workflow_fields
group by  wf_resource_id
)
SELECT
ae.auditableentity_bk AS auditable_entity_bk,
ae.auditableentity_id AS auditable_entity_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 AS auditable_entity_name,
ae.description AS auditable_entity_desc,
ae.full_path AS auditable_entity_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditable Entities/','/') AS resource_auditable_entity_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditable Entities/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditable Entities/','/'), ae.name00)-2) As auditable_entity_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditable Entities/','/'),'/')[2] AS auditable_entity_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditable Entities/','/'),'/')[3] AS auditable_entity_folder_division_name,
ae.creation_date AS creation_ts,
TO_DATE(ae.creation_date) AS creation_date,
ae.modification_date AS modification_ts,
TO_DATE(ae.modification_date) AS modification_date,
ae.detail_page_url AS auditable_entity_op_url_text,
ae.accelus_id AS accelus_id,
ae.area_for_future_audit_ AS area_for_future_audit_desc,
ae.audit_dir AS audit_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_dir,'\\\\$;',',','n/a')  AS audit_director_user_desc,
ae.audit_team AS audit_team_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_team,'\\\\|',',','n/a') AS audit_team_desc,
ae.auditable_entity_descr AS auditable_entity_long_desc,
TO_DATE(ae.date_retired) AS retired_date,
ae.group00 AS group_id,
lookupValueByIdList('i18n_int_enum_vals',ae.group00,'\\\\|',',','n/a') AS group_desc,
ae.joint_venture AS joint_venture_id,
lookupValueByIdList('i18n_int_enum_vals',ae.joint_venture,'\\\\|',',','n/a')  AS joint_venture_flag,
lookupValueByIdList('i18n_int_enum_vals',ae.previous_audit_result,'\\\\|',',','n/a')  AS previous_audit_result_desc,
ae.professional_practice_ AS professional_practice_desc,
ae.retired_by AS retired_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.retired_by,'\\\\$;',',','n/a')  AS retired_by_user_desc,
ae.retired_reason AS retired_reason_desc,
ae.risk_rating AS risk_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ae.risk_rating,'\\\\|',',','n/a') AS risk_rating_desc,
ae.status AS status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.status,'\\\\|',',','n/a') AS status_desc,
cast(ae.library_record as bigint) as library_record_id,
lookupValueByIdList('i18n_int_enum_vals',ae.library_record,'\\\\|',',','n/a') as library_record_desc,
sys_wf.assignee_names as system_workflow_assignees,
sys_wf.subscriber_names as system_workflow_subscribers,
sys_wf.assignee_names_user_desc as system_workflow_assignee_names_user_desc,
sys_wf.subscriber_names_user_desc as system_workflow_subscriber_names_user_desc,
CAST(ae.ae_reviewed_and_approv AS bigint) AS ae_reviewed_and_approved_id,
lookupValueByIdList('i18n_int_enum_vals',ae.ae_reviewed_and_approv,'\\\\|',',','n/a') as ae_reviewed_and_approved_desc,
TO_DATE(ae.ae_reviewed_and_appr01) AS ae_reviewed_and_approved_date,
ae.data_management AS data_management_desc,
ae.ae_reviewed_and_appr00 AS ae_reviewed_and_approved_user_lanid_name,
lookupValueByUserList('actorinfo',ae.ae_reviewed_and_appr00,'\\\\$;',',','n/a') as ae_reviewed_and_approved_user_desc,
CAST(ae.control_environment_as AS bigint) AS control_environment_assessment_id,
lookupValueByIdList('i18n_int_enum_vals',ae.control_environment_as,'\\\\|',',','n/a') as control_environment_assessment_desc,
ae.key_licenses AS key_licenses_desc,
ae.key_partners AS key_partners_desc,
TO_DATE(ae.last_audit_report_issu) AS last_audit_report_issues_date,
ae.organisational_structu AS organisational_structure_desc,
CAST(ae.adjriskrating AS bigint) AS adjusted_risk_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ae.adjriskrating,'\\\\|',',','n/a') as adjusted_risk_rating_desc,
ae.assesscomment AS assessment_commentary_desc,
CAST(ae.audit_cycle_flag AS bigint) AS audit_cycle_flag_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_cycle_flag,'\\\\|',',','n/a') as audit_cycle_flag_desc,
ae.avgriskscore AS average_risk_score_no,
ae.strategic_objectives AS strategic_objectives_desc,
CAST(ae.avgriskrating AS bigint) AS initial_risk_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ae.avgriskrating ,'\\\\|',',','n/a') as initial_risk_rating_desc,
ae.key_activities AS key_activities_desc,
ae.key_models AS key_models_desc,
ae.key_technology_systems AS key_technology_systems_desc,
ae.override_rationale AS override_rationale_desc,
CAST(ae.review_completed_flag AS bigint) AS risk_assessment_completed_id,
lookupValueByIdList('i18n_int_enum_vals',ae.review_completed_flag,'\\\\|',',','n/a') as risk_assessment_completed_desc,
ae.audit_cycle_rationale AS audit_cycle_rationale_desc,
ae.financials AS financials_desc,
ae.key_regulations AS key_regulations_desc,
CAST(ae.override_risk_rating AS bigint) AS override_risk_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ae.override_risk_rating ,'\\\\|',',','n/a') as override_risk_rating_desc,
CAST(ae.mglmbl AS bigint) AS mgl_or_mbl_id,
lookupValueByIdList('i18n_int_enum_vals',ae.mglmbl,'\\\\|',',','n/a') as mgl_or_mbl_desc,
CAST(ae.next_audit_report_due AS DATE) AS next_audit_report_due_date,
'Openpages' AS source
FROM auditable_entity ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.auditableentity_id=re.resourceid
LEFT JOIN sys_wf 
ON ae.auditableentity_id=sys_wf.wf_resource_id",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_auditable_entity"
    },  
	
{
      "stepDescription": "create sat_audit_program",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_auditprogram/",
          "viewName": "rt_auditprogram",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_system_workflow_fields/",
          "viewName": "rt_system_workflow_fields",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actors/",
          "viewName": "actors",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH auditprogram AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.auditprogram_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_auditprogram a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_auditprogram')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
actors AS
(
SELECT * FROM actors
),
ai_actors AS
(
SELECT ai.name, ai.description,actors.namespaceid ,actors.type
FROM ai
LEFT OUTER JOIN
actors
ON ai.actorid=actors.actorid
),
system_workflow_fields AS 
(
SELECT CASE WHEN ai_assignee.type=2 or ai_assignee.namespaceid=2 THEN i.wf_assignee_name ELSE ai_assignee.description END AS assignee_names_user_desc_raw,CASE WHEN ai_subscriber.type=2 or ai_subscriber.namespaceid=2 THEN i.wf_copied_user_name ELSE ai_subscriber.description END AS subscriber_names_user_desc_raw,wf_resource_id,wf_assignee_name,wf_copied_user_name
FROM
(
SELECT *,dense_rank() OVER (PARTITION BY wf_resource_id ORDER BY wf_process_instance_id desc,wf_activity_instance_id desc) AS row_nbr FROM rt_system_workflow_fields WHERE batch_id IN (SELECT max(distinct batch_id) FROM rt_system_workflow_fields) and  wf_process_state=1
)i 
left outer join ai_actors ai_assignee
on i.wf_assignee_name=ai_assignee.name
left outer join ai_actors ai_subscriber
on i.wf_copied_user_name=ai_subscriber.name
WHERE row_nbr=1
),
sys_wf AS (
SELECT
wf_resource_id, concat_ws(',', collect_list(distinct wf_assignee_name)) as assignee_names,concat_ws(',', collect_list(distinct wf_copied_user_name)) as subscriber_names,concat_ws(',', collect_list(distinct assignee_names_user_desc_raw)) as assignee_names_user_desc,concat_ws(',', collect_list(distinct subscriber_names_user_desc_raw)) as subscriber_names_user_desc
from system_workflow_fields
group by  wf_resource_id
)
SELECT
ae.auditprogram_bk as audit_program_bk,
ae.auditprogram_id as audit_program_id,
ae.creator as created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 AS audit_program_name,
ae.description AS audit_program_desc,
ae.full_path AS audit_program_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audits/','/') AS resource_audit_program_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audits/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audits/','/'), ae.name00)-2) As audit_program_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audits/','/'),'/')[2] AS audit_program_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audits/','/'),'/')[3] AS audit_program_folder_division_name,
ae.creation_date AS creation_ts,
TO_DATE(ae.creation_date) AS creation_date,
ae.modification_date AS modification_ts,
TO_DATE(ae.modification_date) AS modification_date,
ae.detail_page_url AS audit_program_op_url_text,
ae.actual_end_date as actual_end_ts,
TO_DATE(ae.actual_end_date) as actual_end_date,
actual_file_closed_kpi as actual_file_closed_ts,
TO_DATE(ae.actual_file_closed_kpi) as actual_file_closed_date,
actual_hours as actual_hours_consumed_desc,
actual_start_date as actual_start_ts,
TO_DATE(ae.actual_start_date) as actual_start_date,
cast(americas_hours_origina as int) as americas_hours_original_no,
cast(americas_hours_revised as int) as americas_hours_revised_no,
cast(americas_innov_hours_o as int) as americas_innov_hours_original_no,
cast(americas_innov_hours_r as int) as americas_innov_hours_revised_no,
cast(americas_it_hours_orig as int) as americas_it_hours_original_no,
cast(americas_it_hours_revi as int) as americas_it_hours_revised_no,
cast(anz_hours_original as int) as anz_hours_original_no,
cast(anz_hours_revised as int) as anz_hours_revised_no,
cast(anz_innov_hours_origin as int) as anz_innov_hours_original_no,
cast(anz_innov_hours_revise as int) as anz_innov_hours_revised_no,
cast(anz_it_hours_original as int) as anz_it_hours_original_no,
cast(anz_it_hours_revised as int) as anz_it_hours_revised_no,
cast(asia_hours_original as int) as asia_hours_original_no,
cast(asia_hours_revised as int) as asia_hours_revised_no,
cast(asia_innov_hours_origi as int) as asia_innov_hours_original_no,
cast(asia_innov_hours_revis as int) as asia_innov_hours_revised_no,
cast(asia_it_hours_original as int) as asia_it_hours_original_no,
cast(asia_it_hours_revised as int) as asia_it_hours_revised_no,
aud_director as aud_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.aud_director,'\\\\$;',',','n/a')  AS aud_director_user_desc,
audit_close_tl_reque00 as audit_close_tl_request_ts,
TO_DATE(ae.audit_close_tl_reque00) as audit_close_tl_request_date,
audit_director_sign_of as audit_director_sign_off_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_director_sign_of,'\\\\$;',',','n/a')  as audit_director_sign_off_by_user_desc,
audit_execution_set_by as audit_execution_set_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_execution_set_by,'\\\\$;',',','n/a') as audit_execution_set_by_user_desc,
audit_locked_by as audit_locked_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_locked_by,'\\\\$;',',','n/a') as audit_locked_by_user_desc,
audit_number as audit_number_desc,
audit_origin as audit_origin_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_origin,'\\\\|',',','n/a') as audit_origin_desc,
audit_period_end as audit_period_end_ts,
TO_DATE(ae.audit_period_end) as audit_period_end_date,
audit_planning_set_by as audit_planning_set_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_planning_set_by,'\\\\$;',',','n/a') as audit_planning_set_by_user_desc,
audit_rating as audit_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_rating,'\\\\|',',','n/a') as audit_rating_desc,
audit_reporting_set_by as audit_reporting_set_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_reporting_set_by,'\\\\$;',',','n/a') as audit_reporting_set_by_user_desc,
audit_review_director as audit_review_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_review_director,'\\\\$;',',','n/a') as audit_review_director_user_desc,
audit_security as audit_security_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_security,'\\\\|',',','n/a') as audit_security_desc,
audit_team as audit_team_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_team,'\\\\|',',','n/a') as audit_team_desc,
audit_team_leader as audit_team_leader_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_team_leader,'\\\\$;',',','n/a') as audit_team_leader_user_desc,
audit_team_members as audit_team_members_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_team_members,'\\\\$;',',','n/a') as audit_team_members_user_desc,
audit_year as audit_year_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_year,'\\\\|',',','n/a') as audit_year_desc,
budget_revision_ration as budget_revision_rationale_desc,
budget_revision_requir as budget_revision_required_id,
lookupValueByIdList('i18n_int_enum_vals',ae.budget_revision_requir,'\\\\|',',','n/a') as budget_revision_required_desc,
budget_variance_revise as budget_variance_revised_no,
business_overview as business_overview_desc,
cae as cae_user_lanid_name,
lookupValueByUserList('actorinfo',ae.cae,'\\\\$;',',','n/a') as ca_user_desc,
closed as audit_closed_id,
lookupValueByIdList('i18n_int_enum_vals',ae.closed,'\\\\|',',','n/a') as audit_closed_desc,
commentsnotesupdate as comments_desc,
complex_technology_env as complex_technology_env_id,
lookupValueByIdList('i18n_int_enum_vals',ae.complex_technology_env,'\\\\|',',','n/a') as complex_technology_env_desc,
cast (emea_hours_original as int) as emea_hours_original_no,
cast (emea_hours_revised as int) as emea_hours_revised_no,
cast (emea_innov_hours_origi as int) as emea_innov_hours_original_no,
cast (emea_innov_hours_revis as int) as emea_innov_hours_revised_no,
cast (emea_it_hours_original as int) as emea_it_hours_original_no,
cast (emea_it_hours_revised as int) as emea_it_hours_revised_no,
cast( estimated_hours as int) as estimated_hours_no,
execution_end_date as execution_end_ts,
TO_DATE(ae.execution_end_date) as execution_end_date,
execution_start_date as execution_start_ts,
TO_DATE(ae.execution_start_date) as execution_start_date,
cast(external_sme_hours as int) as external_sme_hours_original_no,
cast(external_sme_hours_rev as int) as external_sme_hours_revised_no,
final_audit_director_s as final_audit_director_sign_off_ts,
TO_DATE(ae.final_audit_director_s) as final_audit_director_sign_off_date,
final_team_leader_sign as final_team_leader_sign_off_ts,
TO_DATE(ae.final_team_leader_sign) as final_team_leader_sign_off_date,
forecast_hours_remaini as forecast_hours_remaining_no,
galileo_id as galileo_id,
cast( gurugram_hours_origina as int) as gurugram_hours_original_no,
cast( gurugram_hours_revised as int) as gurugram_hours_revised_no,
cast( gurugram_innov_hours_o as int) as gurugram_innov_hours_original_no,
cast( gurugram_innov_hours_r as int) as gurugram_innov_hours_revised_no,
cast( gurugram_it_hours_orig as int) as gurugram_it_hours_original_no,
cast( gurugram_it_hours_revi as int) as gurugram_it_hours_revised_no,
iad_initiated_cancella as audit_cancelled_id,
lookupValueByIdList('i18n_int_enum_vals',ae.iad_initiated_cancella,'\\\\|',',','n/a') as audit_cancelled_flag,
it_reviewer as it_reviewer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.it_reviewer,'\\\\$;',',','n/a') as it_reviewer_user_desc,
key_stakeholders as key_stakeholders_user_lanid_name,
lookupValueByUserList('actorinfo',ae.key_stakeholders,'\\\\$;',',','n/a') as key_stakeholders_user_desc,
mglmbl as mgl_or_mbl_id,
lookupValueByIdList('i18n_int_enum_vals',ae.mglmbl,'\\\\|',',','n/a') as mgl_or_mbl_desc,
objectives as objectives_desc,
planning_end_date as planning_end_ts,
TO_DATE(ae.planning_end_date) as planning_end_date,
planning_start_date as planning_start_ts,
TO_DATE(ae.planning_start_date) as planning_start_date,
preparer as preparer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.preparer,'\\\\$;',',','n/a') as preparer_user_desc,
professional_practice_ as professional_practice_desc,
rationale_for_revision as rationale_for_revision_desc,
regulatory_requireme00 as regulatory_requirement_source_desc,
regulatory_requirement as regulatory_requirement_id,
lookupValueByIdList('i18n_int_enum_vals',ae.regulatory_requirement,'\\\\|',',','n/a') as regulatory_requirement_desc,
reliance_on_assurance_ as reliance_on_assurance_id,
lookupValueByIdList('i18n_int_enum_vals',ae.reliance_on_assurance_,'\\\\|',',','n/a') as reliance_on_assurance_desc,
report_date as report_ts,
TO_DATE(ae.report_date) as report_date,
report_status as report_status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.report_status,'\\\\|',',','n/a') as report_status_desc,
reporting_end_date as reporting_end_ts,
TO_DATE(ae.reporting_end_date) as reporting_end_date,
reporting_start_date as reporting_start_ts,
TO_DATE(ae.reporting_start_date) as reporting_start_date,
result_comments as result_comments_desc,
rm as audit_business_owner_user_lanid_name,
lookupValueByUserList('actorinfo',ae.rm,'\\\\$;',',','n/a') as audit_business_owner_user_desc,
scheduled_by as scheduled_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.scheduled_by,'\\\\$;',',','n/a') as scheduled_by_user_desc,
TO_DATE(scheduled_end_date00) as scheduled_end_date,
scheduled_phase_ended_ as scheduled_phase_ended_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.scheduled_phase_ended_,'\\\\$;',',','n/a') as scheduled_phase_ended_by_user_desc,
scheduled_qtr as scheduled_qtr_id,
lookupValueByIdList('i18n_int_enum_vals',ae.scheduled_qtr,'\\\\|',',','n/a') as scheduled_qtr_desc,
TO_DATE(scheduled_start_date00) as scheduled_start_date,
sme_reviewer as sme_reviewer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.sme_reviewer,'\\\\$;',',','n/a') as sme_reviewer_user_desc,
status as audit_status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.status,'\\\\|',',','n/a') as audit_status_desc,
team_leader_sign_off_b as team_leader_sign_off_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.team_leader_sign_off_b,'\\\\$;',',','n/a') as team_leader_sign_off_by_user_desc,
cast (total_americas_hours_o as int) as total_americas_hours_original_no,
cast (total_americas_hours_r as int) as total_americas_hours_revised_no,
cast (total_anz_hours_origin as int) as total_anz_hours_original_no,
cast (total_anz_hours_revise as int) as total_anz_hours_revised_no,
cast (total_asia_hours_origi as int) as total_asia_hours_original_no,
cast (total_asia_hours_revis as int) as total_asia_hours_revised_no,
cast (total_budget_revised as int) as total_budget_revised_no,
cast (total_emea_hours_origi as int) as total_emea_hours_original_no,
cast (total_emea_hours_revis as int) as total_emea_hours_revised_no,
total_fieldwork_hours_ as total_fieldwork_hours_consumed_no,
cast (total_gurugram_hours_o as int) as total_gurugram_hours_original_no,
cast (total_gurugram_hours_r as int) as total_gurugram_hours_revised_no,
total_hours_consumed as total_hours_consumed_no,
total_icv_hours as total_icv_hours_no,
total_ojt_consumed as total_on_the_job_consumed_no,
total_planning_hours_c as total_planning_hours_consumed_no,
total_reporting_hours_ as total_reporting_hours_consumed_no,
type01 as audit_product_id,
lookupValueByIdList('i18n_int_enum_vals',ae.type01,'\\\\|',',','n/a') as audit_product_desc,
variance_explanation_r as variance_explanation_desc,
workstep_approver as workstep_approver_user_lanid_name,
lookupValueByUserList('actorinfo',ae.workstep_approver,'\\\\$;',',','n/a') as workstep_approver_user_desc,
workstep_coordinator as workstep_coordinator_user_lanid_name,
lookupValueByUserList('actorinfo',ae.workstep_coordinator,'\\\\$;',',','n/a') as workstep_coordinator_user_desc,
workstep_team as workstep_team_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.workstep_team,'\\\\|',',','n/a') as workstep_team_desc,
workstep_team_members as workstep_team_members_user_lanid_name,
lookupValueByUserList('actorinfo',ae.workstep_team_members,'\\\\$;',',','n/a') as workstep_team_members_user_desc,
board_approved_qtr as board_approved_qtr_id,
lookupValueByIdList('i18n_int_enum_vals',ae.board_approved_qtr,'\\\\|',',','n/a') as board_approved_qtr_desc,
published_audit_refere as published_audit_reference_desc,
published_audit_system as published_audit_system_path_desc,
TO_DATE(scheduled_start_date) as audit_start_planned_date,
cast(library_record as bigint) as library_record_id,
lookupValueByIdList('i18n_int_enum_vals',ae.library_record,'\\\\|',',','n/a') as library_record_desc,
cast(group00 as bigint) as group_id,
lookupValueByIdList('i18n_int_enum_vals',ae.group00,'\\\\|',',','n/a') as group_desc,
TO_DATE(planning_end_date_calc) as calculated_planning_end_date,
TO_DATE(fieldwork_end_date_cal) as calculated_fieldwork_end_date,
sys_wf.assignee_names as system_workflow_assignees,
sys_wf.subscriber_names as system_workflow_subscribers,
sys_wf.assignee_names_user_desc as system_workflow_assignee_names_user_desc,
sys_wf.subscriber_names_user_desc as system_workflow_subscriber_names_user_desc,
CAST(ae.subteamsme AS BIGINT) AS subteamsme_id,
lookupValueByIdList('i18n_int_enum_vals',ae.subteamsme,'\\\\|',',','n/a') as subteamsme_desc,
ae.Change_health_check_ra as change_health_check_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ae.Change_health_check_ra,'\\\\|',',','n/a') as change_health_check_rating_desc,
TO_DATE(ae.forecastaudrepdate) as forecast_audit_report_date,
ae.subcommittee as sub_committee_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.subcommittee,'\\\\|',',','n/a') as sub_committee_desc,
ae.apprchangerationale as approved_change_rationale_desc,
TO_DATE(ae.aprameetingdate) as apra_meeting_date,
TO_DATE(ae.boardapproveddate) as board_approved_date,
TO_DATE(ae.boardreporteddate) as board_reported_date,
CAST(ae.requestedbyapra as bigint) as requested_by_apra_id,
lookupValueByIdList('i18n_int_enum_vals',ae.requestedbyapra,'\\\\|',',','n/a') as requested_by_apra_desc,
TO_DATE(ae.boardapprchangesdate) as board_approved_changes_date,
ae.addtlbudgetrequest as additional_budget_request_no,
ae.budgetremaining as budget_remaining_no,
ae.businesshrsperplan as business_hours_per_plan_no,
ae.businesshrsremaining as business_hours_remaining_no,
ae.chaassurhrsperplan as change_assurance_hours_per_plan_no,
CAST(ae.budgetoverrun as bigint) as budget_overrun_id,
lookupValueByIdList('i18n_int_enum_vals',ae.budgetoverrun,'\\\\|',',','n/a') as budget_overrun_desc,
ae.chaassurhrsremaining as change_assurance_hours_remaining_no,
ae.datagovhrsperplan as data_governance_hours_per_plan_no,
ae.datagovhrsremaining as data_governance_hours_remaining_no,
ae.extsupphrsperplan as external_support_hours_per_plan_no,
ae.extsupphrsremaining as external_support_hours_remaining_no,
ae.innovhrsperplan as innovation_hours_per_plan_no,
ae.innovhrsremaining as innovation_hours_remaining_no,
ae.origbudgethours as original_budget_hours_no,
ae.revisedbudget as revised_budget_no,
ae.riskculhrsperplan as risk_culture_hours_per_plan_no,
ae.riskculhrsremaining as risk_culture_hours_remaining_no,
ae.techinthrsperplan as tech_integrated_hours_per_plan_no,
ae.techinthrsremaining as tech_integrated_hours_remaining_no,
ae.totalhoursconsumed as total_hours_consumed_exclude_icv_ext_support_no,
'Openpages' AS source
FROM auditprogram ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.auditprogram_id=re.resourceid
LEFT JOIN sys_wf 
ON ae.auditprogram_id=sys_wf.wf_resource_id",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_audit_program"
    },
{
      "stepDescription": "create sat_plan",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_plan/",
          "viewName": "rt_plan",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH sat_plan AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.plan_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_plan a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_plan')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ae.plan_bk AS plan_bk,
ae.plan_id AS plan_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as plan_name,
ae.description as plan_desc,
ae.full_path as plan_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Plans/','/') AS resource_plan_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Plans/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Plans/','/'), ae.name00)-2) As plan_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Plans/','/'),'/')[2] AS plan_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Plans/','/'),'/')[3] AS plan_folder_division_name,
ae.creation_date as creation_ts,
TO_DATE(ae.creation_date) as creation_date,
ae.modification_date as modification_ts,
TO_DATE(ae.modification_date) as modification_date,
ae.detail_page_url as plan_op_url_text,
ae.activity as activity_id,
lookupValueByIdList('i18n_int_enum_vals',ae.activity,'\\\\|',',','n/a') as activity_desc,
ae.actual_end_date as actual_end_ts,
TO_DATE(ae.actual_end_date) as actual_end_date,
ae.actual_hours as actual_hours_desc,
ae.actual_start_date as actual_start_ts,
TO_DATE(ae.actual_start_date) as actual_start_date,
ae.auditor as auditor_user_lanid_name,
lookupValueByUserList('actorinfo',ae.auditor,'\\\\$;',',','n/a') as auditor_user_desc,
ae.auditor_group as auditor_group_desc,
ae.certifications as certifications_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.certifications,'\\\\|',',','n/a') as certifications_desc,
ae.end_date as end_date_ts,
TO_DATE(ae.end_date) as end_date,
ae.expected_end_date as expected_end_date_ts,
TO_DATE(ae.expected_end_date) as expected_end_date,
ae.expected_start_date as expected_start_date_ts,
TO_DATE(ae.expected_start_date) as expected_start_date,
ae.ignore_trigger as ignore_trigger_id,
lookupValueByIdList('i18n_int_enum_vals',ae.ignore_trigger,'\\\\|',',','n/a') as ignore_trigger_desc,
ae.languages as languages_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.languages,'\\\\|',',','n/a') as languages_name,
ae.level00 as level_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.level00,'\\\\|',',','n/a') as level_desc,
ae.rdytocls as ready_to_close_id,
lookupValueByIdList('i18n_int_enum_vals',ae.rdytocls,'\\\\|',',','n/a') as ready_to_close_desc,
ae.schedule_change_reason as schedule_change_reason_desc,
ae.sites as sites_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.sites,'\\\\|',',','n/a') as sites_desc,
ae.specialties as specialties_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.specialties,'\\\\|',',','n/a') as specialties_desc,
ae.start_date as start_date_ts,
TO_DATE(ae.start_date) as start_date,
ae.status as status_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.status,'\\\\|',',','n/a') as status_desc,
ae.team as team_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.team,'\\\\|',',','n/a') as team_desc,
ae.total_hours_consumed as total_hours_consumed_no,
'Openpages' AS source
FROM sat_plan ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.plan_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_plan"
    },
	
	{
      "stepDescription": "create sat_auditor",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_auditor/",
          "viewName": "rt_auditor",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH auditor AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.auditor_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_auditor a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_auditor')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ae.auditor_bk AS auditor_bk,
ae.auditor_id AS auditor_id,
ae.name00 AS auditor_name,
ae.description AS auditor_desc,
ae.creation_date AS creation_ts,
TO_DATE(ae.creation_date) AS creation_date,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.full_path AS auditor_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditors/','/') AS resource_auditor_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditors/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditors/','/'), ae.name00)-2) As auditor_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditors/','/'),'/')[2] AS auditor_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Auditors/','/'),'/')[3] AS auditor_folder_division_name,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.modification_date AS modification_ts,
TO_DATE(ae.modification_date) as modification_date,
ae.detail_page_url AS auditor_op_url_text,
ae.auditor00 AS auditor_user_lanid_name,
lookupValueByUserList('actorinfo',ae.auditor00,'\\\\$;',',','n/a') AS auditor_user_desc,
ae.certifications00 AS professional_qualification_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.certifications00,'\\\\|',',','n/a')  AS professional_qualification_desc,
ae.email00 AS email_desc,
TO_DATE(ae.hire_date00) AS iad_start_date,
ae.home_phone00 AS home_phone_desc,
CAST(ae.hours00 AS int) AS location_available_hours_no,
ae.languages00 AS languages_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.languages00,'\\\\|',',','n/a') AS languages_name,
CAST(ae.level01 AS bigint) AS level_id,
lookupValueByIdList('i18n_int_enum_vals',ae.level01,'\\\\|',',','n/a')  AS level_desc,
ae.mobile_phone00 AS mobile_phone_desc,
CAST(ae.pc00 AS int) AS percent_per_week_no,
CAST(ae.site00 AS bigint) AS site_id,
lookupValueByIdList('i18n_int_enum_vals',ae.site00,'\\\\|',',','n/a')  AS site_desc,
ae.specialties00 AS specialties_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.specialties00,'\\\\|',',','n/a')  AS specialties_desc,
CAST(ae.status00 AS bigint) AS employee_type_id,
lookupValueByIdList('i18n_int_enum_vals',ae.status00,'\\\\|',',','n/a')  AS employee_type_desc,
CAST(ae.team00 AS bigint) AS team_id,
lookupValueByIdList('i18n_int_enum_vals',ae.team00,'\\\\|',',','n/a') AS team_desc,
ae.time_approver00 AS manager_user_lanid_names,
lookupValueByUserList('actorinfo',ae.time_approver00,'\\\\$;',',','n/a')  AS manager_user_desc,
ae.title00 AS title_desc,
ae.work_phone00 AS work_phone_desc,
ae.aud_director AS audit_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.aud_director,'\\\\$;',',','n/a') AS audit_director_user_desc,
ae.audit_review_director AS review_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_review_director,'\\\\$;',',','n/a') AS review_director_user_desc,
ae.audit_team_leader AS team_leader_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_team_leader,'\\\\$;',',','n/a') AS team_leader_user_desc,
ae.audit_team_members AS team_members_user_lanid_names,
lookupValueByUserList('actorinfo',ae.audit_team_members,'\\\\$;',',','n/a') AS team_members_user_desc,
ae.audit_workstep_approve AS audit_workstep_approver_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_workstep_approve,'\\\\$;',',','n/a') AS audit_workstep_approver_user_desc,
ae.audit_workstep_coordin AS audit_workstep_coordinator_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_workstep_coordin,'\\\\$;',',','n/a') AS audit_workstep_coordinator_user_desc,
CAST(ae.audit_workstep_team AS bigint) AS audit_workstep_team_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_workstep_team,'\\\\|',',','n/a') AS audit_workstep_team_desc,
ae.cae AS cae_user_lanid_name,
lookupValueByUserList('actorinfo',ae.cae,'\\\\$;',',','n/a') AS cae_user_desc,
ae.commentsnotesupdate AS comments_notes_update_desc,
CAST(ae.group00 AS bigint) AS group_id,
lookupValueByIdList('i18n_int_enum_vals',ae.group00,'\\\\|',',','n/a') AS group_desc,
ae.icv_approver AS icv_approver_user_lanid_name,
lookupValueByUserList('actorinfo',ae.icv_approver,'\\\\$;',',','n/a') AS icv_approver_user_desc,
ae.icv_coordinator AS icv_coordinator_user_lanid_name,
lookupValueByUserList('actorinfo',ae.icv_coordinator,'\\\\$;',',','n/a') AS icv_coordinator_user_desc,
CAST(ae.icv_team AS bigint) AS icv_team_id,
lookupValueByIdList('i18n_int_enum_vals',ae.icv_team,'\\\\|',',','n/a') AS icv_team_desc,
ae.icv_team_members AS icv_team_members_user_lanid_names,
lookupValueByUserList('actorinfo',ae.icv_team_members,'\\\\$;',',','n/a') AS icv_team_members_user_desc,
ae.it_reviewer AS head_of_it_user_lanid_name,
lookupValueByUserList('actorinfo',ae.it_reviewer,'\\\\$;',',','n/a') AS head_of_it_user_desc,
CAST(ae.library_record AS bigint) AS library_record_id,
lookupValueByIdList('i18n_int_enum_vals',ae.library_record,'\\\\|',',','n/a') AS library_record_desc,
ae.preparer AS preparer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.preparer,'\\\\$;',',','n/a') AS preparer_user_desc,
ae.professional_practice_ AS professional_practice_team_user_lanid_names,
lookupValueByUserList('actorinfo',ae.professional_practice_,'\\\\$;',',','n/a')  AS professional_practice_team_user_desc,
CAST(ae.sme_review_required AS bigint) AS it_team_lead_review_required_id,
lookupValueByIdList('i18n_int_enum_vals',ae.sme_review_required,'\\\\|',',','n/a') AS it_team_lead_review_required_desc,
ae.sme_reviewer AS it_team_leader_user_lanid_name,
lookupValueByUserList('actorinfo',ae.sme_reviewer,'\\\\$;',',','n/a') AS it_team_leader_user_desc,
ae.workstep_approver AS workstep_approver_user_lanid_names,
lookupValueByUserList('actorinfo',ae.workstep_approver,'\\\\$;',',','n/a') AS workstep_approver_user_desc,
ae.workstep_coordinator AS workstep_coordinator_user_lanid_names,
lookupValueByUserList('actorinfo',ae.workstep_coordinator,'\\\\$;',',','n/a') AS workstep_coordinator_user_desc,
ae.workstep_team AS workstep_team_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.workstep_team,'\\\\|',',','n/a') AS workstep_team_desc,
ae.workstep_team_members AS workstep_team_members_user_lanid_names,
lookupValueByUserList('actorinfo',ae.workstep_team_members,'\\\\$;',',','n/a') AS workstep_team_members_user_desc,
CAST(ae.country AS bigint) AS country_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.country,'\\\\|',',','n/a') AS country_name,
ae.location_name AS location_name_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.location_name,'\\\\|',',','n/a') AS location_name,
ae.region00 AS region_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.region00,'\\\\|',',','n/a') AS region_name,
CAST(ae.type00 AS bigint) AS type_id,
lookupValueByIdList('i18n_int_enum_vals',ae.type00,'\\\\|',',','n/a') AS type_desc,
CAST(ae.subteam AS bigint) AS subteam_id,
lookupValueByIdList('i18n_int_enum_vals',ae.subteam,'\\\\|',',','n/a') AS subteam_desc,
ae.auditeffecthours AS audit_effective_hours_no,
ae.auditoradmin AS auditor_administrator_user_lanid_names,
lookupValueByUserList('actorinfo',ae.auditoradmin,'\\\\$;',',','n/a') AS auditor_administrator_user_desc,
ae.auditrelhours AS audit_related_hours_no,
ae.auditrelutilrate AS audit_related_percent_no,
CAST(ae.budgetedhc AS bigint) AS budget_hc_id,
lookupValueByIdList('i18n_int_enum_vals',ae.budgetedhc,'\\\\|',',','n/a') AS budget_hc_desc,
CAST(ae.chartersandpolicies AS bigint) AS charter_sand_policies_id,
lookupValueByIdList('i18n_int_enum_vals',ae.chartersandpolicies,'\\\\|',',','n/a') AS charter_sand_policies_flag,
CAST(ae.codeofethics AS bigint) AS code_of_ethics_id,
lookupValueByIdList('i18n_int_enum_vals',ae.codeofethics,'\\\\|',',','n/a') AS code_of_ethics_flag,
ae.comments AS comments_desc,
ae.conflictsofinterest AS conflicts_of_interest_desc,
ae.education AS education_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.education,'\\\\|',',','n/a') AS education_desc,
CAST(ae.employiadyears AS bigint) AS employee_iad_years_id,
lookupValueByIdList('i18n_int_enum_vals',ae.employiadyears,'\\\\|',',','n/a') AS employee_iad_years_flag,
ae.employiadyearsinfo AS employee_iad_years_info_desc,
CAST(ae.employonprleave AS bigint) AS employee_on_prolonged_leave_id,
lookupValueByIdList('i18n_int_enum_vals',ae.employonprleave,'\\\\|',',','n/a') AS employee_on_prolonged_leave_flag,
TO_DATE(ae.enddate) AS end_date,
ae.fte AS fte_no,
ae.hoursperweek AS hours_per_week_no,
CAST(ae.ioattestation AS bigint) AS io_attestation_completed_id,
lookupValueByIdList('i18n_int_enum_vals',ae.ioattestation,'\\\\|',',','n/a') AS io_attestation_completed_flag,
TO_DATE(ae.ioattestcompdate) AS io_attestation_completion_date,
CAST(ae.ioattestcompleted AS bigint) AS io_attestation_completed_12mon_id,
lookupValueByIdList('i18n_int_enum_vals',ae.ioattestcompleted,'\\\\|',',','n/a') AS io_attestation_completed_12mon_desc,
ae.ioattestrevcomment AS io_attestation_review_comment_desc,
CAST(ae.leavedays AS int) AS leave_days_no,
TO_DATE(ae.leaveenddate) AS leave_end_date,
TO_DATE(ae.leavestartdate) AS leave_start_date,
ae.macqcurriadexpyrs AS macq_current_iad_exp_yrs_no,
CAST(ae.macqextauditor AS bigint) AS macq_ext_auditor_id,
lookupValueByIdList('i18n_int_enum_vals',ae.macqextauditor,'\\\\|',',','n/a') AS macq_ext_auditor_flag,
ae.macqextauditorinfo AS macq_ext_auditor_info_desc,
CAST(ae.mgperrel AS bigint) AS macq_personal_relation_id,
lookupValueByIdList('i18n_int_enum_vals',ae.mgperrel,'\\\\|',',','n/a') AS macq_personal_relation_flag,
ae.mgperrelinfo AS macq_personal_relation_info_desc,
ae.mgworkinfo AS macq_work_info_desc,
CAST(ae.mgworkinfoyear AS bigint) AS macq_work_info_yr_id,
lookupValueByIdList('i18n_int_enum_vals',ae.mgworkinfoyear,'\\\\|',',','n/a') AS macq_work_info_yr_flag,
ae.nonauditutilrate AS non_audit_percent_no,
ae.othereducdetails AS other_education_details_desc,
ae.otherqualifdetails AS other_qualification_details_desc,
ae.priormacqdetails AS prior_macq_details_desc,
ae.relpremploydetails AS relevant_prior_emp_details_desc,
ae.roleid AS role_id_desc,
CAST(ae.skillsandeducation AS bigint) AS skills_education_reviewed_id,
lookupValueByIdList('i18n_int_enum_vals',ae.skillsandeducation,'\\\\|',',','n/a') AS skills_education_reviewed_flag,
TO_DATE(ae.skillseduccompdate) AS skills_education_review_completed_date,
CAST(ae.skillseduccompleted AS bigint) AS skills_education_review_completed_id,
lookupValueByIdList('i18n_int_enum_vals',ae.skillseduccompleted,'\\\\|',',','n/a') AS skills_education_review_completed_desc,
ae.staffavailhours AS staff_available_hrs_no,
CAST(ae.teamtype AS bigint) AS team_type_id,
lookupValueByIdList('i18n_int_enum_vals',ae.teamtype,'\\\\|',',','n/a') AS team_type_desc,
ae.totalmacqexpyrs AS total_macq_experience_yrs_no,
ae.totalrelexpyrs AS total_rel_experience_yrs_no,
ae.utilisationrate AS utilisation_percent_no,
ae.externalauditexpyrs AS non_macq_ext_audit_exp_yrs_no,
ae.internalauditexpyrs AS non_macq_int_audit_exp_yrs_no,
ae.nonrelevantexpyrs AS total_non_macq_rel_exp_yrs_no,
ae.otherrelexpyrs AS total_non_macq_other_rel_exp_yrs_no,
ae.outsideiadexpyrs AS macq_outside_iad_exp_yrs_no,
ae.prioriadexpyrs AS macq_prior_iad_exp_yrs_no,
'Openpages' AS source
FROM auditor ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.auditor_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_auditor"
    },
	
	{
      "stepDescription": "create sat_timesheet",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_timesheet/",
          "viewName": "rt_timesheet",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH timesheet AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.timesheet_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_timesheet a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_timesheet')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ae.timesheet_bk AS timesheet_bk,
ae.timesheet_id AS timesheet_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as timesheet_name,
ae.description as timesheet_desc,
ae.full_path as timesheet_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Timesheets/','/') AS resource_timesheet_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Timesheets/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Timesheets/','/'), ae.name00)-2) As timesheet_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Timesheets/','/'),'/')[2] AS timesheet_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Timesheets/','/'),'/')[3] AS timesheet_folder_division_name,
ae.creation_date as creation_ts,
TO_DATE(ae.creation_date) as creation_date,
ae.modification_date as modification_ts,
TO_DATE(ae.modification_date) as modification_date,
ae.detail_page_url as timesheet_op_url_text,
ae.activity as activity_id,
lookupValueByIdList('i18n_int_enum_vals',ae.activity,'\\\\|',',','n/a') as activity_desc,
ae.friday as friday_no,
ae.ignore_trigger as ignore_trigger_id,
lookupValueByIdList('i18n_int_enum_vals',ae.ignore_trigger,'\\\\|',',','n/a') as ignore_trigger_desc,
ae.monday as monday_no,
ae.rdytocls as ready_to_close_id,
lookupValueByIdList('i18n_int_enum_vals',ae.rdytocls,'\\\\|',',','n/a') as ready_to_close_desc,
ae.saturday as saturday_no,
ae.status as status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.status,'\\\\|',',','n/a') as status_desc,
ae.sunday as sunday_no,
ae.thursday as thursday_no,
ae.total_hours as total_hours_no,
ae.tuesday as tuesday_no,
ae.twoweeksexemption as two_weeks_exemption_id,
lookupValueByIdList('i18n_int_enum_vals',ae.twoweeksexemption,'\\\\|',',','n/a') as two_weeks_exemption_desc,
ae.wednesday as wednesday_no,
TO_DATE(ae.week_start) as week_start_date,
'Openpages' AS source
FROM timesheet ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.timesheet_id=re.resourceid
 WHERE re.isdeleted = 0",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_timesheet"
    }
	,
	{
      "stepDescription": "create sat_finding",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_finding/",
          "viewName": "rt_finding",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_system_workflow_fields/",
          "viewName": "rt_system_workflow_fields",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actors/",
          "viewName": "actors",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH finding AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.finding_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_finding a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_finding')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
actors AS
(
SELECT * FROM actors
),
ai_actors AS
(
SELECT ai.name, ai.description,actors.namespaceid ,actors.type
FROM ai
LEFT OUTER JOIN
actors
ON ai.actorid=actors.actorid
),
system_workflow_fields AS 
(
SELECT CASE WHEN ai_assignee.type=2 or ai_assignee.namespaceid=2 THEN i.wf_assignee_name ELSE ai_assignee.description END AS assignee_names_user_desc_raw,CASE WHEN ai_subscriber.type=2 or ai_subscriber.namespaceid=2 THEN i.wf_copied_user_name ELSE ai_subscriber.description END AS subscriber_names_user_desc_raw,wf_resource_id,wf_assignee_name,wf_copied_user_name
FROM
(
SELECT *,dense_rank() OVER (PARTITION BY wf_resource_id ORDER BY wf_process_instance_id desc,wf_activity_instance_id desc) AS row_nbr FROM rt_system_workflow_fields WHERE batch_id IN (SELECT max(distinct batch_id) FROM rt_system_workflow_fields) and  wf_process_state=1
)i 
left outer join ai_actors ai_assignee
on i.wf_assignee_name=ai_assignee.name
left outer join ai_actors ai_subscriber
on i.wf_copied_user_name=ai_subscriber.name
WHERE row_nbr=1
),
sys_wf AS (
SELECT
wf_resource_id, concat_ws(',', collect_list(distinct wf_assignee_name)) as assignee_names,concat_ws(',', collect_list(distinct wf_copied_user_name)) as subscriber_names,concat_ws(',', collect_list(distinct assignee_names_user_desc_raw)) as assignee_names_user_desc,concat_ws(',', collect_list(distinct subscriber_names_user_desc_raw)) as subscriber_names_user_desc
from system_workflow_fields
group by  wf_resource_id
)
SELECT
ae.finding_bk AS finding_bk,
ae.finding_id AS finding_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as finding_name,
ae.description as finding_desc,
ae.full_path as finding_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Findings/','/') AS resource_finding_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Findings/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Findings/','/'), ae.name00)-2) As finding_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Findings/','/'),'/')[2] AS finding_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Findings/','/'),'/')[3] AS finding_folder_division_name,
ae.creation_date as creation_ts,
TO_DATE(ae.creation_date) as creation_date,
ae.modification_date as modification_ts,
TO_DATE(ae.modification_date) as modification_date,
ae.detail_page_url as finding_op_url_text,
TO_DATE(ae.approve_and_close_date) as approve_and_close_date,
ae.approver_and_closer as approver_closer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.approver_and_closer,'\\\\$;',',','n/a') as approver_closer_user_desc,
ae.aud_director as audit_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.aud_director,'\\\\$;',',','n/a') as audit_director_user_desc,
ae.audit_review_director as audit_review_director_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_review_director,'\\\\$;',',','n/a') as audit_review_director_user_desc,
ae.audit_team_leader as audit_team_leader_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_team_leader,'\\\\$;',',','n/a') as audit_team_leader_user_desc,
ae.audit_team_members as audit_team_members_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_team_members,'\\\\$;',',','n/a') as audit_team_members_user_desc,
ae.audit_workstep_approve as audit_workstep_approver_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_workstep_approve,'\\\\$;',',','n/a') as audit_workstep_approver_user_desc,
ae.audit_workstep_coordin as audit_workstep_coordinator_user_lanid_name,
lookupValueByUserList('actorinfo',ae.audit_workstep_coordin,'\\\\$;',',','n/a') as audit_workstep_coordinator_user_desc,
ae.audit_workstep_team as audit_workstep_team_id,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_workstep_team,'\\\\|',',','n/a') as audit_workstep_team_desc,
ae.cae as cae_user_lanid_name,
lookupValueByUserList('actorinfo',ae.cae,'\\\\$;',',','n/a') as cae_user_desc,
ae.commentsnotesupdate as comments_desc,
ae.finding_ad_request_dat as finding_ad_request_ts,
TO_DATE(ae.finding_ad_request_dat) as finding_ad_request_date,
ae.finding_approved_by as finding_approved_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.finding_approved_by,'\\\\$;',',','n/a') as finding_approved_by_user_desc,
ae.finding_conclusion as finding_conclusion_id,
lookupValueByIdList('i18n_int_enum_vals',ae.finding_conclusion,'\\\\|',',','n/a') as finding_conclusion_desc,
ae.finding_tl_request_dat as finding_tl_request_ts,
TO_DATE(ae.finding_tl_request_dat) as finding_tl_request_date,
ae.finding_tl_sign_off_by as finding_tl_sign_off_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.finding_tl_sign_off_by,'\\\\$;',',','n/a') as finding_tl_sign_off_by_user_desc,
ae.impact as impact_id,
lookupValueByIdList('i18n_int_enum_vals',ae.impact,'\\\\|',',','n/a') as impact_desc,
ae.it_reviewer as it_reviewer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.it_reviewer,'\\\\$;',',','n/a') as it_reviewer_user_desc,
ae.mgmtactcompletion as finding_tl_sign_off_ts,
TO_DATE(ae.mgmtactcompletion) as finding_tl_sign_off_date,
ae.mgmtrespcomment as mgmt_comments_desc,
TO_DATE(ae.preparation_complete00) as preparation_complete_date,
ae.preparation_complete_d as finding_approved_date_ts,
TO_DATE(ae.preparation_complete_d) as finding_approved_date,
ae.preparer01 as preparer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.preparer01,'\\\\$;',',','n/a') as preparer_user_desc,
ae.professional_practice_ as professional_practice_desc,
ae.sme_reviewer as sme_reviewer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.sme_reviewer,'\\\\$;',',','n/a') as sme_reviewer_user_desc,
ae.status as status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.status,'\\\\|',',','n/a') as status_desc,
ae.workstep_team_members as workstep_team_members_user_lanid_name,
lookupValueByUserList('actorinfo',ae.workstep_team_members,'\\\\$;',',','n/a') as workstep_team_members_user_desc,
ae.dropped_rationale as dropped_rationale_desc,
sys_wf.assignee_names as system_workflow_assignees,
sys_wf.subscriber_names as system_workflow_subscribers,
ae.associated_issue_id as associated_issue_id,
sys_wf.assignee_names_user_desc as system_workflow_assignee_names_user_desc,
sys_wf.subscriber_names_user_desc as system_workflow_subscriber_names_user_desc,
'Openpages' AS source
FROM finding ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.finding_id=re.resourceid
LEFT JOIN sys_wf 
ON ae.finding_id=sys_wf.wf_resource_id",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_finding"
    },
	{
      "stepDescription": "create auditphase",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_auditphase/",
          "viewName": "rt_auditphase",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH auditphase AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.auditphase_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_auditphase a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_auditphase')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ae.auditphase_bk AS auditphase_bk,
ae.auditphase_id AS auditphase_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as auditphase_name ,
ae.description as auditphase_desc ,
ae.full_path as auditphase_full_path_desc ,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audit Sections/','/') AS resource_auditphase_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audit Sections/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audit Sections/','/'), ae.name00)-2) As auditphase_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audit Sections/','/'),'/')[2] AS auditphase_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Audit Sections/','/'),'/')[3] AS auditphase_folder_division_name,
ae.creation_date as creation_ts ,
TO_DATE(ae.creation_date) as creation_date ,
ae.modification_date as modification_ts ,
TO_DATE(ae.modification_date) as modification_date ,
ae.detail_page_url as auditphase_op_url_text ,
TO_DATE(ae.actual_end_date) as actual_end_date ,
TO_DATE(ae.actual_start_date) as actual_start_date ,
ae.aud_director as aud_director_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.aud_director,'\\\\$;',',','n/a') as aud_director_user_desc ,
ae.audit_conclusion as audit_conclusion_desc ,
ae.audit_rating as audit_rating_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_rating,'\\\\|',',','n/a') as audit_rating_desc ,
ae.audit_rating_filter as audit_rating_filter_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_rating_filter,'\\\\|',',','n/a') as audit_rating_filter_desc ,
ae.audit_review_director as audit_review_director_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_review_director,'\\\\$;',',','n/a') as audit_review_director_user_desc ,
ae.audit_team_leader as audit_team_leader_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_team_leader,'\\\\$;',',','n/a') as audit_team_leader_user_desc ,
ae.audit_team_members as audit_team_members_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_team_members,'\\\\$;',',','n/a') as audit_team_members_user_desc ,
ae.audit_workstep_approve as audit_workstep_approve_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_workstep_approve,'\\\\$;',',','n/a') as audit_workstep_approve_user_desc ,
ae.audit_workstep_coordin as audit_workstep_coordinator_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_workstep_coordin,'\\\\$;',',','n/a') as audit_workstep_coordinator_user_desc ,
ae.audit_workstep_team as audit_workstep_team_id ,
lookupValueByUserList('actorinfo',ae.audit_workstep_team,'\\\\$;',',','n/a') as audit_workstep_team_desc ,
ae.business_contact as business_contact_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.business_contact,'\\\\$;',',','n/a') as business_contact_user_desc ,
ae.cae as cae_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.cae,'\\\\$;',',','n/a') as cae_user_desc ,
ae.closure_rejected_flag as closure_rejected_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.closure_rejected_flag,'\\\\|',',','n/a') as closure_rejected_desc ,
ae.commentsnotesupdate as comments_desc ,
ae.complex_technology_aud as complex_technology_audit_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.complex_technology_aud,'\\\\|',',','n/a') as complex_technology_audit_flag ,
ae.conclusion as conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.conclusion,'\\\\|',',','n/a') as conclusion_desc ,
ae.control as control_desc ,
ae.control_description as control_long_desc ,
ae.control_objective_summ as control_objective_summary_desc ,
ae.da_sme_review as da_sme_review_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.da_sme_review,'\\\\|',',','n/a') as da_sme_review_flag ,
TO_DATE(ae.da_sme_review_date) as da_sme_review_date ,
ae.da_sme_review_sign_off as da_sme_review_sign_off_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.da_sme_review_sign_off,'\\\\$;',',','n/a') as da_sme_review_sign_off_user_desc ,
ae.draft_report_issued as draft_report_issued_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.draft_report_issued,'\\\\|',',','n/a') as draft_report_issued_flag ,
ae.draft_report_issued_by as draft_report_issued_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.draft_report_issued_by,'\\\\$;',',','n/a') as draft_report_issued_by_user_desc ,
TO_DATE(ae.draft_report_issued_da) as draft_report_issued_date ,
TO_DATE(ae.expected_end_date) as expected_end_date ,
TO_DATE(ae.expected_start_date) as expected_start_date ,
ae.icv_approver as icv_approver_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.icv_approver,'\\\\$;',',','n/a') as icv_approver_user_desc ,
ae.icv_coordinator as icv_coordinator_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.icv_coordinator,'\\\\$;',',','n/a') as icv_coordinator_user_desc ,
ae.icv_team as icv_team_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.icv_team,'\\\\|',',','n/a') as icv_team_desc ,
ae.icv_team_members as icv_team_members_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.icv_team_members,'\\\\$;',',','n/a') as icv_team_members_user_desc ,
ae.it_reviewer00 as it_reviewer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.it_reviewer00,'\\\\$;',',','n/a') as it_reviewer_user_desc,
ae.notes as notes_desc,
ae.preparation_status as preparation_status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.preparation_status,'\\\\|',',','n/a') as preparation_status_desc,
ae.preparer00 as preparer_user_lanid_name,
lookupValueByUserList('actorinfo',ae.preparer00,'\\\\$;',',','n/a') as preparer_user_desc,
ae.professional_practice_ as professional_practice_desc,
ae.rd_scope_attested as rd_scope_attested_id,
lookupValueByIdList('i18n_int_enum_vals',ae.rd_scope_attested,'\\\\|',',','n/a') as rd_scope_attested_flag,
ae.rd_scope_attested_by as rd_scope_attested_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.rd_scope_attested_by,'\\\\$;',',','n/a')  as rd_scope_attested_by_user_desc,
TO_DATE(ae.rd_scope_attested_date) as rd_scope_attested_date,
ae.reference as reference_desc,
ae.risk_description as auditphase_risk_desc,
ae.risktaxl1 as risk_event_category_l1_id,
lookupValueByIdList('i18n_int_enum_vals',ae.risktaxl1,'\\\\|',',','n/a') as risk_event_category_l1_desc,
risktaxl2 as risk_event_category_l2_id,
lookupValueByIdList('i18n_int_enum_vals',ae.risktaxl2,'\\\\|',',','n/a') as risk_event_category_l2_desc,
ae.scope_comments as scope_comments_desc ,
ae.scope_exclusion_commen as scope_exclusion_comments_desc ,
ae.secrisktaxl1 as secondary_risk_event_category_l1_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.secrisktaxl1,'\\\\|',',','n/a') as secondary_risk_event_category_l1_desc ,
ae.secrisktaxl2 as secondary_risk_event_category_l2_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.secrisktaxl2,'\\\\|',',','n/a') as secondary_risk_event_category_l2_desc ,
ae.sme_review_required as sme_review_required_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.sme_review_required,'\\\\|',',','n/a') as sme_review_required_flag ,
ae.sme_reviewer as sme_reviewer_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.sme_reviewer,'\\\\$;',',','n/a') as sme_reviewer_user_lanid_desc ,
ae.step as step_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.step,'\\\\|',',','n/a') as step_desc ,
TO_DATE(ae.team_briefing_date) as team_briefing_date ,
ae.type00 as type_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.type00,'\\\\|',',','n/a') as type_desc ,
TO_DATE(ae.workstep_ad_request_da) as workstep_ad_request_date ,
ae.workstep_ad_sign_off_b as workstep_ad_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_ad_sign_off_b,'\\\\$;',',','n/a') as workstep_ad_sign_off_by_user_lanid_desc ,
TO_DATE(ae.workstep_ad_sign_off_d) as workstep_ad_sign_off_date ,
ae.workstep_cae_request_d as workstep_cae_request_ts ,
TO_DATE(ae.workstep_cae_request_d) as workstep_cae_request_date ,
ae.workstep_cae_sign_of00 as workstep_cae_sign_off_ts ,
TO_DATE(ae.workstep_cae_sign_of00) as workstep_cae_sign_off_date ,
ae.workstep_cae_sign_off_ as workstep_cae_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_cae_sign_off_,'\\\\$;',',','n/a') as workstep_cae_sign_off_by_user_desc ,
ae.workstep_completed_by as workstep_completed_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_completed_by,'\\\\$;',',','n/a') as workstep_completed_by_user_desc ,
TO_DATE(ae.workstep_execute_end_d) as workstep_execute_end_date ,
ae.workstep_executed_by as workstep_execute_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_executed_by,'\\\\$;',',','n/a') as workstep_execute_by_user_desc ,
ae.workstep_it_reviewer00 as workstep_it_reviewer_sign_off_ts ,
TO_DATE(ae.workstep_it_reviewer00) as workstep_it_reviewer_sign_off_date ,
TO_DATE(ae.workstep_it_reviewer_r) as workstep_it_reviewer_request_date ,
ae.workstep_it_reviewer_s as workstep_it_reviewer_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_it_reviewer_s,'\\\\$;',',','n/a') as workstep_it_reviewer_sign_off_by_user_desc ,
TO_DATE(ae.workstep_it_tl_request) as workstep_it_tl_request_date ,
TO_DATE(ae.workstep_it_tl_sign_00) as workstep_it_tl_sign_off_date ,
ae.workstep_it_tl_sign_of as workstep_it_tl_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_it_tl_sign_of,'\\\\$;',',','n/a') as workstep_it_tl_sign_off_by_user_desc ,
TO_DATE(ae.workstep_rd_request_da) as workstep_rd_request_date ,
ae.workstep_rd_sign_off_b as workstep_rd_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_rd_sign_off_b,'\\\\$;',',','n/a') as workstep_rd_sign_off_by_user_desc ,
TO_DATE(ae.workstep_rd_sign_off_d) as workstep_rd_sign_off_date ,
ae.workstep_team_members as workstep_team_members_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_team_members,'\\\\$;',',','n/a') as workstep_team_members_user_desc ,
TO_DATE(ae.workstep_tl_request_da) as workstep_tl_request_date ,
ae.workstep_tl_sign_off_b as workstep_tl_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_tl_sign_off_b,'\\\\$;',',','n/a') as workstep_tl_sign_off_by_user_desc ,
TO_DATE(ae.workstep_tl_sign_off_d) as workstep_tl_sign_off_date,
CAST(ae.library_record as BIGINT) AS library_record_id,
lookupValueByIdList('i18n_int_enum_vals',ae.library_record,'\\\\|',',','n/a') as library_record_desc,
ae.COSTESTIMATE as cost_and_cost_estimate_desc,
ae.CHANGEINITDESC as change_initiative_desc,
ae.LINKEDREMPROGRAM as linked_remediation_programs_desc,
TO_DATE(ae.CHANGEINITENDDATE) as change_initiative_end_date,
ae.DETAILSL1L2WTD as details_of_line1_and_line2_work_to_date_desc,
ae.CHANGEINITOWNER as change_initiative_owner_user_lanid_name,
lookupValueByUserList('actorinfo',ae.CHANGEINITOWNER,'\\\\$;',',','n/a') as change_initiative_owner_user_desc,
ae.CHANGEINITNAME as change_initiative_name_desc,
TO_DATE(ae.CHANGEINITSTARTDATE) as change_initiative_start_date,
ae.RAGSTATUS as rag_status_id,
lookupValueByIdList('i18n_int_enum_vals',ae.RAGSTATUS,'\\\\|',',','n/a') as rag_status_desc,
ae.BUSIMPACT as business_impact_desc,
ae.CATEGORY00 as category_desc,
ae.GROUPSINV as groups_involved_ids,
lookupValueByIdList('i18n_int_enum_vals',ae.GROUPSINV,'\\\\|',',','n/a') as groups_involved_desc,
'Openpages' AS source
FROM auditphase ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.auditphase_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_auditphase"
    },
		{
      "stepDescription": "create workpaper",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_workpaper/",
          "viewName": "rt_workpaper",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_system_workflow_fields/",
          "viewName": "rt_system_workflow_fields",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actors/",
          "viewName": "actors",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH workpaper AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.workpaper_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_workpaper a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_workpaper')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
),
actors AS
(
SELECT * FROM actors
),
ai_actors AS
(
SELECT ai.name, ai.description,actors.namespaceid ,actors.type
FROM ai
LEFT OUTER JOIN
actors
ON ai.actorid=actors.actorid
),
system_workflow_fields AS 
(
SELECT CASE WHEN ai_assignee.type=2 or ai_assignee.namespaceid=2 THEN i.wf_assignee_name ELSE ai_assignee.description END AS assignee_names_user_desc_raw,CASE WHEN ai_subscriber.type=2 or ai_subscriber.namespaceid=2 THEN i.wf_copied_user_name ELSE ai_subscriber.description END AS subscriber_names_user_desc_raw,wf_resource_id,wf_assignee_name,wf_copied_user_name
FROM
(
SELECT *,dense_rank() OVER (PARTITION BY wf_resource_id ORDER BY wf_process_instance_id desc,wf_activity_instance_id desc) AS row_nbr FROM rt_system_workflow_fields WHERE batch_id IN (SELECT max(distinct batch_id) FROM rt_system_workflow_fields) and  wf_process_state=1
)i 
left outer join ai_actors ai_assignee
on i.wf_assignee_name=ai_assignee.name
left outer join ai_actors ai_subscriber
on i.wf_copied_user_name=ai_subscriber.name
WHERE row_nbr=1
),
sys_wf AS (
SELECT
wf_resource_id, concat_ws(',', collect_list(distinct wf_assignee_name)) as assignee_names,concat_ws(',', collect_list(distinct wf_copied_user_name)) as subscriber_names,concat_ws(',', collect_list(distinct assignee_names_user_desc_raw)) as assignee_names_user_desc,concat_ws(',', collect_list(distinct subscriber_names_user_desc_raw)) as subscriber_names_user_desc
from system_workflow_fields
group by  wf_resource_id
)
SELECT
ae.workpaper_bk AS workpaper_bk,
ae.workpaper_id AS workpaper_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as workpaper_name ,
ae.description as workpaper_desc ,
ae.full_path as workpaper_full_path_desc ,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Workpapers/','/') AS resource_workpaper_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Workpapers/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Workpapers/','/'), ae.name00)-2) As workpaper_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Workpapers/','/'),'/')[2] AS workpaper_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Workpapers/','/'),'/')[3] AS workpaper_folder_division_name,
ae.creation_date as creation_ts ,
TO_DATE(ae.creation_date)  as creation_date ,
ae.modification_date as modification_ts ,
TO_DATE(ae.modification_date)  as modification_date ,
ae.detail_page_url as workpaper_op_url_text ,
ae.aud_director as audit_director_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.aud_director,'\\\\$;',',','n/a') as audit_director_user_desc ,
ae.audit_description as workpaper_audit_desc ,
ae.audit_review_director as audit_review_director_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_review_director,'\\\\$;',',','n/a') as audit_review_director_user_desc ,
ae.audit_team_leader as audit_team_leader_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_team_leader,'\\\\$;',',','n/a') as audit_team_leader_user_desc ,
ae.audit_team_members as audit_team_members_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_team_members,'\\\\$;',',','n/a') as audit_team_members_user_desc ,
ae.audit_workstep_approve as audit_workstep_approver_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_workstep_approve,'\\\\$;',',','n/a') as audit_workstep_approver_user_desc ,
ae.audit_workstep_coordin as audit_workstep_coordinator_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.audit_workstep_coordin,'\\\\$;',',','n/a') as audit_workstep_coordinator_user_desc ,
ae.audit_workstep_team as audit_workstep_team_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.audit_workstep_team,'\\\\|',',','n/a') as audit_workstep_team_desc ,
ae.cae as cae_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.cae,'\\\\$;',',','n/a') as cae_user_desc ,
ae.commentsnotesupdate as comments_desc ,
ae.conclusion as conclusion_desc ,
ae.da_sme_review as da_or_sme_review_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.da_sme_review,'\\\\|',',','n/a') as da_or_sme_review_flag ,
ae.da_sme_review_date as da_sme_review_ts ,
TO_DATE(ae.da_sme_review_date)  as da_sme_review_date ,
ae.da_sme_review_sign_off as da_sme_review_sign_off_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.da_sme_review_sign_off,'\\\\$;',',','n/a') as da_sme_review_sign_off_user_desc ,
ae.expanded_sampling_rati as expanded_sampling_rationale_desc ,
ae.fastmap_status as fastmap_status_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.fastmap_status,'\\\\|',',','n/a') as fastmap_status_desc ,
ae.final_testing_strategi as final_testing_strategies_desc ,
ae.frequency as frequency_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.frequency,'\\\\|',',','n/a') as frequency_desc ,
ae.general_purpose as general_purpose_desc ,
ae.high_low_risk_features as high_or_low_risk_features_desc ,
ae.it_reviewer as it_reviewer_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.it_reviewer,'\\\\$;',',','n/a') as it_reviewer_user_desc ,
ae.items_selected as items_selected_desc ,
ae.number_of_exceptions as number_of_exceptions_desc ,
CAST(ae.population AS INT) as population_no ,
ae.preparer00 as prepareer_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.preparer00,'\\\\$;',',','n/a') as prepareer_user_desc ,
ae.professional_practice_ as professional_practice_desc ,
ae.q10_dea_conclusion as q10_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q10_dea_conclusion,'\\\\|',',','n/a') as q10_dea_conclusion_desc ,
ae.q10_dea_question as q10_dea_question_desc ,
ae.q10_dea_results as q10_dea_results_desc ,
ae.q1_dea_conclusion as q1_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q1_dea_conclusion,'\\\\|',',','n/a') as q1_dea_conclusion_desc ,
ae.q1_dea_question as q1_dea_question_desc ,
ae.q1_dea_results as q1_dea_results_desc ,
ae.q2_dea_conclusion as q2_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q2_dea_conclusion,'\\\\|',',','n/a') as q2_dea_conclusion_desc ,
ae.q2_dea_question as q2_dea_question_desc ,
ae.q2_dea_results as q2_dea_results_desc ,
ae.q3_dea_conclusion as q3_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q3_dea_conclusion,'\\\\|',',','n/a') as q3_dea_conclusion_desc ,
ae.q3_dea_question as q3_dea_question_desc ,
ae.q3_dea_results as q3_dea_results_desc ,
ae.q4_dea_conclusion as q4_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q4_dea_conclusion,'\\\\|',',','n/a') as q4_dea_conclusion_desc ,
ae.q4_dea_question as q4_dea_question_desc ,
ae.q4_dea_results as q4_dea_results_desc ,
ae.q5_dea_conclusion as q5_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q5_dea_conclusion,'\\\\|',',','n/a') as q5_dea_conclusion_desc ,
ae.q5_dea_question as q5_dea_question_desc ,
ae.q5_dea_results as q5_dea_results_desc ,
ae.q6_dea_conclusion as q6_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q6_dea_conclusion,'\\\\|',',','n/a') as q6_dea_conclusion_desc ,
ae.q6_dea_question as q6_dea_question_desc ,
ae.q6_dea_results as q6_dea_results_desc ,
ae.q7_dea_conclusion as q7_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q7_dea_conclusion,'\\\\|',',','n/a') as q7_dea_conclusion_desc ,
ae.q7_dea_question as q7_dea_question_desc ,
ae.q7_dea_results as q7_dea_results_desc ,
ae.q8_dea_conclusion as q8_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q8_dea_conclusion,'\\\\|',',','n/a') as q8_dea_conclusion_desc ,
ae.q8_dea_question as q8_dea_question_desc ,
ae.q8_dea_results as q8_dea_results_desc ,
ae.q9_dea_conclusion as q9_dea_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.q9_dea_conclusion,'\\\\|',',','n/a') as q9_dea_conclusion_desc ,
ae.q9_dea_question as q9_dea_question_desc ,
ae.q9_dea_results as q9_dea_results_desc ,
ae.rationaleforamendts as rationale_for_amendments_desc ,
ae.review_status as review_status_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.review_status,'\\\\|',',','n/a') as review_status_desc ,
ae.reviewer as reviewer_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.reviewer,'\\\\$;',',','n/a') as reviewer_user_desc ,
ae.sample00 as sample_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.sample00,'\\\\|',',','n/a') as sample_desc ,
TO_DATE(ae.sample_end_date) as sample_end_date ,
ae.sample_selection_metho as sample_selection_method_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.sample_selection_metho,'\\\\|',',','n/a') as sample_selection_method_desc ,
CAST(ae.sample_size AS INT) as sample_size_no ,
ae.sample_size_determinat as sample_size_determination_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.sample_size_determinat,'\\\\|',',','n/a') as sample_size_determination_desc ,
TO_DATE(ae.sample_start_date) as sample_start_date ,
ae.sampling_rationale as sampling_rationale_desc ,
ae.sme_review_required as sme_review_required_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.sme_review_required,'\\\\|',',','n/a') as sme_review_required_flag ,
ae.sme_reviewer as sme_reviewer_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.sme_reviewer,'\\\\$;',',','n/a') as sme_reviewer_user_desc ,
ae.test_conclusion as test_conclusion_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.test_conclusion,'\\\\|',',','n/a') as test_conclusion_desc ,
ae.test_conclusion_ration as test_conclusion_rationale_desc ,
ae.test_procedure as test_procedure_desc ,
ae.type00 as type_id ,
lookupValueByIdList('i18n_int_enum_vals',ae.type00,'\\\\|',',','n/a') as type_desc ,
ae.validation_of_source_d as validation_of_source_data_desc ,
TO_DATE(ae.workpaper_ad_request_d) as workpaper_ad_request_date ,
TO_DATE(ae.workpaper_ad_sign_of00) as workpaper_ad_sign_off_date ,
ae.workpaper_ad_sign_off_ as workpaper_ad_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workpaper_ad_sign_off_,'\\\\$;',',','n/a') as workpaper_ad_sign_off_by_user_desc ,
ae.workpaper_closed_by as workpaper_closed_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workpaper_closed_by,'\\\\$;',',','n/a') as workpaper_closed_by_user_desc ,
TO_DATE(ae.workpaper_end_date) as workpaper_end_date ,
TO_DATE(ae.workpaper_execute_end_) as workpaper_execute_end_date ,
ae.workpaper_executed_by as workpaper_executed_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workpaper_executed_by,'\\\\$;',',','n/a') as workpaper_executed_by_user_desc ,
ae.workpaper_execution_en as workpaper_execution_ended_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workpaper_execution_en,'\\\\$;',',','n/a') as workpaper_execution_ended_by_user_desc ,
TO_DATE(ae.workpaper_start_date) as workpaper_start_date ,
TO_DATE(ae.workpaper_tl_request_d) as workpaper_tl_request_date ,
TO_DATE(ae.workpaper_tl_sign_of00) as workpaper_tl_sign_off_ts ,
TO_DATE(ae.workpaper_tl_sign_of00)  as workpaper_tl_sign_off_date ,
ae.workpaper_tl_sign_off_ as workpaper_tl_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workpaper_tl_sign_off_,'\\\\$;',',','n/a') as workpaper_tl_sign_off_by_user_desc ,
TO_DATE(ae.workstep_it_tl_request) as workstep_it_tl_request_date ,
TO_DATE(ae.workstep_it_tl_sign_00) as workstep_it_tl_sign_off_date ,
ae.workstep_it_tl_sign_of as workstep_it_tl_sign_off_by_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_it_tl_sign_of,'\\\\$;',',','n/a') as workstep_it_tl_sign_off_by_user_desc ,
ae.workstep_team_members as workstep_team_members_user_lanid_name ,
lookupValueByUserList('actorinfo',ae.workstep_team_members,'\\\\$;',',','n/a') as workstep_team_members_user_desc ,
cast(ae.library_record as bigint) as library_record_id,
lookupValueByIdList('i18n_int_enum_vals',ae.library_record,'\\\\|',',','n/a') as library_record_desc,
sys_wf.assignee_names as system_workflow_assignees,
sys_wf.subscriber_names as system_workflow_subscribers,
sys_wf.assignee_names_user_desc as system_workflow_assignee_names_user_desc,
sys_wf.subscriber_names_user_desc as system_workflow_subscriber_names_user_desc,
'Openpages' AS source
FROM workpaper ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.workpaper_id=re.resourceid
LEFT JOIN sys_wf 
ON ae.workpaper_id=sys_wf.wf_resource_id
",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_workpaper"
    },
	
	{
      "stepDescription": "create link",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_link/",
          "viewName": "rt_link",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH link AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.link_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_link a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_link')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ae.link_bk AS link_bk,
ae.link_id AS link_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as link_name,
ae.description as link_desc,
ae.full_path as link_full_path_desc,
REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/') AS resource_link_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'), ae.name00)-2) As link_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'),'/')[2] AS link_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'),'/')[3] AS link_folder_division_name,
ae.creation_date as creation_ts,
TO_DATE(ae.creation_date) as creation_date,
ae.modification_date as modification_ts,
TO_DATE(ae.modification_date) as modification_date,
ae.detail_page_url as link_op_url_text,
ae.linkdescription as link_long_desc,
ae.url00 as link_url_text,
TO_DATE(ae.DISPOSALDATE) AS disposal_date,
ae.DISPOSALFLAG as  disposal_flag_id,
lookupValueByIdList('i18n_int_enum_vals',ae.DISPOSALFLAG,'\\\\|',',','n/a') as disposal_flag_desc,
ae.DISPOSALREASON AS disposal_reason_desc,
ae.DISPOSEDBY as  disposed_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.DISPOSEDBY,'\\\\$;',',','n/a') as  disposed_by_user_desc,
'Openpages' AS source
FROM link ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.link_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_link"
    },
	
	{
      "stepDescription": "create attachment",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_file/",
          "viewName": "rt_file",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH attachment AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.file_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_file a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_file')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ae.file_bk AS attachment_bk,
ae.file_id AS attachment_id,
ae.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ae.parent_folder AS parent_folder_id,
ae.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ae.name00 as attachment_name,
ae.description as attachment_desc,
ae.full_path as attachment_full_path_desc,
REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/') AS resource_attachment_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'), ae.name00)-2) As attachment_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'),'/')[2] AS attachment_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox_documents/Files and Forms/','/'),'/')[3] AS attachment_folder_division_name,
ae.creation_date as creation_ts,
TO_DATE(ae.creation_date) as creation_date,
ae.modification_date as modification_ts,
TO_DATE(ae.modification_date) as modification_date,
ae.detail_page_url as attachment_op_url_text,
ae.abstract as attachment_abstract_desc,
ae.document_type as attachment_document_type_id,
lookupValueByIdList('i18n_int_enum_vals',ae.document_type,'\\\\|',',','n/a') as attachment_document_type_desc,
ae.keywords as attachment_keywords_desc,
TO_DATE(ae.DISPOSALDATE) AS disposal_date,
ae.DISPOSALFLAG as  disposal_flag_id,
lookupValueByIdList('i18n_int_enum_vals',ae.DISPOSALFLAG,'\\\\|',',','n/a') as disposal_flag_desc,
ae.DISPOSALREASON AS disposal_reason_desc,
ae.DISPOSEDBY as  disposed_by_user_lanid_name,
lookupValueByUserList('actorinfo',ae.DISPOSEDBY,'\\\\$;',',','n/a') as  disposed_by_user_desc,
'Openpages' AS source
FROM attachment ae
LEFT JOIN ai ai_creator
ON ae.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ae.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ae.file_id=re.resourceid
 WHERE re.isdeleted = 0",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_attachment"
    },
	{

      "stepDescription": "create SAT_REGINT",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_regint/",
          "viewName": "rt_regint",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH regulator_interaction AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.regint_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_regint a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_regint')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
ri.regint_bk AS regint_bk,
ri.regint_id AS regint_id,
ri.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ri.parent_folder AS parent_folder_id,
ri.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ri.name00 as  regint_name,
ri.description as  regint_desc,
ri.full_path as  regint_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulator Interactions/','/') AS resource_regint_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulator Interactions/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulator Interactions/','/'), ri.name00)-2) As regint_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulator Interactions/','/'),'/')[2] AS regint_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulator Interactions/','/'),'/')[3] AS regint_folder_division_name,
ri.creation_date as  creation_ts,
TO_DATE(ri.creation_date)  as  creation_date,
ri.modification_date as  modification_ts,
TO_DATE(ri.modification_date) AS modification_date,
ri.detail_page_url as  regint_op_url_text,
ri.add_descrip as  regint_long_desc,
CAST(ri.approx_hours_spent as int) as  approx_hours_spent_no,
ri.concld_comments as  comments_desc,
ri.deliverables as  deliverables_desc,
ri.det_outcome_findings as  details_outcome_findings_desc,
ri.guidance as  guidance_desc,
ri.issues_identified as  issues_identified_id,
lookupValueByIdList('i18n_int_enum_vals',ri.issues_identified,'\\\\|',',','n/a') as  issues_identified_desc,
ri.legal_contact as  legal_contact_user_lanid_name,
lookupValueByUserList('actorinfo',ri.legal_contact,'\\\\$;',',','n/a') as  legal_contact_user_desc,
ri.legal_entity as  legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',ri.legal_entity,'\\\\|',',','n/a')  as  legal_entity_desc,
ri.macquarie_alt_id as  macquarie_alternate_id,
ri.notify_prudtl_reg as  notify_prudential_regulator_id,
lookupValueByIdList('i18n_int_enum_vals',ri.notify_prudtl_reg,'\\\\|',',','n/a') as  notify_prudential_regulator_flag,
ri.owner as  owner_user_lanid_name,
lookupValueByUserList('actorinfo',ri.owner,'\\\\$;',',','n/a') as  owner_user_desc,
ri.penalty_imposed as  penality_imposed_id,
lookupValueByIdList('i18n_int_enum_vals',ri.penalty_imposed,'\\\\|',',','n/a') as  penality_imposed_desc,
ri.proceedings as  proceedings_ids,
lookupValueByIdList('i18n_int_enum_vals',ri.proceedings,'\\\\|',',','n/a') as  proceedings_desc,
ri.reg_key_contact as  regulator_key_contact_desc,
ri.reg_to_notify as  regulators_to_notify_ids,
lookupValueByIdList('i18n_int_enum_vals',ri.reg_to_notify,'\\\\|',',','n/a') as  regulators_to_notify_desc,
ri.response_del_to as  response_delivered_to_desc,
TO_DATE(ri.response_due_dt) as  response_due_date,
ri.response_status as  response_status_id,
ri.ri_approx_hours_spent as  approx_hours_spent_id,
lookupValueByIdList('i18n_int_enum_vals',ri.ri_approx_hours_spent,'\\\\|',',','n/a') as approx_hours_spent_desc,
ri.ri_parent_risk as  parent_risk_id,
lookupValueByIdList('i18n_int_enum_vals',ri.ri_parent_risk,'\\\\|',',','n/a') as  parent_risk_desc,
ri.ri_parent_risk_categor as  parents_risk_category_id,
lookupValueByIdList('i18n_int_enum_vals',ri.ri_parent_risk_categor,'\\\\|',',','n/a') as  parents_risk_category_desc,
ri.ri_rating as  regint_rating_id,
lookupValueByIdList('i18n_int_enum_vals',ri.ri_rating,'\\\\|',',','n/a') as  regint_rating_desc,
ri.risktaxl1 as  risk_event_category_l1_id,
lookupValueByIdList('i18n_int_enum_vals',ri.risktaxl1,'\\\\|',',','n/a') as  risk_event_category_l1_desc,
ri.risktaxl2 as  risk_event_category_l2_id,
lookupValueByIdList('i18n_int_enum_vals',ri.risktaxl2,'\\\\|',',','n/a') as  risk_event_category_l2_desc,
ri.risktaxl3 as  risk_event_category_l3_id,
lookupValueByIdList('i18n_int_enum_vals',ri.risktaxl3,'\\\\|',',','n/a') as  risk_event_category_l3_desc,
TO_DATE(ri.start_date) as  regint_start_date,
ri.status as  status_id,
lookupValueByIdList('i18n_int_enum_vals',ri.status,'\\\\|',',','n/a') as  status_desc,
ri.type00 as  type_id,
lookupValueByIdList('i18n_int_enum_vals',ri.type00,'\\\\|',',','n/a') as  type_desc,
ri.mtg_attendees as meeting_attendees_desc,
TO_DATE(date_final_int) as final_interaction_date,
ri.resolution as resolution_desc,
ri.ri_penalty_type as penalty_type_ids,
lookupValueByIdList('i18n_int_enum_vals',ri.ri_penalty_type,'\\\\|',',','n/a') as penalty_type_desc,
CAST(ri.num_corresp AS int) as number_of_correspondence_no,
DATEDIFF(current_date,TO_DATE(ri.response_due_dt)) AS regint_days_responsedue_to_today_no,
year(ri.creation_date) AS regint_creation_date_year,
quarter(ri.creation_date) AS regint_creation_date_quarter,
month(ri.creation_date) AS regint_creation_date_month,
day(ri.creation_date) AS regint_creation_date_day,
DATEDIFF(TO_DATE(ri.creation_date),TO_DATE(ri.start_date)) AS regint_days_start_to_creation_no,
year(ri.start_date) AS regint_start_date_year,
quarter(ri.start_date) AS regint_start_date_quarter,
month(ri.start_date) AS regint_start_date_month,
day(ri.start_date) AS regint_start_date_day,
ri.apra_crpd_item AS apra_correspondence_item_id,
lookupValueByIdList('i18n_int_enum_vals',ri.apra_crpd_item,'\\\\|',',','n/a') as  apra_correspondence_item_desc,
ri.apra_crpd_conf AS apra_correspondence_confidential_id,
lookupValueByIdList('i18n_int_enum_vals',ri.apra_crpd_conf,'\\\\|',',','n/a') as  apra_correspondence_confidential_desc,
ri.apra_crpd_cat AS apra_correspondence_category_id,
lookupValueByIdList('i18n_int_enum_vals',ri.apra_crpd_cat,'\\\\|',',','n/a') as  apra_correspondence_category_desc,
ri.hr_crpd_sum AS high_rated_correspondence_summary_desc,
ri.formalcommade AS formal_commitments_made_id,
lookupValueByIdList('i18n_int_enum_vals',ri.formalcommade,'\\\\|',',','n/a') as  formal_commitments_made_desc,
'Openpages' AS source
FROM regulator_interaction ri
LEFT JOIN ai ai_creator
ON ri.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ri.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ri.regint_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "SAT_REGINT"
    },
	
	{
      "stepDescription": "create sat_license",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_license/",
          "viewName": "rt_license",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH license AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.license_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_license a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_license')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
li.license_bk as  license_bk,
li.license_id as  license_id,
li.creator as  created_by_user_id,
ai_creator.name as  created_by_user_lanid_name,
ai_creator.description as  created_by_user_desc,
li.parent_folder as  parent_folder_id,
li.checked_in_by as  last_modified_by_user_id,
ai_checked_in_by.name as  last_modified_by_user_lanid_name,
ai_checked_in_by.description as  last_modified_by_user_desc,
li.name00 as  license_name,
li.description as  license_desc,
li.full_path as  license_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Licenses/','/') AS resource_license_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Licenses/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Licenses/','/'), li.name00)-2) As license_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Licenses/','/'),'/')[2] AS license_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Licenses/','/'),'/')[3] AS license_folder_division_name,
li.creation_date as  creation_ts,
TO_DATE(li.creation_date) as  creation_date,
li.modification_date as  modification_ts,
TO_DATE(li.modification_date) as  modification_date,
li.detail_page_url as  license_op_url_text,
TO_DATE(li.afflt_effective_date) as  affiliate_effective_date,
li.business_details as  business_details_desc,
li.country as  country_ids,
lookupValueByIdList('i18n_int_enum_vals',li.country,'\\\\|',',','n/a') as  country_name,
TO_DATE(li.expiry_date) as  expiry_date,
li.legal_entity as  legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',li.legal_entity,'\\\\|',',','n/a') as  legal_entity_desc,
TO_DATE(li.lic_commencement) as  license_commencement_date,
li.license_category as  license_category_id,
lookupValueByIdList('i18n_int_enum_vals',li.license_category,'\\\\|',',','n/a') as  license_category_desc,
li.license_class as  license_class_id,
lookupValueByIdList('i18n_int_enum_vals',li.license_class,'\\\\|',',','n/a') as  license_class_desc,
li.license_number as  license_number_text,
li.license_status as  license_status_id,
lookupValueByIdList('i18n_int_enum_vals',li.license_status,'\\\\|',',','n/a') as  license_status_desc,
li.license_type as  license_type_desc,
li.location_name as  location_ids,
lookupValueByIdList('i18n_int_enum_vals',li.location_name,'\\\\|',',','n/a') as  location_name,
li.notes as  notes_desc,
li.prim_macq_con as  primary_macq_contact_user_lanid_name,
lookupValueByUserList('actorinfo',li.prim_macq_con,'\\\\$;',',','n/a') as  primary_macq_contact_user_desc,
li.psgl_hierarchy_node as  psgl_hierarchy_node_id,
lookupValueByIdList('i18n_int_enum_vals',li.psgl_hierarchy_node,'\\\\|',',','n/a') as  psgl_hierarchy_node_desc,
li.region as  region_ids,
lookupValueByIdList('i18n_int_enum_vals',li.region,'\\\\|',',','n/a') as  region_desc,
li.TAGSOURCEID as cube_reg_tag_desc,
'Openpages' AS source
FROM license li
LEFT JOIN ai ai_creator
ON li.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON li.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON li.license_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_license"
    },
	
	{
      "stepDescription": "create sat_legalentity",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_legalentity/",
          "viewName": "rt_legalentity",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH legal_entity AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.legalentity_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_legalentity a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_legalentity')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
le.legalentity_bk as  legalentity_bk,
le.legalentity_id as  legalentity_id,
le.creator as  created_by_user_id,
ai_creator.name as  created_by_user_lanid_name,
ai_creator.description as  created_by_user_desc,
le.parent_folder as  parent_folder_id,
le.checked_in_by as  last_modified_by_user_id,
ai_checked_in_by.name as  last_modified_by_user_lanid_name,
ai_checked_in_by.description as  last_modified_by_user_desc,
le.name00 as  legalentity_name,
le.description as  legalentity_desc,
le.full_path as  legalentity_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Legal Entities/','/') AS resource_legalentity_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Legal Entities/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Legal Entities/','/'), le.name00)-2) As legalentity_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Legal Entities/','/'),'/')[2] AS legalentity_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Legal Entities/','/'),'/')[3] AS legalentity_folder_division_name,
le.creation_date as  creation_ts,
TO_DATE(le.creation_date) as  creation_date,
le.modification_date as  modification_ts,
TO_DATE(le.modification_date) as  modification_date,
le.detail_page_url as  legalentity_op_url_text,
le.abn as  abn_desc,
CAST(le.abn_code as int) as  abn_code_no,
le.aps120_flg as  aps120_flag_id,
lookupValueByIdList('i18n_int_enum_vals',le.aps120_flg,'\\\\|',',','n/a') as  aps120_flag_desc,
le.auto_update as  auto_update_id,
lookupValueByIdList('i18n_int_enum_vals',le.auto_update,'\\\\|',',','n/a') as  auto_update_desc,
le.bus_calc_dte as  business_calc_ts,
TO_DATE(le.bus_calc_dte) as  business_calc_date,
le.bus_div_owner as  business_division_owner_desc,
le.business_address as  business_address_desc,
le.ccics_status_cde as  ccis_status_code_id,
lookupValueByIdList('i18n_int_enum_vals',le.ccics_status_cde,'\\\\|',',','n/a') as  ccis_status_code_desc,
le.commercial_opern as  commercial_operations_id,
lookupValueByIdList('i18n_int_enum_vals',le.commercial_opern,'\\\\|',',','n/a') as  commercial_operations_desc,
le.ele_apra_flg as  ele_apra_flag_id,
lookupValueByIdList('i18n_int_enum_vals',le.ele_apra_flg,'\\\\|',',','n/a') as  ele_apra_flag_desc,
le.ele_flg as  ele_flag_id,
lookupValueByIdList('i18n_int_enum_vals',le.ele_flg,'\\\\|',',','n/a') as  ele_flag_desc,
le.ele_status as  ele_status_id,
lookupValueByIdList('i18n_int_enum_vals',le.ele_status,'\\\\|',',','n/a') as  ele_status_desc,
le.entity_nme as  entity_name_desc,
le.favourite as  favourite_ids,
lookupValueByIdList('i18n_int_enum_vals',le.favourite,'\\\\|',',','n/a') as  favourite_desc,
le.gl4_entity as  gl4_entity_desc,
le.gl4_reporting_entity00 as  gl4_reporting_entity_desc,
le.gl4_rpt_entcdflg as  gl4_reporting_entity_flag_id,
lookupValueByIdList('i18n_int_enum_vals',le.gl4_rpt_entcdflg,'\\\\|',',','n/a') as  gl4_reporting_entity_flag_desc,
le.group_le_flg as  group_le_flg_id,
lookupValueByIdList('i18n_int_enum_vals',le.group_le_flg,'\\\\|',',','n/a') as  group_le_flg_desc,
le.incorp_country as  incorporation_country_name,
le.is_active as  is_active_id,
lookupValueByIdList('i18n_int_enum_vals',le.is_active,'\\\\|',',','n/a') as  is_active_flag,
le.is_group as  is_group_id,
lookupValueByIdList('i18n_int_enum_vals',le.is_group,'\\\\|',',','n/a') as  is_group_flag,
le.key_id as  key_id,
le.last_update_tad as  last_update_ts,
TO_DATE(le.last_update_tad) as  last_update_date,
le.le_level_class as  apra_level_classification_id,
lookupValueByIdList('i18n_int_enum_vals',le.le_level_class,'\\\\|',',','n/a') as  apra_level_classification_desc,
le.leg_ent_control as  legalentity_control_desc,
le.legal_entity_controlle as  legalentity_controller_user_lanid_name,
lookupValueByUserList('actorinfo',le.legal_entity_controlle,'\\\\$;',',','n/a') as  legalentity_controller_user_desc,
le.location_name as  location_ids,
lookupValueByIdList('i18n_int_enum_vals',le.location_name,'\\\\|',',','n/a') as  location_name,
le.mac_structure_cd as  macquarie_structure_id,
lookupValueByIdList('i18n_int_enum_vals',le.mac_structure_cd,'\\\\|',',','n/a') as  macquarie_structure_desc,
le.non_fin_comm_flg as  non_financial_comm_id,
lookupValueByIdList('i18n_int_enum_vals',le.non_fin_comm_flg,'\\\\|',',','n/a') as  non_financial_comm_desc,
le.non_group_type as  non_group_type_id,
lookupValueByIdList('i18n_int_enum_vals',le.non_group_type,'\\\\|',',','n/a') as  non_group_type_desc,
le.par_ent_name as  parent_entity_name_desc,
le.prm_gl4_rpt_ent as  primary_gl4_reporting_entity_desc,
le.registered_off as  registered_office_address_desc,
le.reporting_region as  reporting_region_name,
le.rfc as  rfc_id,
lookupValueByIdList('i18n_int_enum_vals',le.rfc,'\\\\|',',','n/a') as  rfc_desc,
le.spv_flag as  spv_flag_id,
lookupValueByIdList('i18n_int_enum_vals',le.spv_flag,'\\\\|',',','n/a') as  spv_flag_desc,
le.statent_cde as  statent_code_desc,
le.tax_consn_status as  tax_consolidation_status_id,
lookupValueByIdList('i18n_int_enum_vals',le.tax_consn_status,'\\\\|',',','n/a') as  tax_consolidation_status_desc,
le.TAGSOURCEID as cube_reg_tag_desc,
'Openpages' AS source
FROM legal_entity le
LEFT JOIN ai ai_creator
ON le.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON le.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON le.legalentity_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_legalentity"
    },
	
	{
      "stepDescription": "create sat_requirement",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_requirement/",
          "viewName": "rt_requirement",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH requirement AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.requirement_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_requirement a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_requirement')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
rq.requirement_bk as  requirement_bk,
rq.name00 as  requirement_name,
rq.requirement_id as  requirement_id,
rq.description as  requirement_desc,
rq.creation_date as  creation_ts,
TO_DATE(rq.creation_date) as  creation_date,
rq.creator as  created_by_user_id,
ai_creator.name as  created_by_user_lanid_name,
ai_creator.description as  created_by_user_desc,
rq.parent_folder as  parent_folder_id,
rq.full_path as  requirement_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Requirements/','/') AS resource_requirement_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Requirements/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Requirements/','/'), rq.name00)-2) As requirement_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Requirements/','/'),'/')[2] AS requirement_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Requirements/','/'),'/')[3] AS requirement_folder_division_name,
rq.checked_in_by as  last_modified_by_user_id,
ai_checked_in_by.name as  last_modified_by_user_lanid_name,
ai_checked_in_by.description as  last_modified_by_user_desc,
rq.modification_date as  modification_ts,
TO_DATE(rq.modification_date) as  modification_date,
rq.detail_page_url as  requirement_op_url_text,
CAST(rq.deadline_interval as int) as  deadline_interval_no,
rq.deadline_type as  deadline_type_id,
lookupValueByIdList('i18n_int_enum_vals',rq.deadline_type,'\\\\|',',','n/a') as  deadline_type_desc,
rq.del_fr_fin_to as  delivered_from_finance_to_desc,
rq.external_reference as  external_reference_desc,
rq.finance_ob_type as  finance_obligation_type_id,
lookupValueByIdList('i18n_int_enum_vals',rq.finance_ob_type,'\\\\|',',','n/a') as  finance_obligation_type_desc,
rq.frequency as  frequency_id,
lookupValueByIdList('i18n_int_enum_vals',rq.frequency,'\\\\|',',','n/a') as  frequency_desc,
TO_DATE(rq.lastdtassurance) as  last_assurance_date,
rq.library_id as  library_id,
rq.nextdtassurance as  next_assurance_ts,
TO_DATE(rq.nextdtassurance) as  next_assurance_date,
rq.owner_type as  owner_type_ids,
lookupValueByIdList('i18n_int_enum_vals',rq.owner_type,'\\\\|',',','n/a') as  owner_type_desc,
rq.pcm_category as  pcm_category_ids,
lookupValueByIdList('i18n_int_enum_vals',rq.pcm_category,'\\\\|',',','n/a') as  pcm_category_desc,
rq.postboxflag as  post_box_flag_id,
lookupValueByIdList('i18n_int_enum_vals',rq.postboxflag,'\\\\|',',','n/a') as  post_box_flag_desc,
rq.postboxref as  post_box_reference_desc,
rq.public_dis as  public_disclosure_id,
lookupValueByIdList('i18n_int_enum_vals',rq.public_dis,'\\\\|',',','n/a') as  public_disclosure_desc,
rq.rationaleriskrating as  rationale_for_risk_rating_desc,
rq.ref_material as  reference_material_desc,
rq.reference_day as  reference_day_id,
lookupValueByIdList('i18n_int_enum_vals',rq.reference_day,'\\\\|',',','n/a') as  reference_day_desc,
rq.reference_month as  reference_month_id,
lookupValueByIdList('i18n_int_enum_vals',rq.reference_month,'\\\\|',',','n/a') as  reference_month_desc,
rq.reg_rep_method as  method_of_report_prep_id,
lookupValueByIdList('i18n_int_enum_vals',rq.reg_rep_method,'\\\\|',',','n/a') as  method_of_report_prep_dec,
rq.reg_rep_type as  report_type_id,
lookupValueByIdList('i18n_int_enum_vals',rq.reg_rep_type,'\\\\|',',','n/a') as  report_type_desc,
TO_DATE(rq.regrepfmwkdt) as  compliance_date,
rq.regrepfmwkimpstat as  compliance_status_id,
lookupValueByIdList('i18n_int_enum_vals',rq.regrepfmwkimpstat,'\\\\|',',','n/a') as  compliance_status_desc,
rq.rep_date_rules as  reporting_date_rules_desc,
rq.rep_obligation as  reporting_obligation_id,
lookupValueByIdList('i18n_int_enum_vals',rq.rep_obligation,'\\\\|',',','n/a') as  reporting_obligation_desc,
TO_DATE(rq.req_assess_date) as  requirement_assessment_date,
rq.req_assessment as  requirement_assessment_id,
lookupValueByIdList('i18n_int_enum_vals',rq.req_assessment,'\\\\|',',','n/a') as  requirement_assessment_desc,
rq.req_assmnt_dtl as  requirement_assessment_detail_desc,
rq.req_comment as  requirement_comment_desc,
rq.req_description as  requirement_long_desc,
rq.req_identifier as  requirement_identifier_user_lanid_name,
lookupValueByUserList('actorinfo',rq.req_identifier,'\\\\$;',',','n/a') as  requirement_identifier_user_desc,
rq.req_owner as  requirement_owner_user_laind_name,
lookupValueByUserList('actorinfo',rq.req_owner,'\\\\$;',',','n/a') as  requirement_owner_user_desc,
rq.requirement_status as  requirement_status_id,
lookupValueByIdList('i18n_int_enum_vals',rq.requirement_status,'\\\\|',',','n/a') as  requirement_status_desc,
rq.requirement_type as  requirement_type_id,
lookupValueByIdList('i18n_int_enum_vals',rq.requirement_type,'\\\\|',',','n/a') as  requirement_type_desc,
rq.risk_impact as  risk_impact_id,
lookupValueByIdList('i18n_int_enum_vals',rq.risk_impact,'\\\\|',',','n/a') as  risk_impact_desc,
rq.source00 as  source_id,
lookupValueByIdList('i18n_int_enum_vals',rq.source00,'\\\\|',',','n/a') as  source_desc,
rq.submitted_by as  submitted_to_regulator_by_desc,
'Openpages' AS source
FROM requirement rq
LEFT JOIN ai ai_creator
ON rq.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON rq.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON rq.requirement_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_requirement"
    },
	
    {
      "stepDescription": "create sat_ri_category",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_ricat/",
          "viewName": "rt_ricat",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH ri_category AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.ricat_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_ricat a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_ricat')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
rc.ricat_bk as  ri_category_bk,
rc.ricat_id as  ri_category_id,
rc.creator as  created_by_user_id,
ai_creator.name as  created_by_user_lanid_name,
ai_creator.description as  created_by_user_desc,
rc.parent_folder as  parent_folder_id,
rc.checked_in_by as  last_modified_by_user_id,
ai_checked_in_by.name as  last_modified_by_user_lanid_name,
ai_checked_in_by.description as  last_modified_by_user_desc,
rc.name00 as  ri_category_name,
rc.description as  ri_category_desc,
rc.full_path as  ri_category_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Categories/','/') AS resource_ri_category_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Categories/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Categories/','/'), rc.name00)-2) As ri_category_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Categories/','/'),'/')[2] AS ri_category_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Categories/','/'),'/')[3] AS ri_category_folder_division_name,
rc.creation_date as  creation_ts,
TO_DATE(rc.creation_date) as  creation_date,
rc.modification_date as  modification_ts,
TO_DATE(rc.modification_date) as  modification_date,
rc.detail_page_url as  ri_category_op_url_text,
rc.business_approver as  business_approver_user_lanid_name,
lookupValueByUserList('actorinfo',rc.business_approver,'\\\\$;',',','n/a') as  business_approver_user_desc,
TO_DATE(rc.due_date) as  due_date,
rc.facilitator as  facilitator_user_lanid_name,
lookupValueByUserList('actorinfo',rc.facilitator,'\\\\$;',',','n/a') as  facilitator_user_desc,
rc.facilitator_comments as  facilitator_comments_desc,
rc.owner as  owner_user_lanid_name,
lookupValueByUserList('actorinfo',rc.owner,'\\\\$;',',','n/a') as  owner_user_desc,
rc.ri_category_descriptio as  ri_category_long_desc,
rc.status as  status_id,
lookupValueByIdList('i18n_int_enum_vals',rc.status,'\\\\|',',','n/a') as  status_desc,
'Openpages' AS source
FROM ri_category rc
LEFT JOIN ai ai_creator
ON rc.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON rc.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON rc.ricat_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_ri_category"
    },
	
	{
      "stepDescription": "create sat_ri_request",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_rireq/",
          "viewName": "rt_rireq",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH ri_request AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.rireq_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_rireq a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_rireq')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
rr.rireq_bk as  ri_request_bk,
rr.rireq_id as  ri_request_id,
rr.creator as  created_by_user_id,
ai_creator.name as  created_by_user_lanid_name,
ai_creator.description as  created_by_user_desc,
rr.parent_folder as  parent_folder_id,
rr.checked_in_by as  last_modified_by_user_id,
ai_checked_in_by.name as  last_modified_by_user_lanid_name,
ai_checked_in_by.description as  last_modified_by_user_desc,
rr.name00 as  ri_request_name,
rr.description as  ri_request_desc,
rr.full_path as  ri_request_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Requests/','/') AS resource_ri_request_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Requests/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Requests/','/'), rr.name00)-2) As ri_request_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Requests/','/'),'/')[2] AS ri_request_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/RI Requests/','/'),'/')[3] AS ri_request_folder_division_name,
rr.creation_date as  creation_ts,
TO_DATE(rr.creation_date) as  creation_date,
rr.modification_date as  modification_ts,
TO_DATE(rr.modification_date) as  modification_date,
rr.detail_page_url as  ri_request_op_url_text,
rr.addl_info_needed as  addl_info_needed_desc,
TO_DATE(rr.completed_date) as  completed_date,
rr.date_delivered as  delivered_ts,
TO_DATE(rr.date_delivered) as  delivered_date,
TO_DATE(rr.date_received) as  received_date,
rr.date_response_received as  response_received_ts,
TO_DATE(rr.date_response_received) as  response_received_date,
rr.deliverable_creator as  deliverable_creator_desc,
rr.deliverable_name as  deliverable_name,
rr.deliverable_number as  deliverable_number_desc,
rr.delivered_to as  delivered_to_name,
rr.delivery_method as  delivery_method_id,
lookupValueByIdList('i18n_int_enum_vals',rr.delivery_method,'\\\\|',',','n/a') as  delivery_method_desc,
rr.details_of_request as  details_of_request_desc,
rr.details_of_response as  details_of_response_desc,
TO_DATE(rr.due_date) as  due_date,
rr.facilitator_notes as  facilitator_notes_desc,
rr.meeting_attendees as  meeting_attendees_desc,
rr.meeting_date as  meeting_ts,
TO_DATE(rr.meeting_date) as  meeting_date,
rr.meeting_duration as  meeting_duration_desc,
rr.meeting_logistics as  meeting_logistics_desc,
rr.meeting_prep as  meeting_prep_desc,
rr.meeting_time as  meeting_time_id,
lookupValueByIdList('i18n_int_enum_vals',rr.meeting_time,'\\\\|',',','n/a') as  meeting_time_desc,
rr.notify_prudtl_reg as  notify_prudential_reg_id,
lookupValueByIdList('i18n_int_enum_vals',rr.notify_prudtl_reg,'\\\\|',',','n/a') as  notify_prudential_reg_desc,
rr.optional_attendees as  optional_attendees_desc,
rr.owner as  owner_user_lanid_name,
lookupValueByUserList('actorinfo',rr.owner,'\\\\$;',',','n/a') as  owner_user_desc,
rr.reg_to_notify as  regulators_to_notify_ids,
lookupValueByIdList('i18n_int_enum_vals',rr.reg_to_notify,'\\\\|',',','n/a') as  regulators_to_notify_desc,
rr.request_type as  request_type_id,
lookupValueByIdList('i18n_int_enum_vals',rr.request_type,'\\\\|',',','n/a') as  request_type_desc,
rr.requestor as  requestor_desc,
rr.required_attendees as  required_attendees_desc,
rr.resolution as  resolution_desc,
rr.respondent as  respondent_desc,
rr.respondent_comments as  respondent_comments_desc,
rr.status as  status_id,
lookupValueByIdList('i18n_int_enum_vals',rr.status,'\\\\|',',','n/a') as  status_desc,
rr.subject as  subject_desc,
rr.time_delivered as  time_delivered_id,
lookupValueByIdList('i18n_int_enum_vals',rr.time_delivered,'\\\\|',',','n/a') as  time_delivered_desc,
rr.time_received as  time_received_id,
lookupValueByIdList('i18n_int_enum_vals',rr.time_received,'\\\\|',',','n/a') as  time_received_desc,
rr.time_response_received as  time_response_received_id,
lookupValueByIdList('i18n_int_enum_vals',rr.time_response_received,'\\\\|',',','n/a') as  time_response_received_desc,
rr.actions_for_raar as actions_on_apra_or_mcq_id,
lookupValueByIdList('i18n_int_enum_vals',rr.actions_for_raar,'\\\\|',',','n/a') as  actions_on_apra_or_mcq_desc,
rr.no_due_date_req as due_date_required_id,
lookupValueByIdList('i18n_int_enum_vals',rr.no_due_date_req,'\\\\|',',','n/a') as  due_date_required_flag,
rr.viewer AS regulatory_action_viewer_user_lanid_name,
lookupValueByUserList('actorinfo',rr.viewer,'\\\\$;',',','n/a') as  regulatory_action_viewer_user_desc,
'Openpages' AS source
FROM ri_request rr
LEFT JOIN ai ai_creator
ON rr.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON rr.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON rr.rireq_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_ri_request"
    },
	
	{

      "stepDescription": "create sat_regulator",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_regulator/",
          "viewName": "rt_regulator",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH regulator AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.regulator_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_regulator a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_regulator')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
rg.regulator_bk as  regulator_bk,
rg.regulator_id as  regulator_id,
rg.creator as  created_by_user_id,
ai_creator.name as  created_by_user_lanid_name,
ai_creator.description as  created_by_user_desc,
rg.parent_folder as  parent_folder_id,
rg.checked_in_by as  last_modified_by_user_id,
ai_checked_in_by.name as  last_modified_by_user_lanid_name,
ai_checked_in_by.description as  last_modified_by_user_desc,
rg.name00 as  regulator_name,
rg.description as  regulator_desc,
rg.full_path as  regulator_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulators/','/') as resource_regulator_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulators/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulators/','/'), rg.name00)-2) as regulator_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulators/','/'),'/')[2] as  regulator_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Regulators/','/'),'/')[3] as  regulator_folder_division_name,
rg.creation_date as  creation_ts,
TO_DATE(rg.creation_date)  as  creation_date,
rg.modification_date as  modification_ts,
TO_DATE(rg.modification_date) AS modification_date,
rg.detail_page_url as  regulator_op_url_text,
rg.country as  country_ids,
lookupValueByIdList('i18n_int_enum_vals',rg.country,'\\\\|',',','n/a') as  country_name,
rg.location_name as  location_ids,
lookupValueByIdList('i18n_int_enum_vals',rg.location_name,'\\\\|',',','n/a') as  location_name,
rg.primary_int_cont as  primary_internal_contact_user_lanid_name,
lookupValueByUserList('actorinfo',rg.primary_int_cont,'\\\\$;',',','n/a') as  primary_internal_contact_user_desc,
rg.reg_events_issues as  regulator_event_issues_desc,
rg.reg_key_priorities as  regulator_key_priority_ids,
lookupValueByIdList('i18n_int_enum_vals',rg.reg_key_priorities,'\\\\|',',','n/a') as  regulator_key_priority_desc,
rg.reg_other_priorities as  regulator_other_priorities_desc,
rg.reg_rel_status as  relationship_status_id,
lookupValueByIdList('i18n_int_enum_vals',rg.reg_rel_status,'\\\\|',',','n/a') as relationship_status_desc,
rg.reg_rel_summary as  relationship_summary_desc,
rg.region as  region_ids,
lookupValueByIdList('i18n_int_enum_vals',rg.region,'\\\\|',',','n/a') as region_name,
rg.regulator_description as  regulator_long_desc,
rg.regulator_status as  regulator_status_id,
lookupValueByIdList('i18n_int_enum_vals',rg.regulator_status,'\\\\|',',','n/a') as regulator_status_desc,
rg.regulator_tiering as  regulator_tiering_id,
lookupValueByIdList('i18n_int_enum_vals',rg.regulator_tiering,'\\\\|',',','n/a') as regulator_tiering_desc,
rg.regulator_type as  regulator_type_id,
lookupValueByIdList('i18n_int_enum_vals',rg.regulator_type,'\\\\|',',','n/a') as regulator_type_desc,
rg.JURISDICTIONNAME as jurisdiction_desc,
rg.ISSUINGBODYURL as issuing_body_url_desc,
rg.TEAM_REG_SCAN as team_resp_for_horizon_scanning_desc,
rg.SOURCEAPPLIC as source_application_id,
lookupValueByIdList('i18n_int_enum_vals',rg.SOURCEAPPLIC,'\\\\|',',','n/a') as source_application_desc,
rg.ISSUINGBODY as issuing_body_desc,
rg.REG_HOR_SCANNED as is_regulator_horizon_scanned_id,
lookupValueByIdList('i18n_int_enum_vals',rg.REG_HOR_SCANNED,'\\\\|',',','n/a') as is_regulator_horizon_scanned_desc,
'Openpages' AS source
FROM regulator rg
LEFT JOIN ai ai_creator
ON rg.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON rg.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON rg.regulator_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_regulator"
    },
{
      "stepDescription": "create sat_policy",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_policy/",
          "viewName": "rt_policy",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH policy AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.policy_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_policy a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_policy')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
p.policy_bk AS policy_bk,
p.policy_id AS policy_id,
p.creator AS created_by_user_id,
ai_checked_in_by.name AS created_by_user_lanid_name,
ai_checked_in_by.description AS created_by_user_desc,
p.parent_folder AS parent_folder_id,
p.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
p.name00 AS policy_name,
p.description AS policy_desc,
p.full_path AS policy_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Policies/','/') AS resource_policy_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Policies/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Policies/','/'), p.name00)-2) As policy_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Policies/','/'),'/')[2] AS policy_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Policies/','/'),'/')[3] AS policy_folder_division_name,
p.creation_date AS creation_ts,
TO_DATE(p.creation_date) AS creation_date,
p.modification_date AS modification_ts,
TO_DATE(p.modification_date) AS modification_date,
p.detail_page_url AS policy_op_url_text,
p.contact AS policy_contact_user_lanid_name,
lookupValueByUserList('actorinfo',p.contact,'\\\\$;',',','n/a')  AS policy_contact_user_desc,
TO_DATE(p.date_last_policy_updat) AS last_policy_published_date,
TO_DATE(p.date_retired) AS policy_retired_date,
p.eventtax AS risk_event_hierarchy_ids,
lookupValueByIdList('i18n_int_enum_vals',p.eventtax,'\\\\|',',','n/a') AS risk_event_hierarchy_desc,
p.external_reference AS external_reference_desc,
p.owner AS business_owner_desc,
TO_DATE(p.paof_date) AS last_poaf_date,
p.policy_details AS policy_details_desc,
p.policy_document_type AS policy_document_type_id,
lookupValueByIdList('i18n_int_enum_vals',p.policy_document_type,'\\\\|',',','n/a') AS policy_document_type_desc,
p.policy_owner AS policy_owner_user_lanid_name,
lookupValueByUserList('actorinfo',p.policy_owner,'\\\\$;',',','n/a')  AS policy_owner_user_desc,
p.polstate1 AS policy_reason_for_retiring_desc,
p.review_recurrence AS policy_review_recurrence_id,
lookupValueByIdList('i18n_int_enum_vals',p.review_recurrence,'\\\\|',',','n/a') AS policy_review_recurrence_desc,
p.review_recurs_every AS review_recurs_frequency_id,
lookupValueByIdList('i18n_int_enum_vals',p.review_recurs_every,'\\\\|',',','n/a') AS review_recurs_frequency_desc,
p.status AS policy_status_id,
lookupValueByIdList('i18n_int_enum_vals',p.status,'\\\\|',',','n/a')  AS policy_status_desc,
TO_DATE(p.version_date) AS policy_version_date,
p.version_number AS policy_version_no,
p.BRDOVERSIGHT AS board_committee_oversight_id,
lookupValueByIdList('i18n_int_enum_vals',p.BRDOVERSIGHT,'\\\\|',',','n/a') AS board_committee_oversight_desc,
TO_DATE(p.DATEAPPENDORSED) AS approved_or_endorsed_date,
p.APPROVALREQ AS approval_required_id,
lookupValueByIdList('i18n_int_enum_vals',p.APPROVALREQ,'\\\\|',',','n/a') AS approval_required_desc,
p.TAGSOURCEID as cube_reg_tag_desc,
'Openpages' AS source
FROM policy p
LEFT JOIN ai ai_creator
ON p.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON p.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON p.policy_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_policy"
    },
{
      "stepDescription": "create sat_location",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_location/",
          "viewName": "rt_location",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH location AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.location_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_location a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_location')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
l.location_bk AS location_bk,
l.location_id AS location_id,
l.creator AS created_by_user_id,
ai_checked_in_by.name AS created_by_user_lanid_name,
ai_checked_in_by.description AS created_by_user_desc,
l.parent_folder AS parent_folder_id,
l.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
l.name00 AS location_name,
l.description AS location_desc,
l.full_path AS location_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Locations/','/') AS resource_location_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Locations/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Locations/','/'), l.name00)-2) As location_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Locations/','/'),'/')[2] AS location_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Locations/','/'),'/')[3] AS location_folder_division_name,
l.creation_date AS creation_ts,
TO_DATE(l.creation_date) AS creation_date,
l.modification_date AS modification_ts,
TO_DATE(l.modification_date) AS modification_date,
l.detail_page_url AS location_op_url_text,
l.country AS country_ids,
lookupValueByIdList('i18n_int_enum_vals',l.country,'\\\\|',',','n/a') AS country_name,
l.location_name AS location_ids,
lookupValueByIdList('i18n_int_enum_vals',l.location_name,'\\\\|',',','n/a') AS location_names,
l.region AS region_ids,
lookupValueByIdList('i18n_int_enum_vals',l.region,'\\\\|',',','n/a') AS region_names,
l.type00 AS location_type_id,
lookupValueByIdList('i18n_int_enum_vals',l.type00,'\\\\|',',','n/a') AS location_type_desc,
'Openpages' AS source
FROM location l
LEFT JOIN ai ai_creator
ON l.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON l.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON l.location_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_location"
    },
{
      "stepDescription": "create sat_mandate",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_mandate/",
          "viewName": "rt_mandate",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH mandate AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.mandate_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_mandate a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_mandate')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
m.mandate_bk AS mandate_bk,
m.mandate_id AS mandate_id,
m.creator AS created_by_user_id,
ai_checked_in_by.name AS created_by_user_lanid_name,
ai_checked_in_by.description AS created_by_user_desc,
m.parent_folder AS parent_folder_id,
m.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
m.name00 AS mandate_name,
m.description AS mandate_desc,
m.full_path AS mandate_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Mandates/','/') AS resource_mandate_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Mandates/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Mandates/','/'), m.name00)-2) As mandate_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Mandates/','/'),'/')[2] AS mandate_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Mandates/','/'),'/')[3] AS mandate_folder_division_name,
m.creation_date AS creation_ts,
TO_DATE(m.creation_date) AS creation_date,
m.modification_date AS modification_ts,
TO_DATE(m.modification_date) AS modification_date,
m.detail_page_url AS mandate_op_url_text,
TO_DATE(m.date00) AS mandate_date,
m.external_reference AS external_reference_desc,
m.mandate_desc AS mandate_long_desc,
m.mandate_status AS mandate_status_id,
lookupValueByIdList('i18n_int_enum_vals',m.mandate_status,'\\\\|',',','n/a') AS mandate_status_desc,
m.VERSIONORDINAL as book_version_desc,
m.TITLE as issuance_title_desc,
m.JURISDICTIONNAME as jurisdiction_desc,
m.SOURCEAPPLIC as source_application_id,
lookupValueByIdList('i18n_int_enum_vals',m.SOURCEAPPLIC,'\\\\|',',','n/a') AS source_application_desc,
m.MANDATE_OWNER as mandate_owner_user_lanid_names,
lookupValueByUserList('actorinfo',m.MANDATE_OWNER,'\\\\$;',',','n/a') as mandate_owner_user_desc,
m.ISSUINGBODYNAME as issuing_body_desc,
'Openpages' AS source
FROM mandate m
LEFT JOIN ai ai_creator
ON m.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON m.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON m.mandate_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_mandate"
    },
{
      "stepDescription": "create sat_submandate",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_submandate/",
          "viewName": "rt_submandate",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH submandate AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.submandate_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_submandate a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_submandate')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
s.submandate_bk AS submandate_bk,
s.submandate_id AS submandate_id,
s.creator AS created_by_user_id,
ai_checked_in_by.name AS created_by_user_lanid_name,
ai_checked_in_by.description AS created_by_user_desc,
s.parent_folder AS parent_folder_id,
s.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
s.name00 AS submandate_name,
s.description AS submandate_desc,
s.full_path AS submandate_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Sub-Mandates/','/') AS resource_submandate_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Sub-Mandates/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Sub-Mandates/','/'), s.name00)-2) As submandate_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Sub-Mandates/','/'),'/')[2] AS submandate_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Sub-Mandates/','/'),'/')[3] AS submandate_folder_division_name,
s.creation_date AS creation_ts,
TO_DATE(s.creation_date) AS creation_date,
s.modification_date AS modification_ts,
TO_DATE(s.modification_date) AS modification_date,
s.detail_page_url AS submandate_op_url_text,
TO_DATE(s.date00) AS submandate_date,
s.external_reference AS external_reference_desc,
s.submandate_description AS submandate_long_desc,
s.submandate_status AS submandate_status_id,
lookupValueByIdList('i18n_int_enum_vals',s.submandate_status,'\\\\|',',','n/a') AS submandate_status_desc,
s.SUBMANDATE_OWNER as sub_mandate_owner_user_lanid_names,
lookupValueByUserList('actorinfo',s.SUBMANDATE_OWNER,'\\\\$;',',','n/a') as sub_mandate_owner_user_desc,
s.VERSIONORDINAL as book_version_desc,
s.SUBMANDATE_ORDER as sub_mandate_order_id,
s.SOURCEAPPLIC as source_application_id,
lookupValueByIdList('i18n_int_enum_vals',s.SOURCEAPPLIC,'\\\\|',',','n/a') AS source_application_desc,
'Openpages' AS source
FROM submandate s
LEFT JOIN ai ai_creator
ON s.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON s.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON s.submandate_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_submandate"
    },{
      "stepDescription": "create sat_l2_capability_assessment",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_l2capeval/",
          "viewName": "rt_l2capeval",
          "cacheFlag": "false"
        },
		{
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH l2_capability_assessment AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.l2capeval_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_l2capeval a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_l2capeval')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
l1.l2capeval_bk AS l2_cap_assessment_bk,
l1.l2capeval_id AS l2_cap_assessment_id,
l1.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
l1.parent_folder AS parent_folder_id,
l1.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
l1.name00 AS l2_cap_assessment_name,
l1.description AS l2_cap_assessment_desc,
l1.full_path AS l2_cap_assessment_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2CapEval/','/') AS resource_l2_cap_assessment_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2CapEval/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2CapEval/','/'), l1.name00)-2) As l2_cap_assessment_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2CapEval/','/'),'/')[2] AS l2_cap_assessment_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/L2CapEval/','/'),'/')[3] AS l2_cap_assessment_folder_division_name,
l1.creation_date AS creation_ts,
TO_DATE(l1.creation_date) AS creation_date,
l1.modification_date AS modification_ts,
TO_DATE(l1.modification_date) AS modification_date,
l1.detail_page_url AS l2_cap_assessment_op_url_text,
l1.l2cap_grouping AS l2_capability_grouping_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l2cap_grouping,'\\\\|',',','n/a') AS l2_capability_grouping_desc,
CAST(l1.l2cap_stage AS int) AS l2_capability_stage_no,
l1.l2cap_taxonomy AS l2_capability_taxonomy_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l2cap_taxonomy,'\\\\|',',','n/a') AS l2_capability_taxonomy_desc,
l1.lib_l2cap_description AS library_l2_capability_desc,
l1.lib_l2cap_id AS library_l2_capability_id_name,
CAST(l1.lib_l2cap_sequence AS decimal) AS library_l2_capability_sequence_no,
l1.l2cap_description AS l2_cap_assessment_long_desc,
l1.l2cap_owner AS l2_capability_owner_user_lanid_name,
lookupValueByUserList('actorinfo',l1.l2cap_owner,'\\\\$;',',','n/a') AS l2_capability_owner_user_desc,
l1.l2cap_status AS l2_capability_status_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l2cap_status,'\\\\|',',','n/a') AS l2_capability_status_desc,
l1.l2_comment AS l2_cap_assessment_comment,
l1.l2capevalcompby AS last_assessment_completed_by_user_lanid_name,
lookupValueByUserList('actorinfo',l1.l2capevalcompby,'\\\\$;',',','n/a') AS last_assessment_completed_by_user_desc,
TO_DATE(l1.l2capevalcompdate) AS last_assessment_completed_date,
TO_DATE(l1.l2capnextasmtdate) AS next_assessment_due_date,
l1.l2capevalby AS assessment_performed_by_user_lanid_name,
lookupValueByUserList('actorinfo',l1.l2capevalby,'\\\\$;',',','n/a') AS assessment_performed_by_user_desc,
l1.l2capevalcomment AS assessment_commentary_desc,
TO_DATE(l1.l2capevaldate) AS assessment_completion_date,
TO_DATE(l1.l2capevalduedate) AS assessment_due_date,
l1.l2capevaleffrating AS capability_rating_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l2capevaleffrating,'\\\\|',',','n/a') AS capability_rating_desc,
l1.l2capevalstatus AS capability_assessment_status_id,
lookupValueByIdList('i18n_int_enum_vals',l1.l2capevalstatus,'\\\\|',',','n/a') AS capability_assessment_status_desc,
'Openpages' AS source
FROM l2_capability_assessment l1
LEFT JOIN ai ai_creator
ON l1.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON l1.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON l1.l2capeval_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_l2_capability_assessment"
    },
{
      "stepDescription": "create sat_resource",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_resource/",
          "viewName": "rt_resource",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH resource AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.resource_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_resource a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_resource')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
r.resource_bk AS resource_bk,
r.name00 AS resource_name,
r.resource_id AS resource_id,
r.description AS resource_desc,
r.creation_date AS creation_ts,
TO_DATE(r.creation_date) AS creation_date,
r.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
r.full_path AS resource_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Resource/','/') AS resource_resource_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Resource/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Resource/','/'), r.name00)-2) As resource_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Resource/','/'),'/')[2] AS resource_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Resource/','/'),'/')[3] AS resource_folder_division_name,
r.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
r.modification_date AS modification_ts,
TO_DATE(r.modification_date) AS modification_date,
r.detail_page_url AS resource_op_url_text,
r.approvedby AS business_owner_desc,
CAST(r.arl AS bigint) AS arl_id,
lookupValueByIdList('i18n_int_enum_vals',r.arl,'\\\\|',',','n/a') AS arl_desc,
CAST(r.bcptier AS bigint) AS availability_id,
lookupValueByIdList('i18n_int_enum_vals',r.bcptier,'\\\\|',',','n/a') AS availability_desc,
r.cmdbdesc AS cmdb_desc,
r.cmdbid AS cmdb_id,
CAST(r.confrating AS bigint) AS confidentiality_id,
lookupValueByIdList('i18n_int_enum_vals',r.confrating,'\\\\|',',','n/a') AS confidentiality_desc,
r.department AS department_desc,
CAST(r.integrating AS bigint) AS integrity_id,
lookupValueByIdList('i18n_int_enum_vals',r.integrating,'\\\\|',',','n/a') AS integrity_desc,
r.linkui AS resource_links_text,
r.ownedby AS primary_owner_desc,
CAST(r.privrating AS bigint) AS privacy_rating_id,
lookupValueByIdList('i18n_int_enum_vals',r.privrating,'\\\\|',',','n/a') AS privacy_rating_desc,
r.region AS region_name,
CAST(r.restype AS bigint) AS resource_type_id,
lookupValueByIdList('i18n_int_enum_vals',r.restype,'\\\\|',',','n/a') AS resource_type_desc,
r.sourceapp AS source_app_desc,
r.sourceid AS source_id_desc,
'Openpages' AS source
FROM resource r
LEFT JOIN ai ai_creator
ON r.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON r.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON r.resource_id=re.resourceid",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_resource"
    },
	{
      "stepDescription": "create sat_control_group",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_controlgroup/",
          "viewName": "rt_controlgroup",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH controlgroup AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.controlgroup_id ORDER BY a.batch_id desc) AS row_nbr 
FROM rt_controlgroup a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_controlgroup')i WHERE row_nbr=1
),
ai AS 
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS 
(
SELECT * FROM resources
)
SELECT
cg.controlgroup_bk AS control_group_bk,
cg.creation_date AS creation_ts,
TO_DATE(cg.creation_date) AS creation_date,
cg.creator as created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
cg.parent_folder AS parent_folder_id,
cg.full_path AS control_group_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Control Groups/','/') AS resource_control_group_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Control Groups/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Control Groups/','/'), cg.name00)-2) As control_group_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Control Groups/','/'),'/')[2] AS control_group_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Control Groups/','/'),'/')[3] AS control_group_folder_division_name,
cg.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
cg.modification_date AS modification_ts,
TO_DATE(cg.modification_date) AS modification_date,
cg.controlgroup_id AS control_group_id,
cg.name00 AS control_group_name,
cg.description AS control_group_desc,
cg.detail_page_url AS control_group_op_url_text,
cg.ctrl_grp_desc AS control_group_long_desc,
CAST(cg.ctrl_grp_status AS BIGINT) AS control_group_status_id,
lookupValueByIdList('i18n_int_enum_vals',cg.ctrl_grp_status,'\\\\|',',','n/a') AS control_group_status_desc,
cg.external_reference AS external_reference_desc,
cg.legal_entity AS legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',cg.legal_entity,'\\\\|',',','n/a') AS legal_entity_desc,
cg.ctrl_grp_owner AS control_group_owner_user_lanid_name,
lookupValueByUserList('actorinfo',cg.ctrl_grp_owner,'\\\\$;',',','n/a') AS control_group_owner_user_desc,
'Openpages' AS source
FROM controlgroup cg
LEFT JOIN ai ai_creator
ON cg.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON cg.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON cg.controlgroup_id=re.resourceid
WHERE re.isdeleted = 0",
      "preDerivedColumnList": [
      ],
      "postDerivedColumnList": [
        {
          "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "business_effective_timestamp"
        },
        {
          "colExpression": "current_timestamp()",
          "colSource": "sparkSQL",
          "colSourceExpression": "",
          "colAlias": "load_timestamp"
        },
        {
          "colExpression": "CAST(batchId AS LONG)",
          "colSource": "param",
          "colSourceExpression": "batchId",
          "colAlias": "batch_id"
        }
      ],
      "partitionColumnList": [
        "business_effective_timestamp"
      ],
      "numOfWriteRepartition": 2,
      "hiveTableName": "sat_control_group"
    },
    {
      "stepDescription": "create sat_assurance_plan",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_mgl_assurplan/",
          "viewName": "rt_mgl_assurplan",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH assurance_plan AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.mgl_assurplan_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_mgl_assurplan a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_mgl_assurplan')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
ap.mgl_assurplan_bk AS assurance_plan_bk,
ap.mgl_assurplan_id AS assurance_plan_id,
ap.detail_page_url AS assurance_plan_op_url_text,
ap.creator as created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ap.parent_folder AS parent_folder_id,
ap.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ap.name00 AS assurance_plan_name,
ap.description AS assurance_plan_desc,
ap.full_path AS assurance_plan_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_AssurPlan/','/') AS resource_assurance_plan_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_AssurPlan/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_AssurPlan/','/'), ap.name00)-2) As assurance_plan_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_AssurPlan/','/'),'/')[2] AS assurance_plan_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_AssurPlan/','/'),'/')[3] AS assurance_plan_folder_division_name,
ap.creation_date AS creation_ts,
TO_DATE(ap.creation_date) AS creation_date,
ap.modification_date AS modification_ts,
TO_DATE(ap.modification_date) AS modification_date,
ap.addtlcomments AS additional_comments_desc,
ap.assurplanstatus as assurance_plan_status_id,
lookupValueByIdList('i18n_int_enum_vals',ap.assurplanstatus,'\\\\|',',','n/a') AS assurance_plan_status_desc,
ap.assurplanyear as assurance_plan_year_id,
lookupValueByIdList('i18n_int_enum_vals',ap.assurplanyear,'\\\\|',',','n/a') AS assurance_plan_year_desc,
TO_DATE(ap.enddate) AS assurance_plan_end_date,
ap.planowner AS plan_owner_user_lanid_name,
lookupValueByUserList('actorinfo',ap.planowner,'\\\\$;',',','n/a') AS plan_owner_user_desc,
ap.reviewdescription AS plan_desc,
ap.reviewtype as plan_type_id,
lookupValueByIdList('i18n_int_enum_vals',ap.reviewtype,'\\\\|',',','n/a') AS plan_type_desc,
TO_DATE(ap.startdate) AS assurance_plan_start_date,
ap.deletedreason AS deleted_reason_desc,
'Openpages' AS source
FROM assurance_plan ap
LEFT JOIN ai ai_creator
ON ap.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ap.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ap.mgl_assurplan_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_assurance_plan"
    },
    {
      "stepDescription": "create sat_product",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_product/",
          "viewName": "rt_product",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH product AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.product_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_product a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_product')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
pr.product_bk AS product_bk,
pr.product_id AS product_id,
pr.creator as created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
pr.parent_folder AS parent_folder_id,
pr.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
pr.name00 AS product_name,
pr.description AS product_desc,
pr.full_path AS product_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Products/','/') AS resource_product_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Products/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Products/','/'), pr.name00)-2) As product_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Products/','/'),'/')[2] AS product_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Products/','/'),'/')[3] AS product_folder_division_name,
pr.creation_date AS creation_ts,
TO_DATE(pr.creation_date) AS creation_date,
pr.modification_date AS modification_ts,
TO_DATE(pr.modification_date) AS modification_date,
pr.detail_page_url as product_plan_op_url_text,
pr.product_description as product_long_desc,
pr.product_status as product_status,
pr.external_reference as external_reference_desc,
'Openpages' AS source
FROM product pr
LEFT JOIN ai ai_creator
ON pr.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON pr.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON pr.product_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_product"
    },
    {
      "stepDescription": "create sat_waiver",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_waiver/",
          "viewName": "rt_waiver",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH waiver AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.waiver_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_waiver a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_waiver')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
wv.waiver_bk AS waiver_bk,
wv.waiver_id AS waiver_id,
wv.description as waiver_desc,
wv.creation_date AS creation_ts,
TO_DATE(wv.creation_date) AS creation_date,
wv.creator as created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
wv.parent_folder AS parent_folder_id,
wv.full_path AS waiver_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Waivers/','/') AS resource_waiver_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Waivers/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Waivers/','/'), wv.name00)-2) As waiver_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Waivers/','/'),'/')[2] AS waiver_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/Waivers/','/'),'/')[3] AS waiver_folder_division_name,
wv.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
wv.modification_date AS modification_ts,
TO_DATE(wv.modification_date) AS modification_date,
wv.name00 AS waiver_name,
wv.detail_page_url as waiver_op_url_text,
wv.approved as approved_id,
lookupValueByIdList('i18n_int_enum_vals',wv.approved,'\\\\|',',','n/a') as approved_desc,
wv.contact_person as contact_person_user_lanid_name,
lookupValueByUserList('actorinfo',wv.contact_person,'\\\\$;',',','n/a') AS contact_person_user_desc,
wv.effective_date as effective_date,
wv.expiration_date as expiration_date,
wv.legal_entity as legal_entity_ids,
lookupValueByIdList('i18n_int_enum_vals',wv.legal_entity,'\\\\|',',','n/a') as legal_entity_desc,
wv.macquarie_id as macquarie_id_desc,
wv.monitoring00 as monitoring_desc,
wv.reason_for_waiver as reason_for_waiver_desc,
wv.review_due as review_due_date,
wv.tagsourceid as cube_reg_tag_desc,
wv.type_of_waiver as type_of_waiver_id,
lookupValueByIdList('i18n_int_enum_vals',wv.type_of_waiver,'\\\\|',',','n/a') as type_of_waiver_desc,
wv.waiver_description as waiver_long_desc,
wv.waiver_instid as waiver_instrument_id_desc,
wv.waiver_status as waiver_status_id,
lookupValueByIdList('i18n_int_enum_vals',wv.waiver_status,'\\\\|',',','n/a') as waiver_status_desc,
'Openpages' AS source
FROM waiver wv
LEFT JOIN ai ai_creator
ON wv.creator = ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON wv.checked_in_by = ai_checked_in_by.actorid
LEFT JOIN re
ON wv.waiver_id = re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_waiver"
    },
    {
      "stepDescription": "create sat_obligation",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_mgl_obligation/",
          "viewName": "rt_mgl_obligation",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH obligation AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.mgl_obligation_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_mgl_obligation a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_mgl_obligation')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
ob.mgl_obligation_bk AS obligation_bk,
ob.mgl_obligation_id as obligation_id,
ob.description AS obligation_desc,
ob.creation_date AS creation_ts,
TO_DATE(ob.creation_date) AS creation_date,
ob.creator as created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ob.parent_folder AS parent_folder_id,
ob.full_path AS obligation_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Obligation/','/') AS resource_obligation_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Obligation/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Obligation/','/'), ob.name00)-2) As obligation_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Obligation/','/'),'/')[2] AS obligation_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Obligation/','/'),'/')[3] AS obligation_folder_division_name,
ob.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ob.modification_date AS modification_ts,
TO_DATE(ob.modification_date) AS modification_date,
ob.name00 AS obligation_name,
ob.detail_page_url as obligation_op_url_text,
ob.brdcomchecklist as board_compliance_checklist_id,
lookupValueByIdList('i18n_int_enum_vals',ob.brdcomchecklist,'\\\\|',',','n/a') as board_compliance_checklist_desc,
ob.eventtax as risk_event_hierarchy_ids,
lookupValueByIdList('i18n_int_enum_vals',ob.eventtax,'\\\\|',',','n/a') as risk_event_hierarchy_desc,
ob.oblowner as obligation_owner_user_lanid_names,
lookupValueByUserList('actorinfo',ob.oblowner,'\\\\$;',',','n/a') AS obligation_owner_user_desc,
ob.oblstatus as obligation_status_id,
lookupValueByIdList('i18n_int_enum_vals',ob.oblstatus,'\\\\|',',','n/a') as obligation_status_desc,
ob.sourceapplic as source_application_id,
lookupValueByIdList('i18n_int_enum_vals',ob.sourceapplic,'\\\\|',',','n/a') as source_application_desc,
ob.sourceid as source_id_desc,
ob.obldesc as obligation_desc_id,
ob.oblextract as obligation_extract_id,
'Openpages' AS source
FROM obligation ob
LEFT JOIN ai ai_creator
ON ob.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ob.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ob.mgl_obligation_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_obligation"
    },
    {
      "stepDescription": "create sat_key_indicator",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_keyperfindicator/",
          "viewName": "rt_keyperfindicator",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH key_indicator AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.keyperfindicator_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_keyperfindicator a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_keyperfindicator')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
ki.keyperfindicator_bk AS key_indicator_bk,
ki.keyperfindicator_id AS key_indicator_id,
ki.description AS keyindicator_desc,
ki.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
ki.creation_date AS creation_ts,
TO_DATE(ki.creation_date) AS creation_date,
ki.parent_folder AS parent_folder_id,
ki.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
ki.name00 AS key_indicator_name,
ki.modification_date AS modification_ts,
TO_DATE(ki.modification_date) AS modification_date,
ki.full_path AS key_indicator_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPIs/','/') AS resource_key_indicator_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPIs/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPIs/','/'), ki.name00)-2) As key_indicator_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPIs/','/'),'/')[2] AS key_indicator_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPIs/','/'),'/')[3] AS key_indicator_folder_division_name,
ki.agreed_response AS agreed_response_id,
lookupValueByIdList('i18n_int_enum_vals',ki.agreed_response,'\\\\|',',','n/a') AS agreed_response_desc,
ki.classification AS classification_id,
lookupValueByIdList('i18n_int_enum_vals',ki.classification,'\\\\|',',','n/a')  AS classification_desc,
ki.breach_status AS breach_status_id,
lookupValueByIdList('i18n_int_enum_vals',ki.breach_status,'\\\\|',',','n/a')  AS breach_status_desc,
ki.collection_status AS collection_status_id,
lookupValueByIdList('i18n_int_enum_vals',ki.collection_status,'\\\\|',',','n/a') AS collection_status_desc,
ki.das_id AS das_id_desc,
ki.data_source AS data_source_desc,
ki.direction_information AS trend_information_id,
lookupValueByIdList('i18n_int_enum_vals',ki.direction_information,'\\\\|',',','n/a') AS trend_information_desc,
ki.frequency AS frequency_id,
lookupValueByIdList('i18n_int_enum_vals',ki.frequency,'\\\\|',',','n/a') AS frequency_desc,
ki.frequency_offset_days AS frequency_offset_days_no,
ki.indicator_description AS indicator_description,
ki.indicator_status AS indicator_status_id,
lookupValueByIdList('i18n_int_enum_vals',ki.indicator_status,'\\\\|',',','n/a') AS indicator_status_desc,
ki.indicator_trend AS indicator_trend_id,
lookupValueByIdList('i18n_int_enum_vals',ki.indicator_trend,'\\\\|',',','n/a') AS indicator_trend_desc,
ki.lock00 AS lock_id,
lookupValueByIdList('i18n_int_enum_vals',ki.lock00,'\\\\|',',','n/a') AS lock_desc,
ki.lock_after_how_many_da AS lock_after_how_many_days_no,
ki.measurement_rules AS measurement_rules_desc,
ki.nature AS nature_id,
lookupValueByIdList('i18n_int_enum_vals',ki.nature,'\\\\|',',','n/a') AS nature_desc,
ki.npa_milestone AS npa_milestone_id,
lookupValueByIdList('i18n_int_enum_vals',ki.npa_milestone,'\\\\|',',','n/a') AS npa_milestone_desc,
ki.owner AS owner_owner_user_lanid_name,
lookupValueByUserList('actorinfo',ki.owner,'\\\\$;',',','n/a') AS owner_user_desc,
ki.recorded_by AS recorded_by_user_lanid_name,
lookupValueByUserList('actorinfo',ki.recorded_by,'\\\\$;',',','n/a') AS recorded_by_user_desc,
ki.recurs_every AS recurs_every_id,
lookupValueByIdList('i18n_int_enum_vals',ki.recurs_every,'\\\\|',',','n/a') AS recurs_every_desc,
ki.red_threshold AS red_threshold_no,
ki.type00 AS type_id,
lookupValueByIdList('i18n_int_enum_vals',ki.type00,'\\\\|',',','n/a') AS type_desc,
ki.unit_of_measure AS unit_of_measure_id,
lookupValueByIdList('i18n_int_enum_vals',ki.unit_of_measure,'\\\\|',',','n/a') AS unit_of_measure_desc,
ki.value00 AS value_no,
ki.value_date AS value_date,
ki.value_range AS value_range_desc,
ki.yellow_threshold AS yellow_threshold_no,
'Openpages' AS source
FROM key_indicator ki
LEFT JOIN ai ai_creator
ON ki.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON ki.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON ki.keyperfindicator_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_key_indicator"
    },
    {
      "stepDescription": "create sat_key_indicator_value",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_keyperfindicatorvalue/",
          "viewName": "rt_keyperfindicatorvalue",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH key_indicator_value AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.keyperfindicatorval_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_keyperfindicatorvalue a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_keyperfindicatorvalue')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
kiv.keyperfindicatorvalue_bk AS key_indicator_value_bk,
kiv.keyperfindicatorval_id AS key_indicator_value_id,
kiv.description AS key_indicator_value_desc,
kiv.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
kiv.creation_date AS creation_ts,
TO_DATE(kiv.creation_date) AS creation_date,
kiv.parent_folder AS parent_folder_id,
kiv.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
kiv.name00 AS key_indicator_value_name,
kiv.modification_date AS modification_ts,
TO_DATE(kiv.modification_date) AS modification_date,
kiv.full_path AS key_indicator_value_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPI Values/','/') AS resource_key_indicator_value_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPI Values/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPI Values/','/'), kiv.name00)-2) As key_indicator_value_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPI Values/','/'),'/')[2] AS key_indicator_value_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/KPI Values/','/'),'/')[3] AS key_indicator_value_folder_division_name,
kiv.classification AS classification_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.classification,'\\\\|',',','n/a') AS classification_desc,
kiv.breach_status AS breach_status_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.breach_status,'\\\\|',',','n/a') AS breach_status_desc,
kiv.collection_status AS collection_status_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.collection_status,'\\\\|',',','n/a') AS collection_status_desc,
kiv.comments AS comments_desc,
kiv.das_id AS das_id_desc,
kiv.direction_information AS trend_information_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.direction_information,'\\\\|',',','n/a') AS trend_information_desc,
kiv.indicator_description AS indicator_description,
kiv.indicator_quantity AS indicator_quantity_no,
kiv.indicator_rating AS indicator_rating_desc,
kiv.indicator_value_rating AS indicator_value_rating_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.indicator_value_rating,'\\\\|',',','n/a') AS indicator_value_rating_desc,
kiv.indicator_value_status AS indicator_value_status_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.indicator_value_status,'\\\\|',',','n/a') AS indicator_value_status_desc,
kiv.lock00 AS lock_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.lock00,'\\\\|',',','n/a') AS lock_desc,
kiv.lock_after_how_many_da AS lock_after_how_many_days_no,
kiv.recorded_by AS recorded_by_user_lanid_name,
lookupValueByUserList('actorinfo',kiv.recorded_by,'\\\\$;',',','n/a') AS recorded_by_user_desc,
kiv.red_threshold AS red_threshold_no,
kiv.total_quantity AS total_quantity_no,
kiv.trigger_run AS trigger_run_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.trigger_run,'\\\\|',',','n/a') AS trigger_run_desc,
kiv.type00 AS type_id,
lookupValueByIdList('i18n_int_enum_vals',kiv.type00,'\\\\|',',','n/a') AS type_desc,
kiv.value00 AS value_no,
kiv.value_date AS value_date,
kiv.yellow_threshold AS yellow_threshold_no,
'Openpages' AS source
FROM key_indicator_value kiv
LEFT JOIN ai ai_creator
ON kiv.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON kiv.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON kiv.keyperfindicatorval_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_key_indicator_value"
    },
    {
      "stepDescription": "create sat_activity_log",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo  WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/activity_log/",
          "viewName": "activity_log",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/assettypes/",
          "viewName": "assettypes",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/op_metadata/",
          "viewName": "op_metadata",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH activity_log AS (
SELECT a.* 
FROM activity_log a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='activity_log'
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
),
at AS
(
SELECT * FROM assettypes
),
om AS
(
SELECT * FROM op_metadata  WHERE batch_id IN (SELECT max(distinct batch_id) FROM op_metadata)
)
SELECT
al.resourceid AS resourceid,
at.name AS object_name,
al.propertyname AS property_name,
al.old_value as old_value_id,
al.bundlename as field_group,
al.propertydefid as field_id,
CASE WHEN om.columntype in ('MultiUserId', 'UserId') THEN lookupValueByUserList('actorinfo',al.old_value,'\\\\$;',',','n/a') ELSE al.old_value END AS old_value_desc,
al.value as value_id,
CASE WHEN om.columntype in ('MultiUserId', 'UserId') THEN lookupValueByUserList('actorinfo',al.value,'\\\\$;',',','n/a') ELSE al.value END AS value_desc,
al.modifiedbyid AS last_modified_by_user_id,
ai_modifiedbyid.name AS last_modified_by_user_lanid_name,
ai_modifiedbyid.description AS last_modified_by_user_desc,
al.modifydate AS modification_ts,
TO_DATE(al.modifydate) AS modification_date,
'Openpages' AS source
FROM activity_log al
LEFT JOIN ai ai_modifiedbyid
ON al.modifiedbyid =ai_modifiedbyid.actorid
LEFT JOIN re
ON al.resourceid=re.resourceid
LEFT JOIN at
ON re.assettypeid=at.assettypeid
LEFT JOIN om
on al.propertydefid=om.field_id and at.assettypeid=om.object_type_id",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_activity_log"
    },
    {
      "stepDescription": "create sat_interpretation",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_mgl_interpretation/",
          "viewName": "rt_mgl_interpretation",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH interpretation AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.mgl_interpretation_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_mgl_interpretation a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_mgl_interpretation')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
i.mgl_interpretation_bk AS interpretation_bk,
i.mgl_interpretation_id AS interpretation_id,
i.name00 AS interpretation_name,
i.description AS interpretation_desc,
i.creation_date AS creation_ts,
TO_DATE(i.creation_date) AS creation_date,
i.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
i.parent_folder AS parent_folder_id,
i.full_path AS interpretation_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Interpretation/','/') AS resource_interpretation_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Interpretation/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Interpretation/','/'), i.name00)-2) As interpretation_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Interpretation/','/'),'/')[2] AS interpretation_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_Interpretation/','/'),'/')[3] AS interpretation_folder_division_name,
i.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
i.modification_date AS modification_ts,
TO_DATE(i.modification_date) AS modification_date,
i.detail_page_url as interpretation_op_url_text,
TO_DATE(i.intappdate) AS interpretation_approval_date,
i.intapprover as interpretation_approvers_user_lanid_name,
lookupValueByUserList('actorinfo',i.intapprover,'\\\\$;',',','n/a') AS interpretation_approvers_user_desc,
i.intcomments as interpretation_comments_desc,
i.intdasid as interpretation_das_id_desc,
TO_DATE(i.intdatenxtrev) as interpretation_next_review_deadline_date,
i.intowner as interpretation_owner_user_lanid_name,
lookupValueByUserList('actorinfo',i.intowner,'\\\\$;',',','n/a') AS interpretation_owner_user_desc,
i.intrateratio as interpretation_rating_rationale_desc,
i.intrating as interpretation_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.intrating,'\\\\|',',','n/a') AS interpretation_rating_desc,
i.intstat as interpretation_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.intstat,'\\\\|',',','n/a') AS interpretation_status_desc,
i.intstatratio as interpretation_status_rationale_desc,
i.intteam as interpretation_team_id,
lookupValueByIdList('i18n_int_enum_vals',i.intteam,'\\\\|',',','n/a') AS interpretation_team_desc,
'Openpages' AS source
FROM interpretation i
LEFT JOIN ai ai_creator
ON i.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON i.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON i.mgl_interpretation_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_interpretation"
    },
    {
      "stepDescription": "create sat_interpretation_version",
      "stepType": "transformation",
      "stepCategory": "object",
      "lookupList": [
        {
          "lookupListName": "i18n_int_enum_vals",
          "lookupListType": "id",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/i18n_int_enum_vals/",
          "lookupListSourceSQL": "SELECT CAST(ENUM_VAL_ID AS Long) AS ENUM_VAL_ID, LCLTXT_NAME FROM i18n_int_enum_vals WHERE I18N_LOCALE_ID = 7 and batch_id in (SELECT MAX(batch_id) from i18n_int_enum_vals) and ENUM_VAL_ID IS NOT NULL AND LCLTXT_NAME IS NOT NULL"
        },
        {
          "lookupListName": "actorinfo",
          "lookupListType": "user",
          "lookupListSourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "lookupListSourceSQL": "SELECT NAME, DESCRIPTION FROM actorinfo WHERE batch_id in (SELECT MAX(batch_id) from actorinfo WHERE i18n_locale_id=7) and NAME IS NOT NULL AND DESCRIPTION IS NOT NULL"
        }
      ],
      "sourceJoinTableList": [
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/rt_mgl_intver/",
          "viewName": "rt_mgl_intver",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/actorinfo/",
          "viewName": "actorinfo",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/aud_log_batch/",
          "viewName": "aud_log_batch",
          "cacheFlag": "false"
        },
        {
          "sourcePath": "s3a://${s3Bucket}/${s3ProjectValidatedFolder}/resources/",
          "viewName": "resources",
          "cacheFlag": "false"
        }
      ],
      "sourceJoinSQL": "
WITH interpretation_ver AS (
SELECT * from (SELECT a.*,row_number() OVER (PARTITION BY a.mgl_intver_id ORDER BY a.batch_id desc) AS row_nbr
FROM rt_mgl_intver a INNER JOIN aud_log_batch b ON a.batch_id=b.batch_id WHERE b.status='success' AND table_name='rt_mgl_intver')i WHERE row_nbr=1
),
ai AS
(
SELECT * FROM actorinfo WHERE batch_id IN (SELECT max(distinct batch_id) FROM actorinfo WHERE i18n_locale_id=7)
),
re AS
(
SELECT * FROM resources
)
SELECT
i.mgl_intver_bk AS interpretation_version_bk,
i.mgl_intver_id AS interpretation_version_id,
i.name00 AS interpretation_version_name,
i.description AS interpretation_version_desc,
i.creation_date AS creation_ts,
TO_DATE(i.creation_date) AS creation_date,
i.creator AS created_by_user_id,
ai_creator.name AS created_by_user_lanid_name,
ai_creator.description AS created_by_user_desc,
i.parent_folder AS parent_folder_id,
i.full_path AS interpretation_version_full_path_desc,
REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_IntVer/','/') AS resource_interpretation_version_full_path_desc,
SUBSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_IntVer/','/'),1,INSTR(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_IntVer/','/'), i.name00)-2) As interpretation_version_folder_path_desc,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_IntVer/','/'),'/')[2] AS interpretation_version_folder_group_name,
split(REPLACE(re.fullpath,'/_op_sox/Project/Default/ICDocumentation/MGL_IntVer/','/'),'/')[3] AS interpretation_version_folder_division_name,
i.checked_in_by AS last_modified_by_user_id,
ai_checked_in_by.name AS last_modified_by_user_lanid_name,
ai_checked_in_by.description AS last_modified_by_user_desc,
i.modification_date AS modification_ts,
TO_DATE(i.modification_date) AS modification_date,
i.detail_page_url as interpretation_version_op_url_text,
TO_DATE(i.intappdate) AS interpretation_approval_date,
i.intapprover as interpretation_approvers_user_lanid_name,
lookupValueByUserList('actorinfo',i.intapprover,'\\\\$;',',','n/a') AS interpretation_approvers_user_desc,
i.intcomments as interpretation_comments_desc,
i.intdasid as interpretation_das_id_desc,
TO_DATE(i.intdatenxtrev) as interpretation_next_review_deadline_date,
i.intowner as interpretation_owner_user_lanid_name,
lookupValueByUserList('actorinfo',i.intowner,'\\\\$;',',','n/a') AS interpretation_owner_user_desc,
i.intrateratio as interpretation_rating_rationale_desc,
i.intrating as interpretation_rating_id,
lookupValueByIdList('i18n_int_enum_vals',i.intrating,'\\\\|',',','n/a') AS interpretation_rating_desc,
i.intstat as interpretation_status_id,
lookupValueByIdList('i18n_int_enum_vals',i.intstat,'\\\\|',',','n/a') AS interpretation_status_desc,
i.intstatratio as interpretation_status_rationale_desc,
i.intteam as interpretation_team_id,
lookupValueByIdList('i18n_int_enum_vals',i.intteam,'\\\\|',',','n/a') AS interpretation_team_desc,
'Openpages' AS source
FROM interpretation_ver i
LEFT JOIN ai ai_creator
ON i.creator =ai_creator.actorid
LEFT JOIN ai ai_checked_in_by
ON i.checked_in_by =ai_checked_in_by.actorid
LEFT JOIN re
ON i.mgl_intver_id=re.resourceid
WHERE re.isdeleted = 0",
    "preDerivedColumnList": [
    ],
    "postDerivedColumnList": [
      {
        "colExpression": "cast(date_format(date_add(current_date(),-1),'yyyyMMddHHmmss') as bigint)",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "business_effective_timestamp"
      },
      {
        "colExpression": "current_timestamp()",
        "colSource": "sparkSQL",
        "colSourceExpression": "",
        "colAlias": "load_timestamp"
      },
      {
        "colExpression": "CAST(batchId AS LONG)",
        "colSource": "param",
        "colSourceExpression": "batchId",
        "colAlias": "batch_id"
      }
    ],
    "partitionColumnList": [
      "business_effective_timestamp"
    ],
    "numOfWriteRepartition": 2,
    "hiveTableName": "sat_interpretation_version"
    }
  ]
}
